# coding: utf-8

"""
    Trend Micro Deep Security API

    Copyright 2018 - 2020 Trend Micro Incorporated.<br/>Get protected, stay secured, and keep informed with Trend Micro Deep Security's new RESTful API. Access system data and manage security configurations to automate your security workflows and integrate Deep Security into your CI/CD pipeline.  # noqa: E501

    OpenAPI spec version: 20.0.3
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from deepsecurity.models.setting_value import SettingValue  # noqa: F401,E501


class ComputerSettings(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'log_inspection_setting_severity_clipping_agent_event_send_syslog_level_min': 'SettingValue',
        'firewall_setting_engine_option_connections_cleanup_max': 'SettingValue',
        'firewall_setting_engine_option_verify_tcp_checksum_enabled': 'SettingValue',
        'anti_malware_setting_scan_cache_on_demand_config_id': 'SettingValue',
        'application_control_setting_shared_ruleset_id': 'SettingValue',
        'web_reputation_setting_smart_protection_server_connection_lost_warning_enabled': 'SettingValue',
        'application_control_setting_execution_enforcement_level': 'SettingValue',
        'web_reputation_setting_blocked_url_domains': 'SettingValue',
        'firewall_setting_engine_option_syn_sent_timeout': 'SettingValue',
        'platform_setting_agent_self_protection_password': 'SettingValue',
        'firewall_setting_reconnaissance_block_tcp_xmas_attack_duration': 'SettingValue',
        'intrusion_prevention_setting_virtual_and_container_network_scan_enabled': 'SettingValue',
        'log_inspection_setting_syslog_config_id': 'SettingValue',
        'firewall_setting_engine_option_debug_mode_enabled': 'SettingValue',
        'firewall_setting_virtual_and_container_network_scan_enabled': 'SettingValue',
        'anti_malware_setting_file_hash_sha256_enabled': 'SettingValue',
        'firewall_setting_reconnaissance_notify_fingerprint_probe_enabled': 'SettingValue',
        'firewall_setting_event_log_file_retain_num': 'SettingValue',
        'firewall_setting_anti_evasion_check_tcp_paws_zero': 'SettingValue',
        'anti_malware_setting_connected_threat_defense_use_control_manager_suspicious_object_list_enabled': 'SettingValue',
        'intrusion_prevention_setting_engine_option_fragmented_ip_keep_max': 'SettingValue',
        'firewall_setting_engine_option_drop6_to4_bogons_addresses_enabled': 'SettingValue',
        'log_inspection_setting_severity_clipping_agent_event_store_level_min': 'SettingValue',
        'platform_setting_scan_cache_concurrency_max': 'SettingValue',
        'anti_malware_setting_syslog_config_id': 'SettingValue',
        'firewall_setting_anti_evasion_tcp_paws_window_policy': 'SettingValue',
        'firewall_setting_reconnaissance_detect_tcp_xmas_attack_enabled': 'SettingValue',
        'application_control_setting_ruleset_mode': 'SettingValue',
        'anti_malware_setting_smart_protection_global_server_use_proxy_enabled': 'SettingValue',
        'web_reputation_setting_smart_protection_local_server_allow_off_domain_global': 'SettingValue',
        'integrity_monitoring_setting_combined_mode_protection_source': 'SettingValue',
        'firewall_setting_engine_option_close_wait_timeout': 'SettingValue',
        'platform_setting_scan_open_port_list_id': 'SettingValue',
        'platform_setting_agent_self_protection_password_enabled': 'SettingValue',
        'firewall_setting_engine_option_ack_timeout': 'SettingValue',
        'firewall_setting_event_log_file_cached_entries_stale_time': 'SettingValue',
        'firewall_setting_combined_mode_protection_source': 'SettingValue',
        'platform_setting_agent_events_send_interval': 'SettingValue',
        'platform_setting_inactive_agent_cleanup_override_enabled': 'SettingValue',
        'firewall_setting_failure_response_engine_system': 'SettingValue',
        'platform_setting_relay_state': 'SettingValue',
        'firewall_setting_engine_option_drop_evasive_retransmit_enabled': 'SettingValue',
        'activity_monitoring_setting_indicator_enabled': 'SettingValue',
        'intrusion_prevention_setting_engine_option_fragmented_ip_timeout': 'SettingValue',
        'firewall_setting_anti_evasion_check_tcp_zero_flags': 'SettingValue',
        'web_reputation_setting_smart_protection_global_server_use_proxy_enabled': 'SettingValue',
        'intrusion_prevention_setting_nsx_security_tagging_prevent_mode_level': 'SettingValue',
        'firewall_setting_reconnaissance_notify_tcp_xmas_attack_enabled': 'SettingValue',
        'firewall_setting_engine_option_udp_timeout': 'SettingValue',
        'web_reputation_setting_smart_protection_local_server_enabled': 'SettingValue',
        'firewall_setting_engine_option_tcp_mss_limit': 'SettingValue',
        'firewall_setting_engine_option_cold_start_timeout': 'SettingValue',
        'firewall_setting_engine_option_established_timeout': 'SettingValue',
        'anti_malware_setting_identified_files_space_max_mbytes': 'SettingValue',
        'firewall_setting_engine_option_allow_null_ip_enabled': 'SettingValue',
        'platform_setting_notifications_suppress_popups_enabled': 'SettingValue',
        'firewall_setting_anti_evasion_check_tcp_rst_fin_flags': 'SettingValue',
        'firewall_setting_engine_option_disconnect_timeout': 'SettingValue',
        'firewall_setting_engine_option_close_timeout': 'SettingValue',
        'firewall_setting_engine_option_tunnel_depth_max_exceeded_action': 'SettingValue',
        'firewall_setting_reconnaissance_detect_tcp_null_scan_enabled': 'SettingValue',
        'platform_setting_smart_protection_anti_malware_global_server_proxy_id': 'SettingValue',
        'firewall_setting_engine_option_filter_ipv4_tunnels': 'SettingValue',
        'web_reputation_setting_smart_protection_local_server_urls': 'SettingValue',
        'firewall_setting_engine_option_log_one_packet_period': 'SettingValue',
        'firewall_setting_engine_option_filter_ipv6_tunnels': 'SettingValue',
        'firewall_setting_anti_evasion_check_tcp_congestion_flags': 'SettingValue',
        'platform_setting_heartbeat_missed_alert_threshold': 'SettingValue',
        'intrusion_prevention_setting_engine_options_enabled': 'SettingValue',
        'firewall_setting_engine_option_connections_num_udp_max': 'SettingValue',
        'integrity_monitoring_setting_auto_apply_recommendations_enabled': 'SettingValue',
        'firewall_setting_engine_option_tunnel_depth_max': 'SettingValue',
        'firewall_setting_engine_option_drop_unknown_ssl_protocol_enabled': 'SettingValue',
        'anti_malware_setting_nsx_security_tagging_value': 'SettingValue',
        'intrusion_prevention_setting_log_data_rule_first_match_enabled': 'SettingValue',
        'firewall_setting_engine_option_logging_policy': 'SettingValue',
        'platform_setting_troubleshooting_logging_level': 'SettingValue',
        'anti_malware_setting_virtual_appliance_on_demand_scan_cache_entries_max': 'SettingValue',
        'web_reputation_setting_combined_mode_protection_source': 'SettingValue',
        'firewall_setting_engine_option_closing_timeout': 'SettingValue',
        'firewall_setting_anti_evasion_check_paws': 'SettingValue',
        'intrusion_prevention_setting_auto_apply_recommendations_enabled': 'SettingValue',
        'firewall_setting_reconnaissance_detect_fingerprint_probe_enabled': 'SettingValue',
        'anti_malware_setting_nsx_security_tagging_remove_on_clean_scan_enabled': 'SettingValue',
        'firewall_setting_engine_option_log_packet_length_max': 'SettingValue',
        'firewall_setting_engine_option_drop_teredo_anomalies_enabled': 'SettingValue',
        'web_reputation_setting_security_level': 'SettingValue',
        'firewall_setting_engine_option_drop_ipv6_site_local_addresses_enabled': 'SettingValue',
        'activity_monitoring_setting_activity_enabled': 'SettingValue',
        'firewall_setting_engine_option_strict_terodo_port_check_enabled': 'SettingValue',
        'web_reputation_setting_blocked_url_keywords': 'SettingValue',
        'web_reputation_setting_syslog_config_id': 'SettingValue',
        'firewall_setting_failure_response_packet_sanity_check': 'SettingValue',
        'firewall_setting_network_engine_mode': 'SettingValue',
        'firewall_setting_event_log_file_size_max': 'SettingValue',
        'anti_malware_setting_malware_scan_multithreaded_processing_enabled': 'SettingValue',
        'firewall_setting_reconnaissance_detect_tcp_syn_fin_scan_enabled': 'SettingValue',
        'firewall_setting_engine_option_drop_ip_zero_payload_enabled': 'SettingValue',
        'firewall_setting_engine_option_block_ipv6_agent8_and_earlier_enabled': 'SettingValue',
        'intrusion_prevention_setting_engine_option_fragmented_ip_packet_send_icmp_enabled': 'SettingValue',
        'anti_malware_setting_predictive_machine_learning_exceptions': 'SettingValue',
        'firewall_setting_engine_option_log_events_per_second_max': 'SettingValue',
        'firewall_setting_engine_option_ssl_session_time': 'SettingValue',
        'anti_malware_setting_behavior_monitoring_scan_exclusion_list': 'SettingValue',
        'anti_malware_setting_smart_protection_global_server_enabled': 'SettingValue',
        'firewall_setting_engine_option_log_one_packet_within_period_enabled': 'SettingValue',
        'firewall_setting_engine_option_generate_connection_events_icmp_enabled': 'SettingValue',
        'platform_setting_heartbeat_inactive_vm_offline_alert_enabled': 'SettingValue',
        'web_reputation_setting_smart_protection_web_reputation_global_server_proxy_id': 'SettingValue',
        'anti_malware_setting_nsx_security_tagging_enabled': 'SettingValue',
        'firewall_setting_anti_evasion_check_fragmented_packets': 'SettingValue',
        'firewall_setting_engine_option_connections_num_icmp_max': 'SettingValue',
        'firewall_setting_anti_evasion_check_tcp_split_handshake': 'SettingValue',
        'anti_malware_setting_combined_mode_protection_source': 'SettingValue',
        'firewall_setting_engine_option_event_nodes_max': 'SettingValue',
        'web_reputation_setting_monitor_port_list_id': 'SettingValue',
        'application_control_setting_syslog_config_id': 'SettingValue',
        'firewall_setting_anti_evasion_check_out_no_connection': 'SettingValue',
        'firewall_setting_engine_option_block_ipv6_agent9_and_later_enabled': 'SettingValue',
        'integrity_monitoring_setting_virtual_appliance_optimization_scan_cache_entries_max': 'SettingValue',
        'firewall_setting_reconnaissance_notify_tcp_null_scan_enabled': 'SettingValue',
        'firewall_setting_engine_option_ignore_status_code1': 'SettingValue',
        'firewall_setting_engine_option_ignore_status_code0': 'SettingValue',
        'firewall_setting_engine_option_ignore_status_code2': 'SettingValue',
        'firewall_setting_engine_option_ssl_session_size': 'SettingValue',
        'anti_malware_setting_scan_cache_real_time_config_id': 'SettingValue',
        'platform_setting_recommendation_ongoing_scans_interval': 'SettingValue',
        'platform_setting_smart_protection_global_server_use_proxy_enabled': 'SettingValue',
        'firewall_setting_interface_limit_one_active_enabled': 'SettingValue',
        'firewall_setting_anti_evasion_check_tcp_checksum': 'SettingValue',
        'firewall_setting_engine_option_drop_ipv6_ext_type0_enabled': 'SettingValue',
        'anti_malware_setting_scan_file_size_max_mbytes': 'SettingValue',
        'firewall_setting_engine_option_generate_connection_events_tcp_enabled': 'SettingValue',
        'anti_malware_setting_file_hash_size_max_mbytes': 'SettingValue',
        'firewall_setting_event_log_file_cached_entries_life_time': 'SettingValue',
        'platform_setting_smart_protection_global_server_proxy_id': 'SettingValue',
        'log_inspection_setting_auto_apply_recommendations_enabled': 'SettingValue',
        'anti_malware_setting_connected_threat_defense_suspicious_file_ddan_submission_enabled': 'SettingValue',
        'web_reputation_setting_blocking_page_link': 'SettingValue',
        'firewall_setting_syslog_config_id': 'SettingValue',
        'platform_setting_agent_communications_direction': 'SettingValue',
        'integrity_monitoring_setting_scan_cache_config_id': 'SettingValue',
        'anti_malware_setting_document_exploit_protection_rule_exceptions': 'SettingValue',
        'firewall_setting_anti_evasion_check_tcp_syn_with_data': 'SettingValue',
        'anti_malware_setting_file_hash_enabled': 'SettingValue',
        'firewall_setting_reconnaissance_block_fingerprint_probe_duration': 'SettingValue',
        'firewall_setting_engine_option_drop_ipv6_bogons_addresses_enabled': 'SettingValue',
        'firewall_setting_engine_option_boot_start_timeout': 'SettingValue',
        'firewall_setting_engine_option_connections_num_tcp_max': 'SettingValue',
        'firewall_setting_anti_evasion_security_posture': 'SettingValue',
        'firewall_setting_interface_patterns': 'SettingValue',
        'firewall_setting_interface_isolation_enabled': 'SettingValue',
        'anti_malware_setting_virtual_appliance_real_time_scan_cache_entries_max': 'SettingValue',
        'firewall_setting_events_out_of_allowed_policy_enabled': 'SettingValue',
        'firewall_setting_anti_evasion_check_evasive_retransmit': 'SettingValue',
        'firewall_setting_engine_option_icmp_timeout': 'SettingValue',
        'integrity_monitoring_setting_syslog_config_id': 'SettingValue',
        'firewall_setting_engine_option_connection_cleanup_timeout': 'SettingValue',
        'anti_malware_setting_smart_protection_local_server_allow_off_domain_global': 'SettingValue',
        'firewall_setting_reconnaissance_notify_tcp_syn_fin_scan_enabled': 'SettingValue',
        'firewall_setting_engine_option_error_timeout': 'SettingValue',
        'web_reputation_setting_allowed_urls': 'SettingValue',
        'firewall_setting_reconnaissance_notify_network_or_port_scan_enabled': 'SettingValue',
        'firewall_setting_engine_option_fin_wait1_timeout': 'SettingValue',
        'firewall_setting_engine_option_generate_connection_events_udp_enabled': 'SettingValue',
        'activity_monitoring_setting_syslog_config_id': 'SettingValue',
        'firewall_setting_anti_evasion_check_tcp_syn_rst_flags': 'SettingValue',
        'anti_malware_setting_spyware_approved_list': 'SettingValue',
        'firewall_setting_anti_evasion_check_tcp_urgent_flags': 'SettingValue',
        'intrusion_prevention_setting_nsx_security_tagging_detect_mode_level': 'SettingValue',
        'intrusion_prevention_setting_engine_option_fragmented_ip_unconcerned_mac_address_bypass_enabled': 'SettingValue',
        'firewall_setting_engine_option_log_all_packet_data_enabled': 'SettingValue',
        'firewall_setting_anti_evasion_check_tcp_syn_fin_flags': 'SettingValue',
        'platform_setting_heartbeat_interval': 'SettingValue',
        'firewall_setting_engine_option_fragment_size_min': 'SettingValue',
        'anti_malware_setting_smart_protection_server_connection_lost_warning_enabled': 'SettingValue',
        'firewall_setting_reconnaissance_block_network_or_port_scan_duration': 'SettingValue',
        'integrity_monitoring_setting_content_hash_algorithm': 'SettingValue',
        'anti_malware_setting_smart_scan_state': 'SettingValue',
        'firewall_setting_config_package_exceeds_alert_max_enabled': 'SettingValue',
        'platform_setting_environment_variable_overrides': 'SettingValue',
        'firewall_setting_engine_option_fragment_offset_min': 'SettingValue',
        'anti_malware_setting_smart_protection_local_server_urls': 'SettingValue',
        'firewall_setting_engine_option_syn_rcvd_timeout': 'SettingValue',
        'firewall_setting_event_log_file_cached_entries_num': 'SettingValue',
        'firewall_setting_engine_option_force_allow_icmp_type3_code4': 'SettingValue',
        'firewall_setting_reconnaissance_block_tcp_null_scan_duration': 'SettingValue',
        'platform_setting_smart_protection_global_server_enabled': 'SettingValue',
        'integrity_monitoring_setting_realtime_enabled': 'SettingValue',
        'firewall_setting_engine_option_last_ack_timeout': 'SettingValue',
        'firewall_setting_reconnaissance_exclude_ip_list_id': 'SettingValue',
        'platform_setting_agent_self_protection_enabled': 'SettingValue',
        'firewall_setting_engine_option_drop_ipv6_reserved_addresses_enabled': 'SettingValue',
        'firewall_setting_anti_evasion_check_fin_no_connection': 'SettingValue',
        'firewall_setting_engine_option_debug_packet_num_max': 'SettingValue',
        'firewall_setting_engine_option_bypass_cisco_waas_connections_enabled': 'SettingValue',
        'firewall_setting_reconnaissance_enabled': 'SettingValue',
        'platform_setting_heartbeat_local_time_shift_alert_threshold': 'SettingValue',
        'anti_malware_setting_file_hash_md5_enabled': 'SettingValue',
        'firewall_setting_reconnaissance_detect_network_or_port_scan_enabled': 'SettingValue',
        'firewall_setting_engine_option_silent_tcp_connection_drop_enabled': 'SettingValue',
        'firewall_setting_engine_option_block_same_src_dst_ip_enabled': 'SettingValue',
        'firewall_setting_engine_option_force_allow_dhcp_dns': 'SettingValue',
        'firewall_setting_reconnaissance_include_ip_list_id': 'SettingValue',
        'firewall_setting_engine_options_enabled': 'SettingValue',
        'firewall_setting_reconnaissance_block_tcp_syn_fin_scan_duration': 'SettingValue',
        'web_reputation_setting_security_block_untested_pages_enabled': 'SettingValue',
        'web_reputation_setting_allowed_url_domains': 'SettingValue',
        'firewall_setting_event_log_file_ignore_source_ip_list_id': 'SettingValue',
        'firewall_setting_engine_option_drop_ipv6_fragments_lower_than_min_mtu_enabled': 'SettingValue',
        'platform_setting_auto_assign_new_intrusion_prevention_rules_enabled': 'SettingValue',
        'firewall_setting_anti_evasion_check_rst_no_connection': 'SettingValue',
        'web_reputation_setting_blocked_urls': 'SettingValue',
        'platform_setting_combined_mode_network_group_protection_source': 'SettingValue',
        'web_reputation_setting_alerting_enabled': 'SettingValue',
        'anti_malware_setting_nsx_security_tagging_on_remediation_failure_enabled': 'SettingValue',
        'integrity_monitoring_setting_cpu_usage_level': 'SettingValue',
        'platform_setting_auto_update_anti_malware_engine_enabled': 'SettingValue',
        'intrusion_prevention_setting_combined_mode_protection_source': 'SettingValue'
    }

    attribute_map = {
        'log_inspection_setting_severity_clipping_agent_event_send_syslog_level_min': 'logInspectionSettingSeverityClippingAgentEventSendSyslogLevelMin',
        'firewall_setting_engine_option_connections_cleanup_max': 'firewallSettingEngineOptionConnectionsCleanupMax',
        'firewall_setting_engine_option_verify_tcp_checksum_enabled': 'firewallSettingEngineOptionVerifyTcpChecksumEnabled',
        'anti_malware_setting_scan_cache_on_demand_config_id': 'antiMalwareSettingScanCacheOnDemandConfigId',
        'application_control_setting_shared_ruleset_id': 'applicationControlSettingSharedRulesetId',
        'web_reputation_setting_smart_protection_server_connection_lost_warning_enabled': 'webReputationSettingSmartProtectionServerConnectionLostWarningEnabled',
        'application_control_setting_execution_enforcement_level': 'applicationControlSettingExecutionEnforcementLevel',
        'web_reputation_setting_blocked_url_domains': 'webReputationSettingBlockedUrlDomains',
        'firewall_setting_engine_option_syn_sent_timeout': 'firewallSettingEngineOptionSynSentTimeout',
        'platform_setting_agent_self_protection_password': 'platformSettingAgentSelfProtectionPassword',
        'firewall_setting_reconnaissance_block_tcp_xmas_attack_duration': 'firewallSettingReconnaissanceBlockTcpXmasAttackDuration',
        'intrusion_prevention_setting_virtual_and_container_network_scan_enabled': 'intrusionPreventionSettingVirtualAndContainerNetworkScanEnabled',
        'log_inspection_setting_syslog_config_id': 'logInspectionSettingSyslogConfigId',
        'firewall_setting_engine_option_debug_mode_enabled': 'firewallSettingEngineOptionDebugModeEnabled',
        'firewall_setting_virtual_and_container_network_scan_enabled': 'firewallSettingVirtualAndContainerNetworkScanEnabled',
        'anti_malware_setting_file_hash_sha256_enabled': 'antiMalwareSettingFileHashSha256Enabled',
        'firewall_setting_reconnaissance_notify_fingerprint_probe_enabled': 'firewallSettingReconnaissanceNotifyFingerprintProbeEnabled',
        'firewall_setting_event_log_file_retain_num': 'firewallSettingEventLogFileRetainNum',
        'firewall_setting_anti_evasion_check_tcp_paws_zero': 'firewallSettingAntiEvasionCheckTcpPawsZero',
        'anti_malware_setting_connected_threat_defense_use_control_manager_suspicious_object_list_enabled': 'antiMalwareSettingConnectedThreatDefenseUseControlManagerSuspiciousObjectListEnabled',
        'intrusion_prevention_setting_engine_option_fragmented_ip_keep_max': 'intrusionPreventionSettingEngineOptionFragmentedIpKeepMax',
        'firewall_setting_engine_option_drop6_to4_bogons_addresses_enabled': 'firewallSettingEngineOptionDrop6To4BogonsAddressesEnabled',
        'log_inspection_setting_severity_clipping_agent_event_store_level_min': 'logInspectionSettingSeverityClippingAgentEventStoreLevelMin',
        'platform_setting_scan_cache_concurrency_max': 'platformSettingScanCacheConcurrencyMax',
        'anti_malware_setting_syslog_config_id': 'antiMalwareSettingSyslogConfigId',
        'firewall_setting_anti_evasion_tcp_paws_window_policy': 'firewallSettingAntiEvasionTcpPawsWindowPolicy',
        'firewall_setting_reconnaissance_detect_tcp_xmas_attack_enabled': 'firewallSettingReconnaissanceDetectTcpXmasAttackEnabled',
        'application_control_setting_ruleset_mode': 'applicationControlSettingRulesetMode',
        'anti_malware_setting_smart_protection_global_server_use_proxy_enabled': 'antiMalwareSettingSmartProtectionGlobalServerUseProxyEnabled',
        'web_reputation_setting_smart_protection_local_server_allow_off_domain_global': 'webReputationSettingSmartProtectionLocalServerAllowOffDomainGlobal',
        'integrity_monitoring_setting_combined_mode_protection_source': 'integrityMonitoringSettingCombinedModeProtectionSource',
        'firewall_setting_engine_option_close_wait_timeout': 'firewallSettingEngineOptionCloseWaitTimeout',
        'platform_setting_scan_open_port_list_id': 'platformSettingScanOpenPortListId',
        'platform_setting_agent_self_protection_password_enabled': 'platformSettingAgentSelfProtectionPasswordEnabled',
        'firewall_setting_engine_option_ack_timeout': 'firewallSettingEngineOptionAckTimeout',
        'firewall_setting_event_log_file_cached_entries_stale_time': 'firewallSettingEventLogFileCachedEntriesStaleTime',
        'firewall_setting_combined_mode_protection_source': 'firewallSettingCombinedModeProtectionSource',
        'platform_setting_agent_events_send_interval': 'platformSettingAgentEventsSendInterval',
        'platform_setting_inactive_agent_cleanup_override_enabled': 'platformSettingInactiveAgentCleanupOverrideEnabled',
        'firewall_setting_failure_response_engine_system': 'firewallSettingFailureResponseEngineSystem',
        'platform_setting_relay_state': 'platformSettingRelayState',
        'firewall_setting_engine_option_drop_evasive_retransmit_enabled': 'firewallSettingEngineOptionDropEvasiveRetransmitEnabled',
        'activity_monitoring_setting_indicator_enabled': 'activityMonitoringSettingIndicatorEnabled',
        'intrusion_prevention_setting_engine_option_fragmented_ip_timeout': 'intrusionPreventionSettingEngineOptionFragmentedIpTimeout',
        'firewall_setting_anti_evasion_check_tcp_zero_flags': 'firewallSettingAntiEvasionCheckTcpZeroFlags',
        'web_reputation_setting_smart_protection_global_server_use_proxy_enabled': 'webReputationSettingSmartProtectionGlobalServerUseProxyEnabled',
        'intrusion_prevention_setting_nsx_security_tagging_prevent_mode_level': 'intrusionPreventionSettingNsxSecurityTaggingPreventModeLevel',
        'firewall_setting_reconnaissance_notify_tcp_xmas_attack_enabled': 'firewallSettingReconnaissanceNotifyTcpXmasAttackEnabled',
        'firewall_setting_engine_option_udp_timeout': 'firewallSettingEngineOptionUdpTimeout',
        'web_reputation_setting_smart_protection_local_server_enabled': 'webReputationSettingSmartProtectionLocalServerEnabled',
        'firewall_setting_engine_option_tcp_mss_limit': 'firewallSettingEngineOptionTcpMssLimit',
        'firewall_setting_engine_option_cold_start_timeout': 'firewallSettingEngineOptionColdStartTimeout',
        'firewall_setting_engine_option_established_timeout': 'firewallSettingEngineOptionEstablishedTimeout',
        'anti_malware_setting_identified_files_space_max_mbytes': 'antiMalwareSettingIdentifiedFilesSpaceMaxMbytes',
        'firewall_setting_engine_option_allow_null_ip_enabled': 'firewallSettingEngineOptionAllowNullIpEnabled',
        'platform_setting_notifications_suppress_popups_enabled': 'platformSettingNotificationsSuppressPopupsEnabled',
        'firewall_setting_anti_evasion_check_tcp_rst_fin_flags': 'firewallSettingAntiEvasionCheckTcpRstFinFlags',
        'firewall_setting_engine_option_disconnect_timeout': 'firewallSettingEngineOptionDisconnectTimeout',
        'firewall_setting_engine_option_close_timeout': 'firewallSettingEngineOptionCloseTimeout',
        'firewall_setting_engine_option_tunnel_depth_max_exceeded_action': 'firewallSettingEngineOptionTunnelDepthMaxExceededAction',
        'firewall_setting_reconnaissance_detect_tcp_null_scan_enabled': 'firewallSettingReconnaissanceDetectTcpNullScanEnabled',
        'platform_setting_smart_protection_anti_malware_global_server_proxy_id': 'platformSettingSmartProtectionAntiMalwareGlobalServerProxyId',
        'firewall_setting_engine_option_filter_ipv4_tunnels': 'firewallSettingEngineOptionFilterIpv4Tunnels',
        'web_reputation_setting_smart_protection_local_server_urls': 'webReputationSettingSmartProtectionLocalServerUrls',
        'firewall_setting_engine_option_log_one_packet_period': 'firewallSettingEngineOptionLogOnePacketPeriod',
        'firewall_setting_engine_option_filter_ipv6_tunnels': 'firewallSettingEngineOptionFilterIpv6Tunnels',
        'firewall_setting_anti_evasion_check_tcp_congestion_flags': 'firewallSettingAntiEvasionCheckTcpCongestionFlags',
        'platform_setting_heartbeat_missed_alert_threshold': 'platformSettingHeartbeatMissedAlertThreshold',
        'intrusion_prevention_setting_engine_options_enabled': 'intrusionPreventionSettingEngineOptionsEnabled',
        'firewall_setting_engine_option_connections_num_udp_max': 'firewallSettingEngineOptionConnectionsNumUdpMax',
        'integrity_monitoring_setting_auto_apply_recommendations_enabled': 'integrityMonitoringSettingAutoApplyRecommendationsEnabled',
        'firewall_setting_engine_option_tunnel_depth_max': 'firewallSettingEngineOptionTunnelDepthMax',
        'firewall_setting_engine_option_drop_unknown_ssl_protocol_enabled': 'firewallSettingEngineOptionDropUnknownSslProtocolEnabled',
        'anti_malware_setting_nsx_security_tagging_value': 'antiMalwareSettingNsxSecurityTaggingValue',
        'intrusion_prevention_setting_log_data_rule_first_match_enabled': 'intrusionPreventionSettingLogDataRuleFirstMatchEnabled',
        'firewall_setting_engine_option_logging_policy': 'firewallSettingEngineOptionLoggingPolicy',
        'platform_setting_troubleshooting_logging_level': 'platformSettingTroubleshootingLoggingLevel',
        'anti_malware_setting_virtual_appliance_on_demand_scan_cache_entries_max': 'antiMalwareSettingVirtualApplianceOnDemandScanCacheEntriesMax',
        'web_reputation_setting_combined_mode_protection_source': 'webReputationSettingCombinedModeProtectionSource',
        'firewall_setting_engine_option_closing_timeout': 'firewallSettingEngineOptionClosingTimeout',
        'firewall_setting_anti_evasion_check_paws': 'firewallSettingAntiEvasionCheckPaws',
        'intrusion_prevention_setting_auto_apply_recommendations_enabled': 'intrusionPreventionSettingAutoApplyRecommendationsEnabled',
        'firewall_setting_reconnaissance_detect_fingerprint_probe_enabled': 'firewallSettingReconnaissanceDetectFingerprintProbeEnabled',
        'anti_malware_setting_nsx_security_tagging_remove_on_clean_scan_enabled': 'antiMalwareSettingNsxSecurityTaggingRemoveOnCleanScanEnabled',
        'firewall_setting_engine_option_log_packet_length_max': 'firewallSettingEngineOptionLogPacketLengthMax',
        'firewall_setting_engine_option_drop_teredo_anomalies_enabled': 'firewallSettingEngineOptionDropTeredoAnomaliesEnabled',
        'web_reputation_setting_security_level': 'webReputationSettingSecurityLevel',
        'firewall_setting_engine_option_drop_ipv6_site_local_addresses_enabled': 'firewallSettingEngineOptionDropIpv6SiteLocalAddressesEnabled',
        'activity_monitoring_setting_activity_enabled': 'activityMonitoringSettingActivityEnabled',
        'firewall_setting_engine_option_strict_terodo_port_check_enabled': 'firewallSettingEngineOptionStrictTerodoPortCheckEnabled',
        'web_reputation_setting_blocked_url_keywords': 'webReputationSettingBlockedUrlKeywords',
        'web_reputation_setting_syslog_config_id': 'webReputationSettingSyslogConfigId',
        'firewall_setting_failure_response_packet_sanity_check': 'firewallSettingFailureResponsePacketSanityCheck',
        'firewall_setting_network_engine_mode': 'firewallSettingNetworkEngineMode',
        'firewall_setting_event_log_file_size_max': 'firewallSettingEventLogFileSizeMax',
        'anti_malware_setting_malware_scan_multithreaded_processing_enabled': 'antiMalwareSettingMalwareScanMultithreadedProcessingEnabled',
        'firewall_setting_reconnaissance_detect_tcp_syn_fin_scan_enabled': 'firewallSettingReconnaissanceDetectTcpSynFinScanEnabled',
        'firewall_setting_engine_option_drop_ip_zero_payload_enabled': 'firewallSettingEngineOptionDropIpZeroPayloadEnabled',
        'firewall_setting_engine_option_block_ipv6_agent8_and_earlier_enabled': 'firewallSettingEngineOptionBlockIpv6Agent8AndEarlierEnabled',
        'intrusion_prevention_setting_engine_option_fragmented_ip_packet_send_icmp_enabled': 'intrusionPreventionSettingEngineOptionFragmentedIpPacketSendIcmpEnabled',
        'anti_malware_setting_predictive_machine_learning_exceptions': 'antiMalwareSettingPredictiveMachineLearningExceptions',
        'firewall_setting_engine_option_log_events_per_second_max': 'firewallSettingEngineOptionLogEventsPerSecondMax',
        'firewall_setting_engine_option_ssl_session_time': 'firewallSettingEngineOptionSslSessionTime',
        'anti_malware_setting_behavior_monitoring_scan_exclusion_list': 'antiMalwareSettingBehaviorMonitoringScanExclusionList',
        'anti_malware_setting_smart_protection_global_server_enabled': 'antiMalwareSettingSmartProtectionGlobalServerEnabled',
        'firewall_setting_engine_option_log_one_packet_within_period_enabled': 'firewallSettingEngineOptionLogOnePacketWithinPeriodEnabled',
        'firewall_setting_engine_option_generate_connection_events_icmp_enabled': 'firewallSettingEngineOptionGenerateConnectionEventsIcmpEnabled',
        'platform_setting_heartbeat_inactive_vm_offline_alert_enabled': 'platformSettingHeartbeatInactiveVmOfflineAlertEnabled',
        'web_reputation_setting_smart_protection_web_reputation_global_server_proxy_id': 'webReputationSettingSmartProtectionWebReputationGlobalServerProxyId',
        'anti_malware_setting_nsx_security_tagging_enabled': 'antiMalwareSettingNsxSecurityTaggingEnabled',
        'firewall_setting_anti_evasion_check_fragmented_packets': 'firewallSettingAntiEvasionCheckFragmentedPackets',
        'firewall_setting_engine_option_connections_num_icmp_max': 'firewallSettingEngineOptionConnectionsNumIcmpMax',
        'firewall_setting_anti_evasion_check_tcp_split_handshake': 'firewallSettingAntiEvasionCheckTcpSplitHandshake',
        'anti_malware_setting_combined_mode_protection_source': 'antiMalwareSettingCombinedModeProtectionSource',
        'firewall_setting_engine_option_event_nodes_max': 'firewallSettingEngineOptionEventNodesMax',
        'web_reputation_setting_monitor_port_list_id': 'webReputationSettingMonitorPortListId',
        'application_control_setting_syslog_config_id': 'applicationControlSettingSyslogConfigId',
        'firewall_setting_anti_evasion_check_out_no_connection': 'firewallSettingAntiEvasionCheckOutNoConnection',
        'firewall_setting_engine_option_block_ipv6_agent9_and_later_enabled': 'firewallSettingEngineOptionBlockIpv6Agent9AndLaterEnabled',
        'integrity_monitoring_setting_virtual_appliance_optimization_scan_cache_entries_max': 'integrityMonitoringSettingVirtualApplianceOptimizationScanCacheEntriesMax',
        'firewall_setting_reconnaissance_notify_tcp_null_scan_enabled': 'firewallSettingReconnaissanceNotifyTcpNullScanEnabled',
        'firewall_setting_engine_option_ignore_status_code1': 'firewallSettingEngineOptionIgnoreStatusCode1',
        'firewall_setting_engine_option_ignore_status_code0': 'firewallSettingEngineOptionIgnoreStatusCode0',
        'firewall_setting_engine_option_ignore_status_code2': 'firewallSettingEngineOptionIgnoreStatusCode2',
        'firewall_setting_engine_option_ssl_session_size': 'firewallSettingEngineOptionSslSessionSize',
        'anti_malware_setting_scan_cache_real_time_config_id': 'antiMalwareSettingScanCacheRealTimeConfigId',
        'platform_setting_recommendation_ongoing_scans_interval': 'platformSettingRecommendationOngoingScansInterval',
        'platform_setting_smart_protection_global_server_use_proxy_enabled': 'platformSettingSmartProtectionGlobalServerUseProxyEnabled',
        'firewall_setting_interface_limit_one_active_enabled': 'firewallSettingInterfaceLimitOneActiveEnabled',
        'firewall_setting_anti_evasion_check_tcp_checksum': 'firewallSettingAntiEvasionCheckTcpChecksum',
        'firewall_setting_engine_option_drop_ipv6_ext_type0_enabled': 'firewallSettingEngineOptionDropIpv6ExtType0Enabled',
        'anti_malware_setting_scan_file_size_max_mbytes': 'antiMalwareSettingScanFileSizeMaxMbytes',
        'firewall_setting_engine_option_generate_connection_events_tcp_enabled': 'firewallSettingEngineOptionGenerateConnectionEventsTcpEnabled',
        'anti_malware_setting_file_hash_size_max_mbytes': 'antiMalwareSettingFileHashSizeMaxMbytes',
        'firewall_setting_event_log_file_cached_entries_life_time': 'firewallSettingEventLogFileCachedEntriesLifeTime',
        'platform_setting_smart_protection_global_server_proxy_id': 'platformSettingSmartProtectionGlobalServerProxyId',
        'log_inspection_setting_auto_apply_recommendations_enabled': 'logInspectionSettingAutoApplyRecommendationsEnabled',
        'anti_malware_setting_connected_threat_defense_suspicious_file_ddan_submission_enabled': 'antiMalwareSettingConnectedThreatDefenseSuspiciousFileDdanSubmissionEnabled',
        'web_reputation_setting_blocking_page_link': 'webReputationSettingBlockingPageLink',
        'firewall_setting_syslog_config_id': 'firewallSettingSyslogConfigId',
        'platform_setting_agent_communications_direction': 'platformSettingAgentCommunicationsDirection',
        'integrity_monitoring_setting_scan_cache_config_id': 'integrityMonitoringSettingScanCacheConfigId',
        'anti_malware_setting_document_exploit_protection_rule_exceptions': 'antiMalwareSettingDocumentExploitProtectionRuleExceptions',
        'firewall_setting_anti_evasion_check_tcp_syn_with_data': 'firewallSettingAntiEvasionCheckTcpSynWithData',
        'anti_malware_setting_file_hash_enabled': 'antiMalwareSettingFileHashEnabled',
        'firewall_setting_reconnaissance_block_fingerprint_probe_duration': 'firewallSettingReconnaissanceBlockFingerprintProbeDuration',
        'firewall_setting_engine_option_drop_ipv6_bogons_addresses_enabled': 'firewallSettingEngineOptionDropIpv6BogonsAddressesEnabled',
        'firewall_setting_engine_option_boot_start_timeout': 'firewallSettingEngineOptionBootStartTimeout',
        'firewall_setting_engine_option_connections_num_tcp_max': 'firewallSettingEngineOptionConnectionsNumTcpMax',
        'firewall_setting_anti_evasion_security_posture': 'firewallSettingAntiEvasionSecurityPosture',
        'firewall_setting_interface_patterns': 'firewallSettingInterfacePatterns',
        'firewall_setting_interface_isolation_enabled': 'firewallSettingInterfaceIsolationEnabled',
        'anti_malware_setting_virtual_appliance_real_time_scan_cache_entries_max': 'antiMalwareSettingVirtualApplianceRealTimeScanCacheEntriesMax',
        'firewall_setting_events_out_of_allowed_policy_enabled': 'firewallSettingEventsOutOfAllowedPolicyEnabled',
        'firewall_setting_anti_evasion_check_evasive_retransmit': 'firewallSettingAntiEvasionCheckEvasiveRetransmit',
        'firewall_setting_engine_option_icmp_timeout': 'firewallSettingEngineOptionIcmpTimeout',
        'integrity_monitoring_setting_syslog_config_id': 'integrityMonitoringSettingSyslogConfigId',
        'firewall_setting_engine_option_connection_cleanup_timeout': 'firewallSettingEngineOptionConnectionCleanupTimeout',
        'anti_malware_setting_smart_protection_local_server_allow_off_domain_global': 'antiMalwareSettingSmartProtectionLocalServerAllowOffDomainGlobal',
        'firewall_setting_reconnaissance_notify_tcp_syn_fin_scan_enabled': 'firewallSettingReconnaissanceNotifyTcpSynFinScanEnabled',
        'firewall_setting_engine_option_error_timeout': 'firewallSettingEngineOptionErrorTimeout',
        'web_reputation_setting_allowed_urls': 'webReputationSettingAllowedUrls',
        'firewall_setting_reconnaissance_notify_network_or_port_scan_enabled': 'firewallSettingReconnaissanceNotifyNetworkOrPortScanEnabled',
        'firewall_setting_engine_option_fin_wait1_timeout': 'firewallSettingEngineOptionFinWait1Timeout',
        'firewall_setting_engine_option_generate_connection_events_udp_enabled': 'firewallSettingEngineOptionGenerateConnectionEventsUdpEnabled',
        'activity_monitoring_setting_syslog_config_id': 'activityMonitoringSettingSyslogConfigId',
        'firewall_setting_anti_evasion_check_tcp_syn_rst_flags': 'firewallSettingAntiEvasionCheckTcpSynRstFlags',
        'anti_malware_setting_spyware_approved_list': 'antiMalwareSettingSpywareApprovedList',
        'firewall_setting_anti_evasion_check_tcp_urgent_flags': 'firewallSettingAntiEvasionCheckTcpUrgentFlags',
        'intrusion_prevention_setting_nsx_security_tagging_detect_mode_level': 'intrusionPreventionSettingNsxSecurityTaggingDetectModeLevel',
        'intrusion_prevention_setting_engine_option_fragmented_ip_unconcerned_mac_address_bypass_enabled': 'intrusionPreventionSettingEngineOptionFragmentedIpUnconcernedMacAddressBypassEnabled',
        'firewall_setting_engine_option_log_all_packet_data_enabled': 'firewallSettingEngineOptionLogAllPacketDataEnabled',
        'firewall_setting_anti_evasion_check_tcp_syn_fin_flags': 'firewallSettingAntiEvasionCheckTcpSynFinFlags',
        'platform_setting_heartbeat_interval': 'platformSettingHeartbeatInterval',
        'firewall_setting_engine_option_fragment_size_min': 'firewallSettingEngineOptionFragmentSizeMin',
        'anti_malware_setting_smart_protection_server_connection_lost_warning_enabled': 'antiMalwareSettingSmartProtectionServerConnectionLostWarningEnabled',
        'firewall_setting_reconnaissance_block_network_or_port_scan_duration': 'firewallSettingReconnaissanceBlockNetworkOrPortScanDuration',
        'integrity_monitoring_setting_content_hash_algorithm': 'integrityMonitoringSettingContentHashAlgorithm',
        'anti_malware_setting_smart_scan_state': 'antiMalwareSettingSmartScanState',
        'firewall_setting_config_package_exceeds_alert_max_enabled': 'firewallSettingConfigPackageExceedsAlertMaxEnabled',
        'platform_setting_environment_variable_overrides': 'platformSettingEnvironmentVariableOverrides',
        'firewall_setting_engine_option_fragment_offset_min': 'firewallSettingEngineOptionFragmentOffsetMin',
        'anti_malware_setting_smart_protection_local_server_urls': 'antiMalwareSettingSmartProtectionLocalServerUrls',
        'firewall_setting_engine_option_syn_rcvd_timeout': 'firewallSettingEngineOptionSynRcvdTimeout',
        'firewall_setting_event_log_file_cached_entries_num': 'firewallSettingEventLogFileCachedEntriesNum',
        'firewall_setting_engine_option_force_allow_icmp_type3_code4': 'firewallSettingEngineOptionForceAllowIcmpType3Code4',
        'firewall_setting_reconnaissance_block_tcp_null_scan_duration': 'firewallSettingReconnaissanceBlockTcpNullScanDuration',
        'platform_setting_smart_protection_global_server_enabled': 'platformSettingSmartProtectionGlobalServerEnabled',
        'integrity_monitoring_setting_realtime_enabled': 'integrityMonitoringSettingRealtimeEnabled',
        'firewall_setting_engine_option_last_ack_timeout': 'firewallSettingEngineOptionLastAckTimeout',
        'firewall_setting_reconnaissance_exclude_ip_list_id': 'firewallSettingReconnaissanceExcludeIpListId',
        'platform_setting_agent_self_protection_enabled': 'platformSettingAgentSelfProtectionEnabled',
        'firewall_setting_engine_option_drop_ipv6_reserved_addresses_enabled': 'firewallSettingEngineOptionDropIpv6ReservedAddressesEnabled',
        'firewall_setting_anti_evasion_check_fin_no_connection': 'firewallSettingAntiEvasionCheckFinNoConnection',
        'firewall_setting_engine_option_debug_packet_num_max': 'firewallSettingEngineOptionDebugPacketNumMax',
        'firewall_setting_engine_option_bypass_cisco_waas_connections_enabled': 'firewallSettingEngineOptionBypassCiscoWaasConnectionsEnabled',
        'firewall_setting_reconnaissance_enabled': 'firewallSettingReconnaissanceEnabled',
        'platform_setting_heartbeat_local_time_shift_alert_threshold': 'platformSettingHeartbeatLocalTimeShiftAlertThreshold',
        'anti_malware_setting_file_hash_md5_enabled': 'antiMalwareSettingFileHashMd5Enabled',
        'firewall_setting_reconnaissance_detect_network_or_port_scan_enabled': 'firewallSettingReconnaissanceDetectNetworkOrPortScanEnabled',
        'firewall_setting_engine_option_silent_tcp_connection_drop_enabled': 'firewallSettingEngineOptionSilentTcpConnectionDropEnabled',
        'firewall_setting_engine_option_block_same_src_dst_ip_enabled': 'firewallSettingEngineOptionBlockSameSrcDstIpEnabled',
        'firewall_setting_engine_option_force_allow_dhcp_dns': 'firewallSettingEngineOptionForceAllowDhcpDns',
        'firewall_setting_reconnaissance_include_ip_list_id': 'firewallSettingReconnaissanceIncludeIpListId',
        'firewall_setting_engine_options_enabled': 'firewallSettingEngineOptionsEnabled',
        'firewall_setting_reconnaissance_block_tcp_syn_fin_scan_duration': 'firewallSettingReconnaissanceBlockTcpSynFinScanDuration',
        'web_reputation_setting_security_block_untested_pages_enabled': 'webReputationSettingSecurityBlockUntestedPagesEnabled',
        'web_reputation_setting_allowed_url_domains': 'webReputationSettingAllowedUrlDomains',
        'firewall_setting_event_log_file_ignore_source_ip_list_id': 'firewallSettingEventLogFileIgnoreSourceIpListId',
        'firewall_setting_engine_option_drop_ipv6_fragments_lower_than_min_mtu_enabled': 'firewallSettingEngineOptionDropIpv6FragmentsLowerThanMinMtuEnabled',
        'platform_setting_auto_assign_new_intrusion_prevention_rules_enabled': 'platformSettingAutoAssignNewIntrusionPreventionRulesEnabled',
        'firewall_setting_anti_evasion_check_rst_no_connection': 'firewallSettingAntiEvasionCheckRstNoConnection',
        'web_reputation_setting_blocked_urls': 'webReputationSettingBlockedUrls',
        'platform_setting_combined_mode_network_group_protection_source': 'platformSettingCombinedModeNetworkGroupProtectionSource',
        'web_reputation_setting_alerting_enabled': 'webReputationSettingAlertingEnabled',
        'anti_malware_setting_nsx_security_tagging_on_remediation_failure_enabled': 'antiMalwareSettingNsxSecurityTaggingOnRemediationFailureEnabled',
        'integrity_monitoring_setting_cpu_usage_level': 'integrityMonitoringSettingCpuUsageLevel',
        'platform_setting_auto_update_anti_malware_engine_enabled': 'platformSettingAutoUpdateAntiMalwareEngineEnabled',
        'intrusion_prevention_setting_combined_mode_protection_source': 'intrusionPreventionSettingCombinedModeProtectionSource'
    }

    def __init__(self, log_inspection_setting_severity_clipping_agent_event_send_syslog_level_min=None, firewall_setting_engine_option_connections_cleanup_max=None, firewall_setting_engine_option_verify_tcp_checksum_enabled=None, anti_malware_setting_scan_cache_on_demand_config_id=None, application_control_setting_shared_ruleset_id=None, web_reputation_setting_smart_protection_server_connection_lost_warning_enabled=None, application_control_setting_execution_enforcement_level=None, web_reputation_setting_blocked_url_domains=None, firewall_setting_engine_option_syn_sent_timeout=None, platform_setting_agent_self_protection_password=None, firewall_setting_reconnaissance_block_tcp_xmas_attack_duration=None, intrusion_prevention_setting_virtual_and_container_network_scan_enabled=None, log_inspection_setting_syslog_config_id=None, firewall_setting_engine_option_debug_mode_enabled=None, firewall_setting_virtual_and_container_network_scan_enabled=None, anti_malware_setting_file_hash_sha256_enabled=None, firewall_setting_reconnaissance_notify_fingerprint_probe_enabled=None, firewall_setting_event_log_file_retain_num=None, firewall_setting_anti_evasion_check_tcp_paws_zero=None, anti_malware_setting_connected_threat_defense_use_control_manager_suspicious_object_list_enabled=None, intrusion_prevention_setting_engine_option_fragmented_ip_keep_max=None, firewall_setting_engine_option_drop6_to4_bogons_addresses_enabled=None, log_inspection_setting_severity_clipping_agent_event_store_level_min=None, platform_setting_scan_cache_concurrency_max=None, anti_malware_setting_syslog_config_id=None, firewall_setting_anti_evasion_tcp_paws_window_policy=None, firewall_setting_reconnaissance_detect_tcp_xmas_attack_enabled=None, application_control_setting_ruleset_mode=None, anti_malware_setting_smart_protection_global_server_use_proxy_enabled=None, web_reputation_setting_smart_protection_local_server_allow_off_domain_global=None, integrity_monitoring_setting_combined_mode_protection_source=None, firewall_setting_engine_option_close_wait_timeout=None, platform_setting_scan_open_port_list_id=None, platform_setting_agent_self_protection_password_enabled=None, firewall_setting_engine_option_ack_timeout=None, firewall_setting_event_log_file_cached_entries_stale_time=None, firewall_setting_combined_mode_protection_source=None, platform_setting_agent_events_send_interval=None, platform_setting_inactive_agent_cleanup_override_enabled=None, firewall_setting_failure_response_engine_system=None, platform_setting_relay_state=None, firewall_setting_engine_option_drop_evasive_retransmit_enabled=None, activity_monitoring_setting_indicator_enabled=None, intrusion_prevention_setting_engine_option_fragmented_ip_timeout=None, firewall_setting_anti_evasion_check_tcp_zero_flags=None, web_reputation_setting_smart_protection_global_server_use_proxy_enabled=None, intrusion_prevention_setting_nsx_security_tagging_prevent_mode_level=None, firewall_setting_reconnaissance_notify_tcp_xmas_attack_enabled=None, firewall_setting_engine_option_udp_timeout=None, web_reputation_setting_smart_protection_local_server_enabled=None, firewall_setting_engine_option_tcp_mss_limit=None, firewall_setting_engine_option_cold_start_timeout=None, firewall_setting_engine_option_established_timeout=None, anti_malware_setting_identified_files_space_max_mbytes=None, firewall_setting_engine_option_allow_null_ip_enabled=None, platform_setting_notifications_suppress_popups_enabled=None, firewall_setting_anti_evasion_check_tcp_rst_fin_flags=None, firewall_setting_engine_option_disconnect_timeout=None, firewall_setting_engine_option_close_timeout=None, firewall_setting_engine_option_tunnel_depth_max_exceeded_action=None, firewall_setting_reconnaissance_detect_tcp_null_scan_enabled=None, platform_setting_smart_protection_anti_malware_global_server_proxy_id=None, firewall_setting_engine_option_filter_ipv4_tunnels=None, web_reputation_setting_smart_protection_local_server_urls=None, firewall_setting_engine_option_log_one_packet_period=None, firewall_setting_engine_option_filter_ipv6_tunnels=None, firewall_setting_anti_evasion_check_tcp_congestion_flags=None, platform_setting_heartbeat_missed_alert_threshold=None, intrusion_prevention_setting_engine_options_enabled=None, firewall_setting_engine_option_connections_num_udp_max=None, integrity_monitoring_setting_auto_apply_recommendations_enabled=None, firewall_setting_engine_option_tunnel_depth_max=None, firewall_setting_engine_option_drop_unknown_ssl_protocol_enabled=None, anti_malware_setting_nsx_security_tagging_value=None, intrusion_prevention_setting_log_data_rule_first_match_enabled=None, firewall_setting_engine_option_logging_policy=None, platform_setting_troubleshooting_logging_level=None, anti_malware_setting_virtual_appliance_on_demand_scan_cache_entries_max=None, web_reputation_setting_combined_mode_protection_source=None, firewall_setting_engine_option_closing_timeout=None, firewall_setting_anti_evasion_check_paws=None, intrusion_prevention_setting_auto_apply_recommendations_enabled=None, firewall_setting_reconnaissance_detect_fingerprint_probe_enabled=None, anti_malware_setting_nsx_security_tagging_remove_on_clean_scan_enabled=None, firewall_setting_engine_option_log_packet_length_max=None, firewall_setting_engine_option_drop_teredo_anomalies_enabled=None, web_reputation_setting_security_level=None, firewall_setting_engine_option_drop_ipv6_site_local_addresses_enabled=None, activity_monitoring_setting_activity_enabled=None, firewall_setting_engine_option_strict_terodo_port_check_enabled=None, web_reputation_setting_blocked_url_keywords=None, web_reputation_setting_syslog_config_id=None, firewall_setting_failure_response_packet_sanity_check=None, firewall_setting_network_engine_mode=None, firewall_setting_event_log_file_size_max=None, anti_malware_setting_malware_scan_multithreaded_processing_enabled=None, firewall_setting_reconnaissance_detect_tcp_syn_fin_scan_enabled=None, firewall_setting_engine_option_drop_ip_zero_payload_enabled=None, firewall_setting_engine_option_block_ipv6_agent8_and_earlier_enabled=None, intrusion_prevention_setting_engine_option_fragmented_ip_packet_send_icmp_enabled=None, anti_malware_setting_predictive_machine_learning_exceptions=None, firewall_setting_engine_option_log_events_per_second_max=None, firewall_setting_engine_option_ssl_session_time=None, anti_malware_setting_behavior_monitoring_scan_exclusion_list=None, anti_malware_setting_smart_protection_global_server_enabled=None, firewall_setting_engine_option_log_one_packet_within_period_enabled=None, firewall_setting_engine_option_generate_connection_events_icmp_enabled=None, platform_setting_heartbeat_inactive_vm_offline_alert_enabled=None, web_reputation_setting_smart_protection_web_reputation_global_server_proxy_id=None, anti_malware_setting_nsx_security_tagging_enabled=None, firewall_setting_anti_evasion_check_fragmented_packets=None, firewall_setting_engine_option_connections_num_icmp_max=None, firewall_setting_anti_evasion_check_tcp_split_handshake=None, anti_malware_setting_combined_mode_protection_source=None, firewall_setting_engine_option_event_nodes_max=None, web_reputation_setting_monitor_port_list_id=None, application_control_setting_syslog_config_id=None, firewall_setting_anti_evasion_check_out_no_connection=None, firewall_setting_engine_option_block_ipv6_agent9_and_later_enabled=None, integrity_monitoring_setting_virtual_appliance_optimization_scan_cache_entries_max=None, firewall_setting_reconnaissance_notify_tcp_null_scan_enabled=None, firewall_setting_engine_option_ignore_status_code1=None, firewall_setting_engine_option_ignore_status_code0=None, firewall_setting_engine_option_ignore_status_code2=None, firewall_setting_engine_option_ssl_session_size=None, anti_malware_setting_scan_cache_real_time_config_id=None, platform_setting_recommendation_ongoing_scans_interval=None, platform_setting_smart_protection_global_server_use_proxy_enabled=None, firewall_setting_interface_limit_one_active_enabled=None, firewall_setting_anti_evasion_check_tcp_checksum=None, firewall_setting_engine_option_drop_ipv6_ext_type0_enabled=None, anti_malware_setting_scan_file_size_max_mbytes=None, firewall_setting_engine_option_generate_connection_events_tcp_enabled=None, anti_malware_setting_file_hash_size_max_mbytes=None, firewall_setting_event_log_file_cached_entries_life_time=None, platform_setting_smart_protection_global_server_proxy_id=None, log_inspection_setting_auto_apply_recommendations_enabled=None, anti_malware_setting_connected_threat_defense_suspicious_file_ddan_submission_enabled=None, web_reputation_setting_blocking_page_link=None, firewall_setting_syslog_config_id=None, platform_setting_agent_communications_direction=None, integrity_monitoring_setting_scan_cache_config_id=None, anti_malware_setting_document_exploit_protection_rule_exceptions=None, firewall_setting_anti_evasion_check_tcp_syn_with_data=None, anti_malware_setting_file_hash_enabled=None, firewall_setting_reconnaissance_block_fingerprint_probe_duration=None, firewall_setting_engine_option_drop_ipv6_bogons_addresses_enabled=None, firewall_setting_engine_option_boot_start_timeout=None, firewall_setting_engine_option_connections_num_tcp_max=None, firewall_setting_anti_evasion_security_posture=None, firewall_setting_interface_patterns=None, firewall_setting_interface_isolation_enabled=None, anti_malware_setting_virtual_appliance_real_time_scan_cache_entries_max=None, firewall_setting_events_out_of_allowed_policy_enabled=None, firewall_setting_anti_evasion_check_evasive_retransmit=None, firewall_setting_engine_option_icmp_timeout=None, integrity_monitoring_setting_syslog_config_id=None, firewall_setting_engine_option_connection_cleanup_timeout=None, anti_malware_setting_smart_protection_local_server_allow_off_domain_global=None, firewall_setting_reconnaissance_notify_tcp_syn_fin_scan_enabled=None, firewall_setting_engine_option_error_timeout=None, web_reputation_setting_allowed_urls=None, firewall_setting_reconnaissance_notify_network_or_port_scan_enabled=None, firewall_setting_engine_option_fin_wait1_timeout=None, firewall_setting_engine_option_generate_connection_events_udp_enabled=None, activity_monitoring_setting_syslog_config_id=None, firewall_setting_anti_evasion_check_tcp_syn_rst_flags=None, anti_malware_setting_spyware_approved_list=None, firewall_setting_anti_evasion_check_tcp_urgent_flags=None, intrusion_prevention_setting_nsx_security_tagging_detect_mode_level=None, intrusion_prevention_setting_engine_option_fragmented_ip_unconcerned_mac_address_bypass_enabled=None, firewall_setting_engine_option_log_all_packet_data_enabled=None, firewall_setting_anti_evasion_check_tcp_syn_fin_flags=None, platform_setting_heartbeat_interval=None, firewall_setting_engine_option_fragment_size_min=None, anti_malware_setting_smart_protection_server_connection_lost_warning_enabled=None, firewall_setting_reconnaissance_block_network_or_port_scan_duration=None, integrity_monitoring_setting_content_hash_algorithm=None, anti_malware_setting_smart_scan_state=None, firewall_setting_config_package_exceeds_alert_max_enabled=None, platform_setting_environment_variable_overrides=None, firewall_setting_engine_option_fragment_offset_min=None, anti_malware_setting_smart_protection_local_server_urls=None, firewall_setting_engine_option_syn_rcvd_timeout=None, firewall_setting_event_log_file_cached_entries_num=None, firewall_setting_engine_option_force_allow_icmp_type3_code4=None, firewall_setting_reconnaissance_block_tcp_null_scan_duration=None, platform_setting_smart_protection_global_server_enabled=None, integrity_monitoring_setting_realtime_enabled=None, firewall_setting_engine_option_last_ack_timeout=None, firewall_setting_reconnaissance_exclude_ip_list_id=None, platform_setting_agent_self_protection_enabled=None, firewall_setting_engine_option_drop_ipv6_reserved_addresses_enabled=None, firewall_setting_anti_evasion_check_fin_no_connection=None, firewall_setting_engine_option_debug_packet_num_max=None, firewall_setting_engine_option_bypass_cisco_waas_connections_enabled=None, firewall_setting_reconnaissance_enabled=None, platform_setting_heartbeat_local_time_shift_alert_threshold=None, anti_malware_setting_file_hash_md5_enabled=None, firewall_setting_reconnaissance_detect_network_or_port_scan_enabled=None, firewall_setting_engine_option_silent_tcp_connection_drop_enabled=None, firewall_setting_engine_option_block_same_src_dst_ip_enabled=None, firewall_setting_engine_option_force_allow_dhcp_dns=None, firewall_setting_reconnaissance_include_ip_list_id=None, firewall_setting_engine_options_enabled=None, firewall_setting_reconnaissance_block_tcp_syn_fin_scan_duration=None, web_reputation_setting_security_block_untested_pages_enabled=None, web_reputation_setting_allowed_url_domains=None, firewall_setting_event_log_file_ignore_source_ip_list_id=None, firewall_setting_engine_option_drop_ipv6_fragments_lower_than_min_mtu_enabled=None, platform_setting_auto_assign_new_intrusion_prevention_rules_enabled=None, firewall_setting_anti_evasion_check_rst_no_connection=None, web_reputation_setting_blocked_urls=None, platform_setting_combined_mode_network_group_protection_source=None, web_reputation_setting_alerting_enabled=None, anti_malware_setting_nsx_security_tagging_on_remediation_failure_enabled=None, integrity_monitoring_setting_cpu_usage_level=None, platform_setting_auto_update_anti_malware_engine_enabled=None, intrusion_prevention_setting_combined_mode_protection_source=None):  # noqa: E501
        """ComputerSettings - a model defined in Swagger"""  # noqa: E501

        self._log_inspection_setting_severity_clipping_agent_event_send_syslog_level_min = None
        self._firewall_setting_engine_option_connections_cleanup_max = None
        self._firewall_setting_engine_option_verify_tcp_checksum_enabled = None
        self._anti_malware_setting_scan_cache_on_demand_config_id = None
        self._application_control_setting_shared_ruleset_id = None
        self._web_reputation_setting_smart_protection_server_connection_lost_warning_enabled = None
        self._application_control_setting_execution_enforcement_level = None
        self._web_reputation_setting_blocked_url_domains = None
        self._firewall_setting_engine_option_syn_sent_timeout = None
        self._platform_setting_agent_self_protection_password = None
        self._firewall_setting_reconnaissance_block_tcp_xmas_attack_duration = None
        self._intrusion_prevention_setting_virtual_and_container_network_scan_enabled = None
        self._log_inspection_setting_syslog_config_id = None
        self._firewall_setting_engine_option_debug_mode_enabled = None
        self._firewall_setting_virtual_and_container_network_scan_enabled = None
        self._anti_malware_setting_file_hash_sha256_enabled = None
        self._firewall_setting_reconnaissance_notify_fingerprint_probe_enabled = None
        self._firewall_setting_event_log_file_retain_num = None
        self._firewall_setting_anti_evasion_check_tcp_paws_zero = None
        self._anti_malware_setting_connected_threat_defense_use_control_manager_suspicious_object_list_enabled = None
        self._intrusion_prevention_setting_engine_option_fragmented_ip_keep_max = None
        self._firewall_setting_engine_option_drop6_to4_bogons_addresses_enabled = None
        self._log_inspection_setting_severity_clipping_agent_event_store_level_min = None
        self._platform_setting_scan_cache_concurrency_max = None
        self._anti_malware_setting_syslog_config_id = None
        self._firewall_setting_anti_evasion_tcp_paws_window_policy = None
        self._firewall_setting_reconnaissance_detect_tcp_xmas_attack_enabled = None
        self._application_control_setting_ruleset_mode = None
        self._anti_malware_setting_smart_protection_global_server_use_proxy_enabled = None
        self._web_reputation_setting_smart_protection_local_server_allow_off_domain_global = None
        self._integrity_monitoring_setting_combined_mode_protection_source = None
        self._firewall_setting_engine_option_close_wait_timeout = None
        self._platform_setting_scan_open_port_list_id = None
        self._platform_setting_agent_self_protection_password_enabled = None
        self._firewall_setting_engine_option_ack_timeout = None
        self._firewall_setting_event_log_file_cached_entries_stale_time = None
        self._firewall_setting_combined_mode_protection_source = None
        self._platform_setting_agent_events_send_interval = None
        self._platform_setting_inactive_agent_cleanup_override_enabled = None
        self._firewall_setting_failure_response_engine_system = None
        self._platform_setting_relay_state = None
        self._firewall_setting_engine_option_drop_evasive_retransmit_enabled = None
        self._activity_monitoring_setting_indicator_enabled = None
        self._intrusion_prevention_setting_engine_option_fragmented_ip_timeout = None
        self._firewall_setting_anti_evasion_check_tcp_zero_flags = None
        self._web_reputation_setting_smart_protection_global_server_use_proxy_enabled = None
        self._intrusion_prevention_setting_nsx_security_tagging_prevent_mode_level = None
        self._firewall_setting_reconnaissance_notify_tcp_xmas_attack_enabled = None
        self._firewall_setting_engine_option_udp_timeout = None
        self._web_reputation_setting_smart_protection_local_server_enabled = None
        self._firewall_setting_engine_option_tcp_mss_limit = None
        self._firewall_setting_engine_option_cold_start_timeout = None
        self._firewall_setting_engine_option_established_timeout = None
        self._anti_malware_setting_identified_files_space_max_mbytes = None
        self._firewall_setting_engine_option_allow_null_ip_enabled = None
        self._platform_setting_notifications_suppress_popups_enabled = None
        self._firewall_setting_anti_evasion_check_tcp_rst_fin_flags = None
        self._firewall_setting_engine_option_disconnect_timeout = None
        self._firewall_setting_engine_option_close_timeout = None
        self._firewall_setting_engine_option_tunnel_depth_max_exceeded_action = None
        self._firewall_setting_reconnaissance_detect_tcp_null_scan_enabled = None
        self._platform_setting_smart_protection_anti_malware_global_server_proxy_id = None
        self._firewall_setting_engine_option_filter_ipv4_tunnels = None
        self._web_reputation_setting_smart_protection_local_server_urls = None
        self._firewall_setting_engine_option_log_one_packet_period = None
        self._firewall_setting_engine_option_filter_ipv6_tunnels = None
        self._firewall_setting_anti_evasion_check_tcp_congestion_flags = None
        self._platform_setting_heartbeat_missed_alert_threshold = None
        self._intrusion_prevention_setting_engine_options_enabled = None
        self._firewall_setting_engine_option_connections_num_udp_max = None
        self._integrity_monitoring_setting_auto_apply_recommendations_enabled = None
        self._firewall_setting_engine_option_tunnel_depth_max = None
        self._firewall_setting_engine_option_drop_unknown_ssl_protocol_enabled = None
        self._anti_malware_setting_nsx_security_tagging_value = None
        self._intrusion_prevention_setting_log_data_rule_first_match_enabled = None
        self._firewall_setting_engine_option_logging_policy = None
        self._platform_setting_troubleshooting_logging_level = None
        self._anti_malware_setting_virtual_appliance_on_demand_scan_cache_entries_max = None
        self._web_reputation_setting_combined_mode_protection_source = None
        self._firewall_setting_engine_option_closing_timeout = None
        self._firewall_setting_anti_evasion_check_paws = None
        self._intrusion_prevention_setting_auto_apply_recommendations_enabled = None
        self._firewall_setting_reconnaissance_detect_fingerprint_probe_enabled = None
        self._anti_malware_setting_nsx_security_tagging_remove_on_clean_scan_enabled = None
        self._firewall_setting_engine_option_log_packet_length_max = None
        self._firewall_setting_engine_option_drop_teredo_anomalies_enabled = None
        self._web_reputation_setting_security_level = None
        self._firewall_setting_engine_option_drop_ipv6_site_local_addresses_enabled = None
        self._activity_monitoring_setting_activity_enabled = None
        self._firewall_setting_engine_option_strict_terodo_port_check_enabled = None
        self._web_reputation_setting_blocked_url_keywords = None
        self._web_reputation_setting_syslog_config_id = None
        self._firewall_setting_failure_response_packet_sanity_check = None
        self._firewall_setting_network_engine_mode = None
        self._firewall_setting_event_log_file_size_max = None
        self._anti_malware_setting_malware_scan_multithreaded_processing_enabled = None
        self._firewall_setting_reconnaissance_detect_tcp_syn_fin_scan_enabled = None
        self._firewall_setting_engine_option_drop_ip_zero_payload_enabled = None
        self._firewall_setting_engine_option_block_ipv6_agent8_and_earlier_enabled = None
        self._intrusion_prevention_setting_engine_option_fragmented_ip_packet_send_icmp_enabled = None
        self._anti_malware_setting_predictive_machine_learning_exceptions = None
        self._firewall_setting_engine_option_log_events_per_second_max = None
        self._firewall_setting_engine_option_ssl_session_time = None
        self._anti_malware_setting_behavior_monitoring_scan_exclusion_list = None
        self._anti_malware_setting_smart_protection_global_server_enabled = None
        self._firewall_setting_engine_option_log_one_packet_within_period_enabled = None
        self._firewall_setting_engine_option_generate_connection_events_icmp_enabled = None
        self._platform_setting_heartbeat_inactive_vm_offline_alert_enabled = None
        self._web_reputation_setting_smart_protection_web_reputation_global_server_proxy_id = None
        self._anti_malware_setting_nsx_security_tagging_enabled = None
        self._firewall_setting_anti_evasion_check_fragmented_packets = None
        self._firewall_setting_engine_option_connections_num_icmp_max = None
        self._firewall_setting_anti_evasion_check_tcp_split_handshake = None
        self._anti_malware_setting_combined_mode_protection_source = None
        self._firewall_setting_engine_option_event_nodes_max = None
        self._web_reputation_setting_monitor_port_list_id = None
        self._application_control_setting_syslog_config_id = None
        self._firewall_setting_anti_evasion_check_out_no_connection = None
        self._firewall_setting_engine_option_block_ipv6_agent9_and_later_enabled = None
        self._integrity_monitoring_setting_virtual_appliance_optimization_scan_cache_entries_max = None
        self._firewall_setting_reconnaissance_notify_tcp_null_scan_enabled = None
        self._firewall_setting_engine_option_ignore_status_code1 = None
        self._firewall_setting_engine_option_ignore_status_code0 = None
        self._firewall_setting_engine_option_ignore_status_code2 = None
        self._firewall_setting_engine_option_ssl_session_size = None
        self._anti_malware_setting_scan_cache_real_time_config_id = None
        self._platform_setting_recommendation_ongoing_scans_interval = None
        self._platform_setting_smart_protection_global_server_use_proxy_enabled = None
        self._firewall_setting_interface_limit_one_active_enabled = None
        self._firewall_setting_anti_evasion_check_tcp_checksum = None
        self._firewall_setting_engine_option_drop_ipv6_ext_type0_enabled = None
        self._anti_malware_setting_scan_file_size_max_mbytes = None
        self._firewall_setting_engine_option_generate_connection_events_tcp_enabled = None
        self._anti_malware_setting_file_hash_size_max_mbytes = None
        self._firewall_setting_event_log_file_cached_entries_life_time = None
        self._platform_setting_smart_protection_global_server_proxy_id = None
        self._log_inspection_setting_auto_apply_recommendations_enabled = None
        self._anti_malware_setting_connected_threat_defense_suspicious_file_ddan_submission_enabled = None
        self._web_reputation_setting_blocking_page_link = None
        self._firewall_setting_syslog_config_id = None
        self._platform_setting_agent_communications_direction = None
        self._integrity_monitoring_setting_scan_cache_config_id = None
        self._anti_malware_setting_document_exploit_protection_rule_exceptions = None
        self._firewall_setting_anti_evasion_check_tcp_syn_with_data = None
        self._anti_malware_setting_file_hash_enabled = None
        self._firewall_setting_reconnaissance_block_fingerprint_probe_duration = None
        self._firewall_setting_engine_option_drop_ipv6_bogons_addresses_enabled = None
        self._firewall_setting_engine_option_boot_start_timeout = None
        self._firewall_setting_engine_option_connections_num_tcp_max = None
        self._firewall_setting_anti_evasion_security_posture = None
        self._firewall_setting_interface_patterns = None
        self._firewall_setting_interface_isolation_enabled = None
        self._anti_malware_setting_virtual_appliance_real_time_scan_cache_entries_max = None
        self._firewall_setting_events_out_of_allowed_policy_enabled = None
        self._firewall_setting_anti_evasion_check_evasive_retransmit = None
        self._firewall_setting_engine_option_icmp_timeout = None
        self._integrity_monitoring_setting_syslog_config_id = None
        self._firewall_setting_engine_option_connection_cleanup_timeout = None
        self._anti_malware_setting_smart_protection_local_server_allow_off_domain_global = None
        self._firewall_setting_reconnaissance_notify_tcp_syn_fin_scan_enabled = None
        self._firewall_setting_engine_option_error_timeout = None
        self._web_reputation_setting_allowed_urls = None
        self._firewall_setting_reconnaissance_notify_network_or_port_scan_enabled = None
        self._firewall_setting_engine_option_fin_wait1_timeout = None
        self._firewall_setting_engine_option_generate_connection_events_udp_enabled = None
        self._activity_monitoring_setting_syslog_config_id = None
        self._firewall_setting_anti_evasion_check_tcp_syn_rst_flags = None
        self._anti_malware_setting_spyware_approved_list = None
        self._firewall_setting_anti_evasion_check_tcp_urgent_flags = None
        self._intrusion_prevention_setting_nsx_security_tagging_detect_mode_level = None
        self._intrusion_prevention_setting_engine_option_fragmented_ip_unconcerned_mac_address_bypass_enabled = None
        self._firewall_setting_engine_option_log_all_packet_data_enabled = None
        self._firewall_setting_anti_evasion_check_tcp_syn_fin_flags = None
        self._platform_setting_heartbeat_interval = None
        self._firewall_setting_engine_option_fragment_size_min = None
        self._anti_malware_setting_smart_protection_server_connection_lost_warning_enabled = None
        self._firewall_setting_reconnaissance_block_network_or_port_scan_duration = None
        self._integrity_monitoring_setting_content_hash_algorithm = None
        self._anti_malware_setting_smart_scan_state = None
        self._firewall_setting_config_package_exceeds_alert_max_enabled = None
        self._platform_setting_environment_variable_overrides = None
        self._firewall_setting_engine_option_fragment_offset_min = None
        self._anti_malware_setting_smart_protection_local_server_urls = None
        self._firewall_setting_engine_option_syn_rcvd_timeout = None
        self._firewall_setting_event_log_file_cached_entries_num = None
        self._firewall_setting_engine_option_force_allow_icmp_type3_code4 = None
        self._firewall_setting_reconnaissance_block_tcp_null_scan_duration = None
        self._platform_setting_smart_protection_global_server_enabled = None
        self._integrity_monitoring_setting_realtime_enabled = None
        self._firewall_setting_engine_option_last_ack_timeout = None
        self._firewall_setting_reconnaissance_exclude_ip_list_id = None
        self._platform_setting_agent_self_protection_enabled = None
        self._firewall_setting_engine_option_drop_ipv6_reserved_addresses_enabled = None
        self._firewall_setting_anti_evasion_check_fin_no_connection = None
        self._firewall_setting_engine_option_debug_packet_num_max = None
        self._firewall_setting_engine_option_bypass_cisco_waas_connections_enabled = None
        self._firewall_setting_reconnaissance_enabled = None
        self._platform_setting_heartbeat_local_time_shift_alert_threshold = None
        self._anti_malware_setting_file_hash_md5_enabled = None
        self._firewall_setting_reconnaissance_detect_network_or_port_scan_enabled = None
        self._firewall_setting_engine_option_silent_tcp_connection_drop_enabled = None
        self._firewall_setting_engine_option_block_same_src_dst_ip_enabled = None
        self._firewall_setting_engine_option_force_allow_dhcp_dns = None
        self._firewall_setting_reconnaissance_include_ip_list_id = None
        self._firewall_setting_engine_options_enabled = None
        self._firewall_setting_reconnaissance_block_tcp_syn_fin_scan_duration = None
        self._web_reputation_setting_security_block_untested_pages_enabled = None
        self._web_reputation_setting_allowed_url_domains = None
        self._firewall_setting_event_log_file_ignore_source_ip_list_id = None
        self._firewall_setting_engine_option_drop_ipv6_fragments_lower_than_min_mtu_enabled = None
        self._platform_setting_auto_assign_new_intrusion_prevention_rules_enabled = None
        self._firewall_setting_anti_evasion_check_rst_no_connection = None
        self._web_reputation_setting_blocked_urls = None
        self._platform_setting_combined_mode_network_group_protection_source = None
        self._web_reputation_setting_alerting_enabled = None
        self._anti_malware_setting_nsx_security_tagging_on_remediation_failure_enabled = None
        self._integrity_monitoring_setting_cpu_usage_level = None
        self._platform_setting_auto_update_anti_malware_engine_enabled = None
        self._intrusion_prevention_setting_combined_mode_protection_source = None
        self.discriminator = None

        if log_inspection_setting_severity_clipping_agent_event_send_syslog_level_min is not None:
            self.log_inspection_setting_severity_clipping_agent_event_send_syslog_level_min = log_inspection_setting_severity_clipping_agent_event_send_syslog_level_min
        if firewall_setting_engine_option_connections_cleanup_max is not None:
            self.firewall_setting_engine_option_connections_cleanup_max = firewall_setting_engine_option_connections_cleanup_max
        if firewall_setting_engine_option_verify_tcp_checksum_enabled is not None:
            self.firewall_setting_engine_option_verify_tcp_checksum_enabled = firewall_setting_engine_option_verify_tcp_checksum_enabled
        if anti_malware_setting_scan_cache_on_demand_config_id is not None:
            self.anti_malware_setting_scan_cache_on_demand_config_id = anti_malware_setting_scan_cache_on_demand_config_id
        if application_control_setting_shared_ruleset_id is not None:
            self.application_control_setting_shared_ruleset_id = application_control_setting_shared_ruleset_id
        if web_reputation_setting_smart_protection_server_connection_lost_warning_enabled is not None:
            self.web_reputation_setting_smart_protection_server_connection_lost_warning_enabled = web_reputation_setting_smart_protection_server_connection_lost_warning_enabled
        if application_control_setting_execution_enforcement_level is not None:
            self.application_control_setting_execution_enforcement_level = application_control_setting_execution_enforcement_level
        if web_reputation_setting_blocked_url_domains is not None:
            self.web_reputation_setting_blocked_url_domains = web_reputation_setting_blocked_url_domains
        if firewall_setting_engine_option_syn_sent_timeout is not None:
            self.firewall_setting_engine_option_syn_sent_timeout = firewall_setting_engine_option_syn_sent_timeout
        if platform_setting_agent_self_protection_password is not None:
            self.platform_setting_agent_self_protection_password = platform_setting_agent_self_protection_password
        if firewall_setting_reconnaissance_block_tcp_xmas_attack_duration is not None:
            self.firewall_setting_reconnaissance_block_tcp_xmas_attack_duration = firewall_setting_reconnaissance_block_tcp_xmas_attack_duration
        if intrusion_prevention_setting_virtual_and_container_network_scan_enabled is not None:
            self.intrusion_prevention_setting_virtual_and_container_network_scan_enabled = intrusion_prevention_setting_virtual_and_container_network_scan_enabled
        if log_inspection_setting_syslog_config_id is not None:
            self.log_inspection_setting_syslog_config_id = log_inspection_setting_syslog_config_id
        if firewall_setting_engine_option_debug_mode_enabled is not None:
            self.firewall_setting_engine_option_debug_mode_enabled = firewall_setting_engine_option_debug_mode_enabled
        if firewall_setting_virtual_and_container_network_scan_enabled is not None:
            self.firewall_setting_virtual_and_container_network_scan_enabled = firewall_setting_virtual_and_container_network_scan_enabled
        if anti_malware_setting_file_hash_sha256_enabled is not None:
            self.anti_malware_setting_file_hash_sha256_enabled = anti_malware_setting_file_hash_sha256_enabled
        if firewall_setting_reconnaissance_notify_fingerprint_probe_enabled is not None:
            self.firewall_setting_reconnaissance_notify_fingerprint_probe_enabled = firewall_setting_reconnaissance_notify_fingerprint_probe_enabled
        if firewall_setting_event_log_file_retain_num is not None:
            self.firewall_setting_event_log_file_retain_num = firewall_setting_event_log_file_retain_num
        if firewall_setting_anti_evasion_check_tcp_paws_zero is not None:
            self.firewall_setting_anti_evasion_check_tcp_paws_zero = firewall_setting_anti_evasion_check_tcp_paws_zero
        if anti_malware_setting_connected_threat_defense_use_control_manager_suspicious_object_list_enabled is not None:
            self.anti_malware_setting_connected_threat_defense_use_control_manager_suspicious_object_list_enabled = anti_malware_setting_connected_threat_defense_use_control_manager_suspicious_object_list_enabled
        if intrusion_prevention_setting_engine_option_fragmented_ip_keep_max is not None:
            self.intrusion_prevention_setting_engine_option_fragmented_ip_keep_max = intrusion_prevention_setting_engine_option_fragmented_ip_keep_max
        if firewall_setting_engine_option_drop6_to4_bogons_addresses_enabled is not None:
            self.firewall_setting_engine_option_drop6_to4_bogons_addresses_enabled = firewall_setting_engine_option_drop6_to4_bogons_addresses_enabled
        if log_inspection_setting_severity_clipping_agent_event_store_level_min is not None:
            self.log_inspection_setting_severity_clipping_agent_event_store_level_min = log_inspection_setting_severity_clipping_agent_event_store_level_min
        if platform_setting_scan_cache_concurrency_max is not None:
            self.platform_setting_scan_cache_concurrency_max = platform_setting_scan_cache_concurrency_max
        if anti_malware_setting_syslog_config_id is not None:
            self.anti_malware_setting_syslog_config_id = anti_malware_setting_syslog_config_id
        if firewall_setting_anti_evasion_tcp_paws_window_policy is not None:
            self.firewall_setting_anti_evasion_tcp_paws_window_policy = firewall_setting_anti_evasion_tcp_paws_window_policy
        if firewall_setting_reconnaissance_detect_tcp_xmas_attack_enabled is not None:
            self.firewall_setting_reconnaissance_detect_tcp_xmas_attack_enabled = firewall_setting_reconnaissance_detect_tcp_xmas_attack_enabled
        if application_control_setting_ruleset_mode is not None:
            self.application_control_setting_ruleset_mode = application_control_setting_ruleset_mode
        if anti_malware_setting_smart_protection_global_server_use_proxy_enabled is not None:
            self.anti_malware_setting_smart_protection_global_server_use_proxy_enabled = anti_malware_setting_smart_protection_global_server_use_proxy_enabled
        if web_reputation_setting_smart_protection_local_server_allow_off_domain_global is not None:
            self.web_reputation_setting_smart_protection_local_server_allow_off_domain_global = web_reputation_setting_smart_protection_local_server_allow_off_domain_global
        if integrity_monitoring_setting_combined_mode_protection_source is not None:
            self.integrity_monitoring_setting_combined_mode_protection_source = integrity_monitoring_setting_combined_mode_protection_source
        if firewall_setting_engine_option_close_wait_timeout is not None:
            self.firewall_setting_engine_option_close_wait_timeout = firewall_setting_engine_option_close_wait_timeout
        if platform_setting_scan_open_port_list_id is not None:
            self.platform_setting_scan_open_port_list_id = platform_setting_scan_open_port_list_id
        if platform_setting_agent_self_protection_password_enabled is not None:
            self.platform_setting_agent_self_protection_password_enabled = platform_setting_agent_self_protection_password_enabled
        if firewall_setting_engine_option_ack_timeout is not None:
            self.firewall_setting_engine_option_ack_timeout = firewall_setting_engine_option_ack_timeout
        if firewall_setting_event_log_file_cached_entries_stale_time is not None:
            self.firewall_setting_event_log_file_cached_entries_stale_time = firewall_setting_event_log_file_cached_entries_stale_time
        if firewall_setting_combined_mode_protection_source is not None:
            self.firewall_setting_combined_mode_protection_source = firewall_setting_combined_mode_protection_source
        if platform_setting_agent_events_send_interval is not None:
            self.platform_setting_agent_events_send_interval = platform_setting_agent_events_send_interval
        if platform_setting_inactive_agent_cleanup_override_enabled is not None:
            self.platform_setting_inactive_agent_cleanup_override_enabled = platform_setting_inactive_agent_cleanup_override_enabled
        if firewall_setting_failure_response_engine_system is not None:
            self.firewall_setting_failure_response_engine_system = firewall_setting_failure_response_engine_system
        if platform_setting_relay_state is not None:
            self.platform_setting_relay_state = platform_setting_relay_state
        if firewall_setting_engine_option_drop_evasive_retransmit_enabled is not None:
            self.firewall_setting_engine_option_drop_evasive_retransmit_enabled = firewall_setting_engine_option_drop_evasive_retransmit_enabled
        if activity_monitoring_setting_indicator_enabled is not None:
            self.activity_monitoring_setting_indicator_enabled = activity_monitoring_setting_indicator_enabled
        if intrusion_prevention_setting_engine_option_fragmented_ip_timeout is not None:
            self.intrusion_prevention_setting_engine_option_fragmented_ip_timeout = intrusion_prevention_setting_engine_option_fragmented_ip_timeout
        if firewall_setting_anti_evasion_check_tcp_zero_flags is not None:
            self.firewall_setting_anti_evasion_check_tcp_zero_flags = firewall_setting_anti_evasion_check_tcp_zero_flags
        if web_reputation_setting_smart_protection_global_server_use_proxy_enabled is not None:
            self.web_reputation_setting_smart_protection_global_server_use_proxy_enabled = web_reputation_setting_smart_protection_global_server_use_proxy_enabled
        if intrusion_prevention_setting_nsx_security_tagging_prevent_mode_level is not None:
            self.intrusion_prevention_setting_nsx_security_tagging_prevent_mode_level = intrusion_prevention_setting_nsx_security_tagging_prevent_mode_level
        if firewall_setting_reconnaissance_notify_tcp_xmas_attack_enabled is not None:
            self.firewall_setting_reconnaissance_notify_tcp_xmas_attack_enabled = firewall_setting_reconnaissance_notify_tcp_xmas_attack_enabled
        if firewall_setting_engine_option_udp_timeout is not None:
            self.firewall_setting_engine_option_udp_timeout = firewall_setting_engine_option_udp_timeout
        if web_reputation_setting_smart_protection_local_server_enabled is not None:
            self.web_reputation_setting_smart_protection_local_server_enabled = web_reputation_setting_smart_protection_local_server_enabled
        if firewall_setting_engine_option_tcp_mss_limit is not None:
            self.firewall_setting_engine_option_tcp_mss_limit = firewall_setting_engine_option_tcp_mss_limit
        if firewall_setting_engine_option_cold_start_timeout is not None:
            self.firewall_setting_engine_option_cold_start_timeout = firewall_setting_engine_option_cold_start_timeout
        if firewall_setting_engine_option_established_timeout is not None:
            self.firewall_setting_engine_option_established_timeout = firewall_setting_engine_option_established_timeout
        if anti_malware_setting_identified_files_space_max_mbytes is not None:
            self.anti_malware_setting_identified_files_space_max_mbytes = anti_malware_setting_identified_files_space_max_mbytes
        if firewall_setting_engine_option_allow_null_ip_enabled is not None:
            self.firewall_setting_engine_option_allow_null_ip_enabled = firewall_setting_engine_option_allow_null_ip_enabled
        if platform_setting_notifications_suppress_popups_enabled is not None:
            self.platform_setting_notifications_suppress_popups_enabled = platform_setting_notifications_suppress_popups_enabled
        if firewall_setting_anti_evasion_check_tcp_rst_fin_flags is not None:
            self.firewall_setting_anti_evasion_check_tcp_rst_fin_flags = firewall_setting_anti_evasion_check_tcp_rst_fin_flags
        if firewall_setting_engine_option_disconnect_timeout is not None:
            self.firewall_setting_engine_option_disconnect_timeout = firewall_setting_engine_option_disconnect_timeout
        if firewall_setting_engine_option_close_timeout is not None:
            self.firewall_setting_engine_option_close_timeout = firewall_setting_engine_option_close_timeout
        if firewall_setting_engine_option_tunnel_depth_max_exceeded_action is not None:
            self.firewall_setting_engine_option_tunnel_depth_max_exceeded_action = firewall_setting_engine_option_tunnel_depth_max_exceeded_action
        if firewall_setting_reconnaissance_detect_tcp_null_scan_enabled is not None:
            self.firewall_setting_reconnaissance_detect_tcp_null_scan_enabled = firewall_setting_reconnaissance_detect_tcp_null_scan_enabled
        if platform_setting_smart_protection_anti_malware_global_server_proxy_id is not None:
            self.platform_setting_smart_protection_anti_malware_global_server_proxy_id = platform_setting_smart_protection_anti_malware_global_server_proxy_id
        if firewall_setting_engine_option_filter_ipv4_tunnels is not None:
            self.firewall_setting_engine_option_filter_ipv4_tunnels = firewall_setting_engine_option_filter_ipv4_tunnels
        if web_reputation_setting_smart_protection_local_server_urls is not None:
            self.web_reputation_setting_smart_protection_local_server_urls = web_reputation_setting_smart_protection_local_server_urls
        if firewall_setting_engine_option_log_one_packet_period is not None:
            self.firewall_setting_engine_option_log_one_packet_period = firewall_setting_engine_option_log_one_packet_period
        if firewall_setting_engine_option_filter_ipv6_tunnels is not None:
            self.firewall_setting_engine_option_filter_ipv6_tunnels = firewall_setting_engine_option_filter_ipv6_tunnels
        if firewall_setting_anti_evasion_check_tcp_congestion_flags is not None:
            self.firewall_setting_anti_evasion_check_tcp_congestion_flags = firewall_setting_anti_evasion_check_tcp_congestion_flags
        if platform_setting_heartbeat_missed_alert_threshold is not None:
            self.platform_setting_heartbeat_missed_alert_threshold = platform_setting_heartbeat_missed_alert_threshold
        if intrusion_prevention_setting_engine_options_enabled is not None:
            self.intrusion_prevention_setting_engine_options_enabled = intrusion_prevention_setting_engine_options_enabled
        if firewall_setting_engine_option_connections_num_udp_max is not None:
            self.firewall_setting_engine_option_connections_num_udp_max = firewall_setting_engine_option_connections_num_udp_max
        if integrity_monitoring_setting_auto_apply_recommendations_enabled is not None:
            self.integrity_monitoring_setting_auto_apply_recommendations_enabled = integrity_monitoring_setting_auto_apply_recommendations_enabled
        if firewall_setting_engine_option_tunnel_depth_max is not None:
            self.firewall_setting_engine_option_tunnel_depth_max = firewall_setting_engine_option_tunnel_depth_max
        if firewall_setting_engine_option_drop_unknown_ssl_protocol_enabled is not None:
            self.firewall_setting_engine_option_drop_unknown_ssl_protocol_enabled = firewall_setting_engine_option_drop_unknown_ssl_protocol_enabled
        if anti_malware_setting_nsx_security_tagging_value is not None:
            self.anti_malware_setting_nsx_security_tagging_value = anti_malware_setting_nsx_security_tagging_value
        if intrusion_prevention_setting_log_data_rule_first_match_enabled is not None:
            self.intrusion_prevention_setting_log_data_rule_first_match_enabled = intrusion_prevention_setting_log_data_rule_first_match_enabled
        if firewall_setting_engine_option_logging_policy is not None:
            self.firewall_setting_engine_option_logging_policy = firewall_setting_engine_option_logging_policy
        if platform_setting_troubleshooting_logging_level is not None:
            self.platform_setting_troubleshooting_logging_level = platform_setting_troubleshooting_logging_level
        if anti_malware_setting_virtual_appliance_on_demand_scan_cache_entries_max is not None:
            self.anti_malware_setting_virtual_appliance_on_demand_scan_cache_entries_max = anti_malware_setting_virtual_appliance_on_demand_scan_cache_entries_max
        if web_reputation_setting_combined_mode_protection_source is not None:
            self.web_reputation_setting_combined_mode_protection_source = web_reputation_setting_combined_mode_protection_source
        if firewall_setting_engine_option_closing_timeout is not None:
            self.firewall_setting_engine_option_closing_timeout = firewall_setting_engine_option_closing_timeout
        if firewall_setting_anti_evasion_check_paws is not None:
            self.firewall_setting_anti_evasion_check_paws = firewall_setting_anti_evasion_check_paws
        if intrusion_prevention_setting_auto_apply_recommendations_enabled is not None:
            self.intrusion_prevention_setting_auto_apply_recommendations_enabled = intrusion_prevention_setting_auto_apply_recommendations_enabled
        if firewall_setting_reconnaissance_detect_fingerprint_probe_enabled is not None:
            self.firewall_setting_reconnaissance_detect_fingerprint_probe_enabled = firewall_setting_reconnaissance_detect_fingerprint_probe_enabled
        if anti_malware_setting_nsx_security_tagging_remove_on_clean_scan_enabled is not None:
            self.anti_malware_setting_nsx_security_tagging_remove_on_clean_scan_enabled = anti_malware_setting_nsx_security_tagging_remove_on_clean_scan_enabled
        if firewall_setting_engine_option_log_packet_length_max is not None:
            self.firewall_setting_engine_option_log_packet_length_max = firewall_setting_engine_option_log_packet_length_max
        if firewall_setting_engine_option_drop_teredo_anomalies_enabled is not None:
            self.firewall_setting_engine_option_drop_teredo_anomalies_enabled = firewall_setting_engine_option_drop_teredo_anomalies_enabled
        if web_reputation_setting_security_level is not None:
            self.web_reputation_setting_security_level = web_reputation_setting_security_level
        if firewall_setting_engine_option_drop_ipv6_site_local_addresses_enabled is not None:
            self.firewall_setting_engine_option_drop_ipv6_site_local_addresses_enabled = firewall_setting_engine_option_drop_ipv6_site_local_addresses_enabled
        if activity_monitoring_setting_activity_enabled is not None:
            self.activity_monitoring_setting_activity_enabled = activity_monitoring_setting_activity_enabled
        if firewall_setting_engine_option_strict_terodo_port_check_enabled is not None:
            self.firewall_setting_engine_option_strict_terodo_port_check_enabled = firewall_setting_engine_option_strict_terodo_port_check_enabled
        if web_reputation_setting_blocked_url_keywords is not None:
            self.web_reputation_setting_blocked_url_keywords = web_reputation_setting_blocked_url_keywords
        if web_reputation_setting_syslog_config_id is not None:
            self.web_reputation_setting_syslog_config_id = web_reputation_setting_syslog_config_id
        if firewall_setting_failure_response_packet_sanity_check is not None:
            self.firewall_setting_failure_response_packet_sanity_check = firewall_setting_failure_response_packet_sanity_check
        if firewall_setting_network_engine_mode is not None:
            self.firewall_setting_network_engine_mode = firewall_setting_network_engine_mode
        if firewall_setting_event_log_file_size_max is not None:
            self.firewall_setting_event_log_file_size_max = firewall_setting_event_log_file_size_max
        if anti_malware_setting_malware_scan_multithreaded_processing_enabled is not None:
            self.anti_malware_setting_malware_scan_multithreaded_processing_enabled = anti_malware_setting_malware_scan_multithreaded_processing_enabled
        if firewall_setting_reconnaissance_detect_tcp_syn_fin_scan_enabled is not None:
            self.firewall_setting_reconnaissance_detect_tcp_syn_fin_scan_enabled = firewall_setting_reconnaissance_detect_tcp_syn_fin_scan_enabled
        if firewall_setting_engine_option_drop_ip_zero_payload_enabled is not None:
            self.firewall_setting_engine_option_drop_ip_zero_payload_enabled = firewall_setting_engine_option_drop_ip_zero_payload_enabled
        if firewall_setting_engine_option_block_ipv6_agent8_and_earlier_enabled is not None:
            self.firewall_setting_engine_option_block_ipv6_agent8_and_earlier_enabled = firewall_setting_engine_option_block_ipv6_agent8_and_earlier_enabled
        if intrusion_prevention_setting_engine_option_fragmented_ip_packet_send_icmp_enabled is not None:
            self.intrusion_prevention_setting_engine_option_fragmented_ip_packet_send_icmp_enabled = intrusion_prevention_setting_engine_option_fragmented_ip_packet_send_icmp_enabled
        if anti_malware_setting_predictive_machine_learning_exceptions is not None:
            self.anti_malware_setting_predictive_machine_learning_exceptions = anti_malware_setting_predictive_machine_learning_exceptions
        if firewall_setting_engine_option_log_events_per_second_max is not None:
            self.firewall_setting_engine_option_log_events_per_second_max = firewall_setting_engine_option_log_events_per_second_max
        if firewall_setting_engine_option_ssl_session_time is not None:
            self.firewall_setting_engine_option_ssl_session_time = firewall_setting_engine_option_ssl_session_time
        if anti_malware_setting_behavior_monitoring_scan_exclusion_list is not None:
            self.anti_malware_setting_behavior_monitoring_scan_exclusion_list = anti_malware_setting_behavior_monitoring_scan_exclusion_list
        if anti_malware_setting_smart_protection_global_server_enabled is not None:
            self.anti_malware_setting_smart_protection_global_server_enabled = anti_malware_setting_smart_protection_global_server_enabled
        if firewall_setting_engine_option_log_one_packet_within_period_enabled is not None:
            self.firewall_setting_engine_option_log_one_packet_within_period_enabled = firewall_setting_engine_option_log_one_packet_within_period_enabled
        if firewall_setting_engine_option_generate_connection_events_icmp_enabled is not None:
            self.firewall_setting_engine_option_generate_connection_events_icmp_enabled = firewall_setting_engine_option_generate_connection_events_icmp_enabled
        if platform_setting_heartbeat_inactive_vm_offline_alert_enabled is not None:
            self.platform_setting_heartbeat_inactive_vm_offline_alert_enabled = platform_setting_heartbeat_inactive_vm_offline_alert_enabled
        if web_reputation_setting_smart_protection_web_reputation_global_server_proxy_id is not None:
            self.web_reputation_setting_smart_protection_web_reputation_global_server_proxy_id = web_reputation_setting_smart_protection_web_reputation_global_server_proxy_id
        if anti_malware_setting_nsx_security_tagging_enabled is not None:
            self.anti_malware_setting_nsx_security_tagging_enabled = anti_malware_setting_nsx_security_tagging_enabled
        if firewall_setting_anti_evasion_check_fragmented_packets is not None:
            self.firewall_setting_anti_evasion_check_fragmented_packets = firewall_setting_anti_evasion_check_fragmented_packets
        if firewall_setting_engine_option_connections_num_icmp_max is not None:
            self.firewall_setting_engine_option_connections_num_icmp_max = firewall_setting_engine_option_connections_num_icmp_max
        if firewall_setting_anti_evasion_check_tcp_split_handshake is not None:
            self.firewall_setting_anti_evasion_check_tcp_split_handshake = firewall_setting_anti_evasion_check_tcp_split_handshake
        if anti_malware_setting_combined_mode_protection_source is not None:
            self.anti_malware_setting_combined_mode_protection_source = anti_malware_setting_combined_mode_protection_source
        if firewall_setting_engine_option_event_nodes_max is not None:
            self.firewall_setting_engine_option_event_nodes_max = firewall_setting_engine_option_event_nodes_max
        if web_reputation_setting_monitor_port_list_id is not None:
            self.web_reputation_setting_monitor_port_list_id = web_reputation_setting_monitor_port_list_id
        if application_control_setting_syslog_config_id is not None:
            self.application_control_setting_syslog_config_id = application_control_setting_syslog_config_id
        if firewall_setting_anti_evasion_check_out_no_connection is not None:
            self.firewall_setting_anti_evasion_check_out_no_connection = firewall_setting_anti_evasion_check_out_no_connection
        if firewall_setting_engine_option_block_ipv6_agent9_and_later_enabled is not None:
            self.firewall_setting_engine_option_block_ipv6_agent9_and_later_enabled = firewall_setting_engine_option_block_ipv6_agent9_and_later_enabled
        if integrity_monitoring_setting_virtual_appliance_optimization_scan_cache_entries_max is not None:
            self.integrity_monitoring_setting_virtual_appliance_optimization_scan_cache_entries_max = integrity_monitoring_setting_virtual_appliance_optimization_scan_cache_entries_max
        if firewall_setting_reconnaissance_notify_tcp_null_scan_enabled is not None:
            self.firewall_setting_reconnaissance_notify_tcp_null_scan_enabled = firewall_setting_reconnaissance_notify_tcp_null_scan_enabled
        if firewall_setting_engine_option_ignore_status_code1 is not None:
            self.firewall_setting_engine_option_ignore_status_code1 = firewall_setting_engine_option_ignore_status_code1
        if firewall_setting_engine_option_ignore_status_code0 is not None:
            self.firewall_setting_engine_option_ignore_status_code0 = firewall_setting_engine_option_ignore_status_code0
        if firewall_setting_engine_option_ignore_status_code2 is not None:
            self.firewall_setting_engine_option_ignore_status_code2 = firewall_setting_engine_option_ignore_status_code2
        if firewall_setting_engine_option_ssl_session_size is not None:
            self.firewall_setting_engine_option_ssl_session_size = firewall_setting_engine_option_ssl_session_size
        if anti_malware_setting_scan_cache_real_time_config_id is not None:
            self.anti_malware_setting_scan_cache_real_time_config_id = anti_malware_setting_scan_cache_real_time_config_id
        if platform_setting_recommendation_ongoing_scans_interval is not None:
            self.platform_setting_recommendation_ongoing_scans_interval = platform_setting_recommendation_ongoing_scans_interval
        if platform_setting_smart_protection_global_server_use_proxy_enabled is not None:
            self.platform_setting_smart_protection_global_server_use_proxy_enabled = platform_setting_smart_protection_global_server_use_proxy_enabled
        if firewall_setting_interface_limit_one_active_enabled is not None:
            self.firewall_setting_interface_limit_one_active_enabled = firewall_setting_interface_limit_one_active_enabled
        if firewall_setting_anti_evasion_check_tcp_checksum is not None:
            self.firewall_setting_anti_evasion_check_tcp_checksum = firewall_setting_anti_evasion_check_tcp_checksum
        if firewall_setting_engine_option_drop_ipv6_ext_type0_enabled is not None:
            self.firewall_setting_engine_option_drop_ipv6_ext_type0_enabled = firewall_setting_engine_option_drop_ipv6_ext_type0_enabled
        if anti_malware_setting_scan_file_size_max_mbytes is not None:
            self.anti_malware_setting_scan_file_size_max_mbytes = anti_malware_setting_scan_file_size_max_mbytes
        if firewall_setting_engine_option_generate_connection_events_tcp_enabled is not None:
            self.firewall_setting_engine_option_generate_connection_events_tcp_enabled = firewall_setting_engine_option_generate_connection_events_tcp_enabled
        if anti_malware_setting_file_hash_size_max_mbytes is not None:
            self.anti_malware_setting_file_hash_size_max_mbytes = anti_malware_setting_file_hash_size_max_mbytes
        if firewall_setting_event_log_file_cached_entries_life_time is not None:
            self.firewall_setting_event_log_file_cached_entries_life_time = firewall_setting_event_log_file_cached_entries_life_time
        if platform_setting_smart_protection_global_server_proxy_id is not None:
            self.platform_setting_smart_protection_global_server_proxy_id = platform_setting_smart_protection_global_server_proxy_id
        if log_inspection_setting_auto_apply_recommendations_enabled is not None:
            self.log_inspection_setting_auto_apply_recommendations_enabled = log_inspection_setting_auto_apply_recommendations_enabled
        if anti_malware_setting_connected_threat_defense_suspicious_file_ddan_submission_enabled is not None:
            self.anti_malware_setting_connected_threat_defense_suspicious_file_ddan_submission_enabled = anti_malware_setting_connected_threat_defense_suspicious_file_ddan_submission_enabled
        if web_reputation_setting_blocking_page_link is not None:
            self.web_reputation_setting_blocking_page_link = web_reputation_setting_blocking_page_link
        if firewall_setting_syslog_config_id is not None:
            self.firewall_setting_syslog_config_id = firewall_setting_syslog_config_id
        if platform_setting_agent_communications_direction is not None:
            self.platform_setting_agent_communications_direction = platform_setting_agent_communications_direction
        if integrity_monitoring_setting_scan_cache_config_id is not None:
            self.integrity_monitoring_setting_scan_cache_config_id = integrity_monitoring_setting_scan_cache_config_id
        if anti_malware_setting_document_exploit_protection_rule_exceptions is not None:
            self.anti_malware_setting_document_exploit_protection_rule_exceptions = anti_malware_setting_document_exploit_protection_rule_exceptions
        if firewall_setting_anti_evasion_check_tcp_syn_with_data is not None:
            self.firewall_setting_anti_evasion_check_tcp_syn_with_data = firewall_setting_anti_evasion_check_tcp_syn_with_data
        if anti_malware_setting_file_hash_enabled is not None:
            self.anti_malware_setting_file_hash_enabled = anti_malware_setting_file_hash_enabled
        if firewall_setting_reconnaissance_block_fingerprint_probe_duration is not None:
            self.firewall_setting_reconnaissance_block_fingerprint_probe_duration = firewall_setting_reconnaissance_block_fingerprint_probe_duration
        if firewall_setting_engine_option_drop_ipv6_bogons_addresses_enabled is not None:
            self.firewall_setting_engine_option_drop_ipv6_bogons_addresses_enabled = firewall_setting_engine_option_drop_ipv6_bogons_addresses_enabled
        if firewall_setting_engine_option_boot_start_timeout is not None:
            self.firewall_setting_engine_option_boot_start_timeout = firewall_setting_engine_option_boot_start_timeout
        if firewall_setting_engine_option_connections_num_tcp_max is not None:
            self.firewall_setting_engine_option_connections_num_tcp_max = firewall_setting_engine_option_connections_num_tcp_max
        if firewall_setting_anti_evasion_security_posture is not None:
            self.firewall_setting_anti_evasion_security_posture = firewall_setting_anti_evasion_security_posture
        if firewall_setting_interface_patterns is not None:
            self.firewall_setting_interface_patterns = firewall_setting_interface_patterns
        if firewall_setting_interface_isolation_enabled is not None:
            self.firewall_setting_interface_isolation_enabled = firewall_setting_interface_isolation_enabled
        if anti_malware_setting_virtual_appliance_real_time_scan_cache_entries_max is not None:
            self.anti_malware_setting_virtual_appliance_real_time_scan_cache_entries_max = anti_malware_setting_virtual_appliance_real_time_scan_cache_entries_max
        if firewall_setting_events_out_of_allowed_policy_enabled is not None:
            self.firewall_setting_events_out_of_allowed_policy_enabled = firewall_setting_events_out_of_allowed_policy_enabled
        if firewall_setting_anti_evasion_check_evasive_retransmit is not None:
            self.firewall_setting_anti_evasion_check_evasive_retransmit = firewall_setting_anti_evasion_check_evasive_retransmit
        if firewall_setting_engine_option_icmp_timeout is not None:
            self.firewall_setting_engine_option_icmp_timeout = firewall_setting_engine_option_icmp_timeout
        if integrity_monitoring_setting_syslog_config_id is not None:
            self.integrity_monitoring_setting_syslog_config_id = integrity_monitoring_setting_syslog_config_id
        if firewall_setting_engine_option_connection_cleanup_timeout is not None:
            self.firewall_setting_engine_option_connection_cleanup_timeout = firewall_setting_engine_option_connection_cleanup_timeout
        if anti_malware_setting_smart_protection_local_server_allow_off_domain_global is not None:
            self.anti_malware_setting_smart_protection_local_server_allow_off_domain_global = anti_malware_setting_smart_protection_local_server_allow_off_domain_global
        if firewall_setting_reconnaissance_notify_tcp_syn_fin_scan_enabled is not None:
            self.firewall_setting_reconnaissance_notify_tcp_syn_fin_scan_enabled = firewall_setting_reconnaissance_notify_tcp_syn_fin_scan_enabled
        if firewall_setting_engine_option_error_timeout is not None:
            self.firewall_setting_engine_option_error_timeout = firewall_setting_engine_option_error_timeout
        if web_reputation_setting_allowed_urls is not None:
            self.web_reputation_setting_allowed_urls = web_reputation_setting_allowed_urls
        if firewall_setting_reconnaissance_notify_network_or_port_scan_enabled is not None:
            self.firewall_setting_reconnaissance_notify_network_or_port_scan_enabled = firewall_setting_reconnaissance_notify_network_or_port_scan_enabled
        if firewall_setting_engine_option_fin_wait1_timeout is not None:
            self.firewall_setting_engine_option_fin_wait1_timeout = firewall_setting_engine_option_fin_wait1_timeout
        if firewall_setting_engine_option_generate_connection_events_udp_enabled is not None:
            self.firewall_setting_engine_option_generate_connection_events_udp_enabled = firewall_setting_engine_option_generate_connection_events_udp_enabled
        if activity_monitoring_setting_syslog_config_id is not None:
            self.activity_monitoring_setting_syslog_config_id = activity_monitoring_setting_syslog_config_id
        if firewall_setting_anti_evasion_check_tcp_syn_rst_flags is not None:
            self.firewall_setting_anti_evasion_check_tcp_syn_rst_flags = firewall_setting_anti_evasion_check_tcp_syn_rst_flags
        if anti_malware_setting_spyware_approved_list is not None:
            self.anti_malware_setting_spyware_approved_list = anti_malware_setting_spyware_approved_list
        if firewall_setting_anti_evasion_check_tcp_urgent_flags is not None:
            self.firewall_setting_anti_evasion_check_tcp_urgent_flags = firewall_setting_anti_evasion_check_tcp_urgent_flags
        if intrusion_prevention_setting_nsx_security_tagging_detect_mode_level is not None:
            self.intrusion_prevention_setting_nsx_security_tagging_detect_mode_level = intrusion_prevention_setting_nsx_security_tagging_detect_mode_level
        if intrusion_prevention_setting_engine_option_fragmented_ip_unconcerned_mac_address_bypass_enabled is not None:
            self.intrusion_prevention_setting_engine_option_fragmented_ip_unconcerned_mac_address_bypass_enabled = intrusion_prevention_setting_engine_option_fragmented_ip_unconcerned_mac_address_bypass_enabled
        if firewall_setting_engine_option_log_all_packet_data_enabled is not None:
            self.firewall_setting_engine_option_log_all_packet_data_enabled = firewall_setting_engine_option_log_all_packet_data_enabled
        if firewall_setting_anti_evasion_check_tcp_syn_fin_flags is not None:
            self.firewall_setting_anti_evasion_check_tcp_syn_fin_flags = firewall_setting_anti_evasion_check_tcp_syn_fin_flags
        if platform_setting_heartbeat_interval is not None:
            self.platform_setting_heartbeat_interval = platform_setting_heartbeat_interval
        if firewall_setting_engine_option_fragment_size_min is not None:
            self.firewall_setting_engine_option_fragment_size_min = firewall_setting_engine_option_fragment_size_min
        if anti_malware_setting_smart_protection_server_connection_lost_warning_enabled is not None:
            self.anti_malware_setting_smart_protection_server_connection_lost_warning_enabled = anti_malware_setting_smart_protection_server_connection_lost_warning_enabled
        if firewall_setting_reconnaissance_block_network_or_port_scan_duration is not None:
            self.firewall_setting_reconnaissance_block_network_or_port_scan_duration = firewall_setting_reconnaissance_block_network_or_port_scan_duration
        if integrity_monitoring_setting_content_hash_algorithm is not None:
            self.integrity_monitoring_setting_content_hash_algorithm = integrity_monitoring_setting_content_hash_algorithm
        if anti_malware_setting_smart_scan_state is not None:
            self.anti_malware_setting_smart_scan_state = anti_malware_setting_smart_scan_state
        if firewall_setting_config_package_exceeds_alert_max_enabled is not None:
            self.firewall_setting_config_package_exceeds_alert_max_enabled = firewall_setting_config_package_exceeds_alert_max_enabled
        if platform_setting_environment_variable_overrides is not None:
            self.platform_setting_environment_variable_overrides = platform_setting_environment_variable_overrides
        if firewall_setting_engine_option_fragment_offset_min is not None:
            self.firewall_setting_engine_option_fragment_offset_min = firewall_setting_engine_option_fragment_offset_min
        if anti_malware_setting_smart_protection_local_server_urls is not None:
            self.anti_malware_setting_smart_protection_local_server_urls = anti_malware_setting_smart_protection_local_server_urls
        if firewall_setting_engine_option_syn_rcvd_timeout is not None:
            self.firewall_setting_engine_option_syn_rcvd_timeout = firewall_setting_engine_option_syn_rcvd_timeout
        if firewall_setting_event_log_file_cached_entries_num is not None:
            self.firewall_setting_event_log_file_cached_entries_num = firewall_setting_event_log_file_cached_entries_num
        if firewall_setting_engine_option_force_allow_icmp_type3_code4 is not None:
            self.firewall_setting_engine_option_force_allow_icmp_type3_code4 = firewall_setting_engine_option_force_allow_icmp_type3_code4
        if firewall_setting_reconnaissance_block_tcp_null_scan_duration is not None:
            self.firewall_setting_reconnaissance_block_tcp_null_scan_duration = firewall_setting_reconnaissance_block_tcp_null_scan_duration
        if platform_setting_smart_protection_global_server_enabled is not None:
            self.platform_setting_smart_protection_global_server_enabled = platform_setting_smart_protection_global_server_enabled
        if integrity_monitoring_setting_realtime_enabled is not None:
            self.integrity_monitoring_setting_realtime_enabled = integrity_monitoring_setting_realtime_enabled
        if firewall_setting_engine_option_last_ack_timeout is not None:
            self.firewall_setting_engine_option_last_ack_timeout = firewall_setting_engine_option_last_ack_timeout
        if firewall_setting_reconnaissance_exclude_ip_list_id is not None:
            self.firewall_setting_reconnaissance_exclude_ip_list_id = firewall_setting_reconnaissance_exclude_ip_list_id
        if platform_setting_agent_self_protection_enabled is not None:
            self.platform_setting_agent_self_protection_enabled = platform_setting_agent_self_protection_enabled
        if firewall_setting_engine_option_drop_ipv6_reserved_addresses_enabled is not None:
            self.firewall_setting_engine_option_drop_ipv6_reserved_addresses_enabled = firewall_setting_engine_option_drop_ipv6_reserved_addresses_enabled
        if firewall_setting_anti_evasion_check_fin_no_connection is not None:
            self.firewall_setting_anti_evasion_check_fin_no_connection = firewall_setting_anti_evasion_check_fin_no_connection
        if firewall_setting_engine_option_debug_packet_num_max is not None:
            self.firewall_setting_engine_option_debug_packet_num_max = firewall_setting_engine_option_debug_packet_num_max
        if firewall_setting_engine_option_bypass_cisco_waas_connections_enabled is not None:
            self.firewall_setting_engine_option_bypass_cisco_waas_connections_enabled = firewall_setting_engine_option_bypass_cisco_waas_connections_enabled
        if firewall_setting_reconnaissance_enabled is not None:
            self.firewall_setting_reconnaissance_enabled = firewall_setting_reconnaissance_enabled
        if platform_setting_heartbeat_local_time_shift_alert_threshold is not None:
            self.platform_setting_heartbeat_local_time_shift_alert_threshold = platform_setting_heartbeat_local_time_shift_alert_threshold
        if anti_malware_setting_file_hash_md5_enabled is not None:
            self.anti_malware_setting_file_hash_md5_enabled = anti_malware_setting_file_hash_md5_enabled
        if firewall_setting_reconnaissance_detect_network_or_port_scan_enabled is not None:
            self.firewall_setting_reconnaissance_detect_network_or_port_scan_enabled = firewall_setting_reconnaissance_detect_network_or_port_scan_enabled
        if firewall_setting_engine_option_silent_tcp_connection_drop_enabled is not None:
            self.firewall_setting_engine_option_silent_tcp_connection_drop_enabled = firewall_setting_engine_option_silent_tcp_connection_drop_enabled
        if firewall_setting_engine_option_block_same_src_dst_ip_enabled is not None:
            self.firewall_setting_engine_option_block_same_src_dst_ip_enabled = firewall_setting_engine_option_block_same_src_dst_ip_enabled
        if firewall_setting_engine_option_force_allow_dhcp_dns is not None:
            self.firewall_setting_engine_option_force_allow_dhcp_dns = firewall_setting_engine_option_force_allow_dhcp_dns
        if firewall_setting_reconnaissance_include_ip_list_id is not None:
            self.firewall_setting_reconnaissance_include_ip_list_id = firewall_setting_reconnaissance_include_ip_list_id
        if firewall_setting_engine_options_enabled is not None:
            self.firewall_setting_engine_options_enabled = firewall_setting_engine_options_enabled
        if firewall_setting_reconnaissance_block_tcp_syn_fin_scan_duration is not None:
            self.firewall_setting_reconnaissance_block_tcp_syn_fin_scan_duration = firewall_setting_reconnaissance_block_tcp_syn_fin_scan_duration
        if web_reputation_setting_security_block_untested_pages_enabled is not None:
            self.web_reputation_setting_security_block_untested_pages_enabled = web_reputation_setting_security_block_untested_pages_enabled
        if web_reputation_setting_allowed_url_domains is not None:
            self.web_reputation_setting_allowed_url_domains = web_reputation_setting_allowed_url_domains
        if firewall_setting_event_log_file_ignore_source_ip_list_id is not None:
            self.firewall_setting_event_log_file_ignore_source_ip_list_id = firewall_setting_event_log_file_ignore_source_ip_list_id
        if firewall_setting_engine_option_drop_ipv6_fragments_lower_than_min_mtu_enabled is not None:
            self.firewall_setting_engine_option_drop_ipv6_fragments_lower_than_min_mtu_enabled = firewall_setting_engine_option_drop_ipv6_fragments_lower_than_min_mtu_enabled
        if platform_setting_auto_assign_new_intrusion_prevention_rules_enabled is not None:
            self.platform_setting_auto_assign_new_intrusion_prevention_rules_enabled = platform_setting_auto_assign_new_intrusion_prevention_rules_enabled
        if firewall_setting_anti_evasion_check_rst_no_connection is not None:
            self.firewall_setting_anti_evasion_check_rst_no_connection = firewall_setting_anti_evasion_check_rst_no_connection
        if web_reputation_setting_blocked_urls is not None:
            self.web_reputation_setting_blocked_urls = web_reputation_setting_blocked_urls
        if platform_setting_combined_mode_network_group_protection_source is not None:
            self.platform_setting_combined_mode_network_group_protection_source = platform_setting_combined_mode_network_group_protection_source
        if web_reputation_setting_alerting_enabled is not None:
            self.web_reputation_setting_alerting_enabled = web_reputation_setting_alerting_enabled
        if anti_malware_setting_nsx_security_tagging_on_remediation_failure_enabled is not None:
            self.anti_malware_setting_nsx_security_tagging_on_remediation_failure_enabled = anti_malware_setting_nsx_security_tagging_on_remediation_failure_enabled
        if integrity_monitoring_setting_cpu_usage_level is not None:
            self.integrity_monitoring_setting_cpu_usage_level = integrity_monitoring_setting_cpu_usage_level
        if platform_setting_auto_update_anti_malware_engine_enabled is not None:
            self.platform_setting_auto_update_anti_malware_engine_enabled = platform_setting_auto_update_anti_malware_engine_enabled
        if intrusion_prevention_setting_combined_mode_protection_source is not None:
            self.intrusion_prevention_setting_combined_mode_protection_source = intrusion_prevention_setting_combined_mode_protection_source

    @property
    def log_inspection_setting_severity_clipping_agent_event_send_syslog_level_min(self):
        """Gets the log_inspection_setting_severity_clipping_agent_event_send_syslog_level_min of this ComputerSettings.  # noqa: E501

        Send Agent/Appliance events to syslog when they equal or exceed the following severity level  # noqa: E501

        :return: The log_inspection_setting_severity_clipping_agent_event_send_syslog_level_min of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._log_inspection_setting_severity_clipping_agent_event_send_syslog_level_min

    @log_inspection_setting_severity_clipping_agent_event_send_syslog_level_min.setter
    def log_inspection_setting_severity_clipping_agent_event_send_syslog_level_min(self, log_inspection_setting_severity_clipping_agent_event_send_syslog_level_min):
        """Sets the log_inspection_setting_severity_clipping_agent_event_send_syslog_level_min of this ComputerSettings.

        Send Agent/Appliance events to syslog when they equal or exceed the following severity level  # noqa: E501

        :param log_inspection_setting_severity_clipping_agent_event_send_syslog_level_min: The log_inspection_setting_severity_clipping_agent_event_send_syslog_level_min of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._log_inspection_setting_severity_clipping_agent_event_send_syslog_level_min = log_inspection_setting_severity_clipping_agent_event_send_syslog_level_min

    @property
    def firewall_setting_engine_option_connections_cleanup_max(self):
        """Gets the firewall_setting_engine_option_connections_cleanup_max of this ComputerSettings.  # noqa: E501

        Maximum Connections per Cleanup  # noqa: E501

        :return: The firewall_setting_engine_option_connections_cleanup_max of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_engine_option_connections_cleanup_max

    @firewall_setting_engine_option_connections_cleanup_max.setter
    def firewall_setting_engine_option_connections_cleanup_max(self, firewall_setting_engine_option_connections_cleanup_max):
        """Sets the firewall_setting_engine_option_connections_cleanup_max of this ComputerSettings.

        Maximum Connections per Cleanup  # noqa: E501

        :param firewall_setting_engine_option_connections_cleanup_max: The firewall_setting_engine_option_connections_cleanup_max of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_engine_option_connections_cleanup_max = firewall_setting_engine_option_connections_cleanup_max

    @property
    def firewall_setting_engine_option_verify_tcp_checksum_enabled(self):
        """Gets the firewall_setting_engine_option_verify_tcp_checksum_enabled of this ComputerSettings.  # noqa: E501

        Verify TCP Checksum  # noqa: E501

        :return: The firewall_setting_engine_option_verify_tcp_checksum_enabled of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_engine_option_verify_tcp_checksum_enabled

    @firewall_setting_engine_option_verify_tcp_checksum_enabled.setter
    def firewall_setting_engine_option_verify_tcp_checksum_enabled(self, firewall_setting_engine_option_verify_tcp_checksum_enabled):
        """Sets the firewall_setting_engine_option_verify_tcp_checksum_enabled of this ComputerSettings.

        Verify TCP Checksum  # noqa: E501

        :param firewall_setting_engine_option_verify_tcp_checksum_enabled: The firewall_setting_engine_option_verify_tcp_checksum_enabled of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_engine_option_verify_tcp_checksum_enabled = firewall_setting_engine_option_verify_tcp_checksum_enabled

    @property
    def anti_malware_setting_scan_cache_on_demand_config_id(self):
        """Gets the anti_malware_setting_scan_cache_on_demand_config_id of this ComputerSettings.  # noqa: E501

        Anti-Malware On Demand Scan Cache Configuration  # noqa: E501

        :return: The anti_malware_setting_scan_cache_on_demand_config_id of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._anti_malware_setting_scan_cache_on_demand_config_id

    @anti_malware_setting_scan_cache_on_demand_config_id.setter
    def anti_malware_setting_scan_cache_on_demand_config_id(self, anti_malware_setting_scan_cache_on_demand_config_id):
        """Sets the anti_malware_setting_scan_cache_on_demand_config_id of this ComputerSettings.

        Anti-Malware On Demand Scan Cache Configuration  # noqa: E501

        :param anti_malware_setting_scan_cache_on_demand_config_id: The anti_malware_setting_scan_cache_on_demand_config_id of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._anti_malware_setting_scan_cache_on_demand_config_id = anti_malware_setting_scan_cache_on_demand_config_id

    @property
    def application_control_setting_shared_ruleset_id(self):
        """Gets the application_control_setting_shared_ruleset_id of this ComputerSettings.  # noqa: E501

        Shared Application Control Ruleset  # noqa: E501

        :return: The application_control_setting_shared_ruleset_id of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._application_control_setting_shared_ruleset_id

    @application_control_setting_shared_ruleset_id.setter
    def application_control_setting_shared_ruleset_id(self, application_control_setting_shared_ruleset_id):
        """Sets the application_control_setting_shared_ruleset_id of this ComputerSettings.

        Shared Application Control Ruleset  # noqa: E501

        :param application_control_setting_shared_ruleset_id: The application_control_setting_shared_ruleset_id of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._application_control_setting_shared_ruleset_id = application_control_setting_shared_ruleset_id

    @property
    def web_reputation_setting_smart_protection_server_connection_lost_warning_enabled(self):
        """Gets the web_reputation_setting_smart_protection_server_connection_lost_warning_enabled of this ComputerSettings.  # noqa: E501

        Warn if connection to Smart Protection Server is lost  # noqa: E501

        :return: The web_reputation_setting_smart_protection_server_connection_lost_warning_enabled of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._web_reputation_setting_smart_protection_server_connection_lost_warning_enabled

    @web_reputation_setting_smart_protection_server_connection_lost_warning_enabled.setter
    def web_reputation_setting_smart_protection_server_connection_lost_warning_enabled(self, web_reputation_setting_smart_protection_server_connection_lost_warning_enabled):
        """Sets the web_reputation_setting_smart_protection_server_connection_lost_warning_enabled of this ComputerSettings.

        Warn if connection to Smart Protection Server is lost  # noqa: E501

        :param web_reputation_setting_smart_protection_server_connection_lost_warning_enabled: The web_reputation_setting_smart_protection_server_connection_lost_warning_enabled of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._web_reputation_setting_smart_protection_server_connection_lost_warning_enabled = web_reputation_setting_smart_protection_server_connection_lost_warning_enabled

    @property
    def application_control_setting_execution_enforcement_level(self):
        """Gets the application_control_setting_execution_enforcement_level of this ComputerSettings.  # noqa: E501

        Enforcement:  # noqa: E501

        :return: The application_control_setting_execution_enforcement_level of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._application_control_setting_execution_enforcement_level

    @application_control_setting_execution_enforcement_level.setter
    def application_control_setting_execution_enforcement_level(self, application_control_setting_execution_enforcement_level):
        """Sets the application_control_setting_execution_enforcement_level of this ComputerSettings.

        Enforcement:  # noqa: E501

        :param application_control_setting_execution_enforcement_level: The application_control_setting_execution_enforcement_level of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._application_control_setting_execution_enforcement_level = application_control_setting_execution_enforcement_level

    @property
    def web_reputation_setting_blocked_url_domains(self):
        """Gets the web_reputation_setting_blocked_url_domains of this ComputerSettings.  # noqa: E501

        Blocked Domain URLs  # noqa: E501

        :return: The web_reputation_setting_blocked_url_domains of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._web_reputation_setting_blocked_url_domains

    @web_reputation_setting_blocked_url_domains.setter
    def web_reputation_setting_blocked_url_domains(self, web_reputation_setting_blocked_url_domains):
        """Sets the web_reputation_setting_blocked_url_domains of this ComputerSettings.

        Blocked Domain URLs  # noqa: E501

        :param web_reputation_setting_blocked_url_domains: The web_reputation_setting_blocked_url_domains of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._web_reputation_setting_blocked_url_domains = web_reputation_setting_blocked_url_domains

    @property
    def firewall_setting_engine_option_syn_sent_timeout(self):
        """Gets the firewall_setting_engine_option_syn_sent_timeout of this ComputerSettings.  # noqa: E501

        SYN_SENT Timeout  # noqa: E501

        :return: The firewall_setting_engine_option_syn_sent_timeout of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_engine_option_syn_sent_timeout

    @firewall_setting_engine_option_syn_sent_timeout.setter
    def firewall_setting_engine_option_syn_sent_timeout(self, firewall_setting_engine_option_syn_sent_timeout):
        """Sets the firewall_setting_engine_option_syn_sent_timeout of this ComputerSettings.

        SYN_SENT Timeout  # noqa: E501

        :param firewall_setting_engine_option_syn_sent_timeout: The firewall_setting_engine_option_syn_sent_timeout of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_engine_option_syn_sent_timeout = firewall_setting_engine_option_syn_sent_timeout

    @property
    def platform_setting_agent_self_protection_password(self):
        """Gets the platform_setting_agent_self_protection_password of this ComputerSettings.  # noqa: E501

        Password  # noqa: E501

        :return: The platform_setting_agent_self_protection_password of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._platform_setting_agent_self_protection_password

    @platform_setting_agent_self_protection_password.setter
    def platform_setting_agent_self_protection_password(self, platform_setting_agent_self_protection_password):
        """Sets the platform_setting_agent_self_protection_password of this ComputerSettings.

        Password  # noqa: E501

        :param platform_setting_agent_self_protection_password: The platform_setting_agent_self_protection_password of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._platform_setting_agent_self_protection_password = platform_setting_agent_self_protection_password

    @property
    def firewall_setting_reconnaissance_block_tcp_xmas_attack_duration(self):
        """Gets the firewall_setting_reconnaissance_block_tcp_xmas_attack_duration of this ComputerSettings.  # noqa: E501

        TCP Xmas Scan - Block Traffic  # noqa: E501

        :return: The firewall_setting_reconnaissance_block_tcp_xmas_attack_duration of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_reconnaissance_block_tcp_xmas_attack_duration

    @firewall_setting_reconnaissance_block_tcp_xmas_attack_duration.setter
    def firewall_setting_reconnaissance_block_tcp_xmas_attack_duration(self, firewall_setting_reconnaissance_block_tcp_xmas_attack_duration):
        """Sets the firewall_setting_reconnaissance_block_tcp_xmas_attack_duration of this ComputerSettings.

        TCP Xmas Scan - Block Traffic  # noqa: E501

        :param firewall_setting_reconnaissance_block_tcp_xmas_attack_duration: The firewall_setting_reconnaissance_block_tcp_xmas_attack_duration of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_reconnaissance_block_tcp_xmas_attack_duration = firewall_setting_reconnaissance_block_tcp_xmas_attack_duration

    @property
    def intrusion_prevention_setting_virtual_and_container_network_scan_enabled(self):
        """Gets the intrusion_prevention_setting_virtual_and_container_network_scan_enabled of this ComputerSettings.  # noqa: E501

        Scan container network traffic  # noqa: E501

        :return: The intrusion_prevention_setting_virtual_and_container_network_scan_enabled of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._intrusion_prevention_setting_virtual_and_container_network_scan_enabled

    @intrusion_prevention_setting_virtual_and_container_network_scan_enabled.setter
    def intrusion_prevention_setting_virtual_and_container_network_scan_enabled(self, intrusion_prevention_setting_virtual_and_container_network_scan_enabled):
        """Sets the intrusion_prevention_setting_virtual_and_container_network_scan_enabled of this ComputerSettings.

        Scan container network traffic  # noqa: E501

        :param intrusion_prevention_setting_virtual_and_container_network_scan_enabled: The intrusion_prevention_setting_virtual_and_container_network_scan_enabled of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._intrusion_prevention_setting_virtual_and_container_network_scan_enabled = intrusion_prevention_setting_virtual_and_container_network_scan_enabled

    @property
    def log_inspection_setting_syslog_config_id(self):
        """Gets the log_inspection_setting_syslog_config_id of this ComputerSettings.  # noqa: E501

        Log Inspection Syslog Configuration  # noqa: E501

        :return: The log_inspection_setting_syslog_config_id of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._log_inspection_setting_syslog_config_id

    @log_inspection_setting_syslog_config_id.setter
    def log_inspection_setting_syslog_config_id(self, log_inspection_setting_syslog_config_id):
        """Sets the log_inspection_setting_syslog_config_id of this ComputerSettings.

        Log Inspection Syslog Configuration  # noqa: E501

        :param log_inspection_setting_syslog_config_id: The log_inspection_setting_syslog_config_id of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._log_inspection_setting_syslog_config_id = log_inspection_setting_syslog_config_id

    @property
    def firewall_setting_engine_option_debug_mode_enabled(self):
        """Gets the firewall_setting_engine_option_debug_mode_enabled of this ComputerSettings.  # noqa: E501

        Enable Debug Mode  # noqa: E501

        :return: The firewall_setting_engine_option_debug_mode_enabled of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_engine_option_debug_mode_enabled

    @firewall_setting_engine_option_debug_mode_enabled.setter
    def firewall_setting_engine_option_debug_mode_enabled(self, firewall_setting_engine_option_debug_mode_enabled):
        """Sets the firewall_setting_engine_option_debug_mode_enabled of this ComputerSettings.

        Enable Debug Mode  # noqa: E501

        :param firewall_setting_engine_option_debug_mode_enabled: The firewall_setting_engine_option_debug_mode_enabled of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_engine_option_debug_mode_enabled = firewall_setting_engine_option_debug_mode_enabled

    @property
    def firewall_setting_virtual_and_container_network_scan_enabled(self):
        """Gets the firewall_setting_virtual_and_container_network_scan_enabled of this ComputerSettings.  # noqa: E501

        Scan container network traffic  # noqa: E501

        :return: The firewall_setting_virtual_and_container_network_scan_enabled of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_virtual_and_container_network_scan_enabled

    @firewall_setting_virtual_and_container_network_scan_enabled.setter
    def firewall_setting_virtual_and_container_network_scan_enabled(self, firewall_setting_virtual_and_container_network_scan_enabled):
        """Sets the firewall_setting_virtual_and_container_network_scan_enabled of this ComputerSettings.

        Scan container network traffic  # noqa: E501

        :param firewall_setting_virtual_and_container_network_scan_enabled: The firewall_setting_virtual_and_container_network_scan_enabled of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_virtual_and_container_network_scan_enabled = firewall_setting_virtual_and_container_network_scan_enabled

    @property
    def anti_malware_setting_file_hash_sha256_enabled(self):
        """Gets the anti_malware_setting_file_hash_sha256_enabled of this ComputerSettings.  # noqa: E501

        SHA256  # noqa: E501

        :return: The anti_malware_setting_file_hash_sha256_enabled of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._anti_malware_setting_file_hash_sha256_enabled

    @anti_malware_setting_file_hash_sha256_enabled.setter
    def anti_malware_setting_file_hash_sha256_enabled(self, anti_malware_setting_file_hash_sha256_enabled):
        """Sets the anti_malware_setting_file_hash_sha256_enabled of this ComputerSettings.

        SHA256  # noqa: E501

        :param anti_malware_setting_file_hash_sha256_enabled: The anti_malware_setting_file_hash_sha256_enabled of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._anti_malware_setting_file_hash_sha256_enabled = anti_malware_setting_file_hash_sha256_enabled

    @property
    def firewall_setting_reconnaissance_notify_fingerprint_probe_enabled(self):
        """Gets the firewall_setting_reconnaissance_notify_fingerprint_probe_enabled of this ComputerSettings.  # noqa: E501

        Computer OS Fingerprint Probe - Notify DSM Immediately  # noqa: E501

        :return: The firewall_setting_reconnaissance_notify_fingerprint_probe_enabled of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_reconnaissance_notify_fingerprint_probe_enabled

    @firewall_setting_reconnaissance_notify_fingerprint_probe_enabled.setter
    def firewall_setting_reconnaissance_notify_fingerprint_probe_enabled(self, firewall_setting_reconnaissance_notify_fingerprint_probe_enabled):
        """Sets the firewall_setting_reconnaissance_notify_fingerprint_probe_enabled of this ComputerSettings.

        Computer OS Fingerprint Probe - Notify DSM Immediately  # noqa: E501

        :param firewall_setting_reconnaissance_notify_fingerprint_probe_enabled: The firewall_setting_reconnaissance_notify_fingerprint_probe_enabled of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_reconnaissance_notify_fingerprint_probe_enabled = firewall_setting_reconnaissance_notify_fingerprint_probe_enabled

    @property
    def firewall_setting_event_log_file_retain_num(self):
        """Gets the firewall_setting_event_log_file_retain_num of this ComputerSettings.  # noqa: E501

        Number of event log files to retain (on Agent/Appliance)  # noqa: E501

        :return: The firewall_setting_event_log_file_retain_num of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_event_log_file_retain_num

    @firewall_setting_event_log_file_retain_num.setter
    def firewall_setting_event_log_file_retain_num(self, firewall_setting_event_log_file_retain_num):
        """Sets the firewall_setting_event_log_file_retain_num of this ComputerSettings.

        Number of event log files to retain (on Agent/Appliance)  # noqa: E501

        :param firewall_setting_event_log_file_retain_num: The firewall_setting_event_log_file_retain_num of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_event_log_file_retain_num = firewall_setting_event_log_file_retain_num

    @property
    def firewall_setting_anti_evasion_check_tcp_paws_zero(self):
        """Gets the firewall_setting_anti_evasion_check_tcp_paws_zero of this ComputerSettings.  # noqa: E501

        Timestamp PAWS Zero Allowed  # noqa: E501

        :return: The firewall_setting_anti_evasion_check_tcp_paws_zero of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_anti_evasion_check_tcp_paws_zero

    @firewall_setting_anti_evasion_check_tcp_paws_zero.setter
    def firewall_setting_anti_evasion_check_tcp_paws_zero(self, firewall_setting_anti_evasion_check_tcp_paws_zero):
        """Sets the firewall_setting_anti_evasion_check_tcp_paws_zero of this ComputerSettings.

        Timestamp PAWS Zero Allowed  # noqa: E501

        :param firewall_setting_anti_evasion_check_tcp_paws_zero: The firewall_setting_anti_evasion_check_tcp_paws_zero of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_anti_evasion_check_tcp_paws_zero = firewall_setting_anti_evasion_check_tcp_paws_zero

    @property
    def anti_malware_setting_connected_threat_defense_use_control_manager_suspicious_object_list_enabled(self):
        """Gets the anti_malware_setting_connected_threat_defense_use_control_manager_suspicious_object_list_enabled of this ComputerSettings.  # noqa: E501

        Use Apex Central's Suspicious Object List  # noqa: E501

        :return: The anti_malware_setting_connected_threat_defense_use_control_manager_suspicious_object_list_enabled of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._anti_malware_setting_connected_threat_defense_use_control_manager_suspicious_object_list_enabled

    @anti_malware_setting_connected_threat_defense_use_control_manager_suspicious_object_list_enabled.setter
    def anti_malware_setting_connected_threat_defense_use_control_manager_suspicious_object_list_enabled(self, anti_malware_setting_connected_threat_defense_use_control_manager_suspicious_object_list_enabled):
        """Sets the anti_malware_setting_connected_threat_defense_use_control_manager_suspicious_object_list_enabled of this ComputerSettings.

        Use Apex Central's Suspicious Object List  # noqa: E501

        :param anti_malware_setting_connected_threat_defense_use_control_manager_suspicious_object_list_enabled: The anti_malware_setting_connected_threat_defense_use_control_manager_suspicious_object_list_enabled of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._anti_malware_setting_connected_threat_defense_use_control_manager_suspicious_object_list_enabled = anti_malware_setting_connected_threat_defense_use_control_manager_suspicious_object_list_enabled

    @property
    def intrusion_prevention_setting_engine_option_fragmented_ip_keep_max(self):
        """Gets the intrusion_prevention_setting_engine_option_fragmented_ip_keep_max of this ComputerSettings.  # noqa: E501

        Maximum number of fragmented IP packets to keep  # noqa: E501

        :return: The intrusion_prevention_setting_engine_option_fragmented_ip_keep_max of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._intrusion_prevention_setting_engine_option_fragmented_ip_keep_max

    @intrusion_prevention_setting_engine_option_fragmented_ip_keep_max.setter
    def intrusion_prevention_setting_engine_option_fragmented_ip_keep_max(self, intrusion_prevention_setting_engine_option_fragmented_ip_keep_max):
        """Sets the intrusion_prevention_setting_engine_option_fragmented_ip_keep_max of this ComputerSettings.

        Maximum number of fragmented IP packets to keep  # noqa: E501

        :param intrusion_prevention_setting_engine_option_fragmented_ip_keep_max: The intrusion_prevention_setting_engine_option_fragmented_ip_keep_max of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._intrusion_prevention_setting_engine_option_fragmented_ip_keep_max = intrusion_prevention_setting_engine_option_fragmented_ip_keep_max

    @property
    def firewall_setting_engine_option_drop6_to4_bogons_addresses_enabled(self):
        """Gets the firewall_setting_engine_option_drop6_to4_bogons_addresses_enabled of this ComputerSettings.  # noqa: E501

        Drop 6to4 Bogon Addresses  # noqa: E501

        :return: The firewall_setting_engine_option_drop6_to4_bogons_addresses_enabled of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_engine_option_drop6_to4_bogons_addresses_enabled

    @firewall_setting_engine_option_drop6_to4_bogons_addresses_enabled.setter
    def firewall_setting_engine_option_drop6_to4_bogons_addresses_enabled(self, firewall_setting_engine_option_drop6_to4_bogons_addresses_enabled):
        """Sets the firewall_setting_engine_option_drop6_to4_bogons_addresses_enabled of this ComputerSettings.

        Drop 6to4 Bogon Addresses  # noqa: E501

        :param firewall_setting_engine_option_drop6_to4_bogons_addresses_enabled: The firewall_setting_engine_option_drop6_to4_bogons_addresses_enabled of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_engine_option_drop6_to4_bogons_addresses_enabled = firewall_setting_engine_option_drop6_to4_bogons_addresses_enabled

    @property
    def log_inspection_setting_severity_clipping_agent_event_store_level_min(self):
        """Gets the log_inspection_setting_severity_clipping_agent_event_store_level_min of this ComputerSettings.  # noqa: E501

        Store events at the Agent/Appliance for later retrieval by DSM when they equal or exceed the following severity level  # noqa: E501

        :return: The log_inspection_setting_severity_clipping_agent_event_store_level_min of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._log_inspection_setting_severity_clipping_agent_event_store_level_min

    @log_inspection_setting_severity_clipping_agent_event_store_level_min.setter
    def log_inspection_setting_severity_clipping_agent_event_store_level_min(self, log_inspection_setting_severity_clipping_agent_event_store_level_min):
        """Sets the log_inspection_setting_severity_clipping_agent_event_store_level_min of this ComputerSettings.

        Store events at the Agent/Appliance for later retrieval by DSM when they equal or exceed the following severity level  # noqa: E501

        :param log_inspection_setting_severity_clipping_agent_event_store_level_min: The log_inspection_setting_severity_clipping_agent_event_store_level_min of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._log_inspection_setting_severity_clipping_agent_event_store_level_min = log_inspection_setting_severity_clipping_agent_event_store_level_min

    @property
    def platform_setting_scan_cache_concurrency_max(self):
        """Gets the platform_setting_scan_cache_concurrency_max of this ComputerSettings.  # noqa: E501

        Max Concurrent Scans  # noqa: E501

        :return: The platform_setting_scan_cache_concurrency_max of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._platform_setting_scan_cache_concurrency_max

    @platform_setting_scan_cache_concurrency_max.setter
    def platform_setting_scan_cache_concurrency_max(self, platform_setting_scan_cache_concurrency_max):
        """Sets the platform_setting_scan_cache_concurrency_max of this ComputerSettings.

        Max Concurrent Scans  # noqa: E501

        :param platform_setting_scan_cache_concurrency_max: The platform_setting_scan_cache_concurrency_max of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._platform_setting_scan_cache_concurrency_max = platform_setting_scan_cache_concurrency_max

    @property
    def anti_malware_setting_syslog_config_id(self):
        """Gets the anti_malware_setting_syslog_config_id of this ComputerSettings.  # noqa: E501

        Anti-Malware Syslog Configuration  # noqa: E501

        :return: The anti_malware_setting_syslog_config_id of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._anti_malware_setting_syslog_config_id

    @anti_malware_setting_syslog_config_id.setter
    def anti_malware_setting_syslog_config_id(self, anti_malware_setting_syslog_config_id):
        """Sets the anti_malware_setting_syslog_config_id of this ComputerSettings.

        Anti-Malware Syslog Configuration  # noqa: E501

        :param anti_malware_setting_syslog_config_id: The anti_malware_setting_syslog_config_id of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._anti_malware_setting_syslog_config_id = anti_malware_setting_syslog_config_id

    @property
    def firewall_setting_anti_evasion_tcp_paws_window_policy(self):
        """Gets the firewall_setting_anti_evasion_tcp_paws_window_policy of this ComputerSettings.  # noqa: E501

        TCP Timestamp PAWS Window  # noqa: E501

        :return: The firewall_setting_anti_evasion_tcp_paws_window_policy of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_anti_evasion_tcp_paws_window_policy

    @firewall_setting_anti_evasion_tcp_paws_window_policy.setter
    def firewall_setting_anti_evasion_tcp_paws_window_policy(self, firewall_setting_anti_evasion_tcp_paws_window_policy):
        """Sets the firewall_setting_anti_evasion_tcp_paws_window_policy of this ComputerSettings.

        TCP Timestamp PAWS Window  # noqa: E501

        :param firewall_setting_anti_evasion_tcp_paws_window_policy: The firewall_setting_anti_evasion_tcp_paws_window_policy of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_anti_evasion_tcp_paws_window_policy = firewall_setting_anti_evasion_tcp_paws_window_policy

    @property
    def firewall_setting_reconnaissance_detect_tcp_xmas_attack_enabled(self):
        """Gets the firewall_setting_reconnaissance_detect_tcp_xmas_attack_enabled of this ComputerSettings.  # noqa: E501

        TCP Xmas Scan - Enabled  # noqa: E501

        :return: The firewall_setting_reconnaissance_detect_tcp_xmas_attack_enabled of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_reconnaissance_detect_tcp_xmas_attack_enabled

    @firewall_setting_reconnaissance_detect_tcp_xmas_attack_enabled.setter
    def firewall_setting_reconnaissance_detect_tcp_xmas_attack_enabled(self, firewall_setting_reconnaissance_detect_tcp_xmas_attack_enabled):
        """Sets the firewall_setting_reconnaissance_detect_tcp_xmas_attack_enabled of this ComputerSettings.

        TCP Xmas Scan - Enabled  # noqa: E501

        :param firewall_setting_reconnaissance_detect_tcp_xmas_attack_enabled: The firewall_setting_reconnaissance_detect_tcp_xmas_attack_enabled of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_reconnaissance_detect_tcp_xmas_attack_enabled = firewall_setting_reconnaissance_detect_tcp_xmas_attack_enabled

    @property
    def application_control_setting_ruleset_mode(self):
        """Gets the application_control_setting_ruleset_mode of this ComputerSettings.  # noqa: E501

        Ruleset mode:  # noqa: E501

        :return: The application_control_setting_ruleset_mode of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._application_control_setting_ruleset_mode

    @application_control_setting_ruleset_mode.setter
    def application_control_setting_ruleset_mode(self, application_control_setting_ruleset_mode):
        """Sets the application_control_setting_ruleset_mode of this ComputerSettings.

        Ruleset mode:  # noqa: E501

        :param application_control_setting_ruleset_mode: The application_control_setting_ruleset_mode of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._application_control_setting_ruleset_mode = application_control_setting_ruleset_mode

    @property
    def anti_malware_setting_smart_protection_global_server_use_proxy_enabled(self):
        """Gets the anti_malware_setting_smart_protection_global_server_use_proxy_enabled of this ComputerSettings.  # noqa: E501

        Use Proxy when accessing Smart Protection Service for Smart Scan  # noqa: E501

        :return: The anti_malware_setting_smart_protection_global_server_use_proxy_enabled of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._anti_malware_setting_smart_protection_global_server_use_proxy_enabled

    @anti_malware_setting_smart_protection_global_server_use_proxy_enabled.setter
    def anti_malware_setting_smart_protection_global_server_use_proxy_enabled(self, anti_malware_setting_smart_protection_global_server_use_proxy_enabled):
        """Sets the anti_malware_setting_smart_protection_global_server_use_proxy_enabled of this ComputerSettings.

        Use Proxy when accessing Smart Protection Service for Smart Scan  # noqa: E501

        :param anti_malware_setting_smart_protection_global_server_use_proxy_enabled: The anti_malware_setting_smart_protection_global_server_use_proxy_enabled of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._anti_malware_setting_smart_protection_global_server_use_proxy_enabled = anti_malware_setting_smart_protection_global_server_use_proxy_enabled

    @property
    def web_reputation_setting_smart_protection_local_server_allow_off_domain_global(self):
        """Gets the web_reputation_setting_smart_protection_local_server_allow_off_domain_global of this ComputerSettings.  # noqa: E501

        When off domain, connect to global Smart Protection Service. (Windows only)  # noqa: E501

        :return: The web_reputation_setting_smart_protection_local_server_allow_off_domain_global of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._web_reputation_setting_smart_protection_local_server_allow_off_domain_global

    @web_reputation_setting_smart_protection_local_server_allow_off_domain_global.setter
    def web_reputation_setting_smart_protection_local_server_allow_off_domain_global(self, web_reputation_setting_smart_protection_local_server_allow_off_domain_global):
        """Sets the web_reputation_setting_smart_protection_local_server_allow_off_domain_global of this ComputerSettings.

        When off domain, connect to global Smart Protection Service. (Windows only)  # noqa: E501

        :param web_reputation_setting_smart_protection_local_server_allow_off_domain_global: The web_reputation_setting_smart_protection_local_server_allow_off_domain_global of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._web_reputation_setting_smart_protection_local_server_allow_off_domain_global = web_reputation_setting_smart_protection_local_server_allow_off_domain_global

    @property
    def integrity_monitoring_setting_combined_mode_protection_source(self):
        """Gets the integrity_monitoring_setting_combined_mode_protection_source of this ComputerSettings.  # noqa: E501

        Integrity Monitoring  # noqa: E501

        :return: The integrity_monitoring_setting_combined_mode_protection_source of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._integrity_monitoring_setting_combined_mode_protection_source

    @integrity_monitoring_setting_combined_mode_protection_source.setter
    def integrity_monitoring_setting_combined_mode_protection_source(self, integrity_monitoring_setting_combined_mode_protection_source):
        """Sets the integrity_monitoring_setting_combined_mode_protection_source of this ComputerSettings.

        Integrity Monitoring  # noqa: E501

        :param integrity_monitoring_setting_combined_mode_protection_source: The integrity_monitoring_setting_combined_mode_protection_source of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._integrity_monitoring_setting_combined_mode_protection_source = integrity_monitoring_setting_combined_mode_protection_source

    @property
    def firewall_setting_engine_option_close_wait_timeout(self):
        """Gets the firewall_setting_engine_option_close_wait_timeout of this ComputerSettings.  # noqa: E501

        CLOSE_WAIT Timeout  # noqa: E501

        :return: The firewall_setting_engine_option_close_wait_timeout of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_engine_option_close_wait_timeout

    @firewall_setting_engine_option_close_wait_timeout.setter
    def firewall_setting_engine_option_close_wait_timeout(self, firewall_setting_engine_option_close_wait_timeout):
        """Sets the firewall_setting_engine_option_close_wait_timeout of this ComputerSettings.

        CLOSE_WAIT Timeout  # noqa: E501

        :param firewall_setting_engine_option_close_wait_timeout: The firewall_setting_engine_option_close_wait_timeout of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_engine_option_close_wait_timeout = firewall_setting_engine_option_close_wait_timeout

    @property
    def platform_setting_scan_open_port_list_id(self):
        """Gets the platform_setting_scan_open_port_list_id of this ComputerSettings.  # noqa: E501

        Ports to scan  # noqa: E501

        :return: The platform_setting_scan_open_port_list_id of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._platform_setting_scan_open_port_list_id

    @platform_setting_scan_open_port_list_id.setter
    def platform_setting_scan_open_port_list_id(self, platform_setting_scan_open_port_list_id):
        """Sets the platform_setting_scan_open_port_list_id of this ComputerSettings.

        Ports to scan  # noqa: E501

        :param platform_setting_scan_open_port_list_id: The platform_setting_scan_open_port_list_id of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._platform_setting_scan_open_port_list_id = platform_setting_scan_open_port_list_id

    @property
    def platform_setting_agent_self_protection_password_enabled(self):
        """Gets the platform_setting_agent_self_protection_password_enabled of this ComputerSettings.  # noqa: E501

        Local override requires password  # noqa: E501

        :return: The platform_setting_agent_self_protection_password_enabled of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._platform_setting_agent_self_protection_password_enabled

    @platform_setting_agent_self_protection_password_enabled.setter
    def platform_setting_agent_self_protection_password_enabled(self, platform_setting_agent_self_protection_password_enabled):
        """Sets the platform_setting_agent_self_protection_password_enabled of this ComputerSettings.

        Local override requires password  # noqa: E501

        :param platform_setting_agent_self_protection_password_enabled: The platform_setting_agent_self_protection_password_enabled of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._platform_setting_agent_self_protection_password_enabled = platform_setting_agent_self_protection_password_enabled

    @property
    def firewall_setting_engine_option_ack_timeout(self):
        """Gets the firewall_setting_engine_option_ack_timeout of this ComputerSettings.  # noqa: E501

        ACK Storm Timeout  # noqa: E501

        :return: The firewall_setting_engine_option_ack_timeout of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_engine_option_ack_timeout

    @firewall_setting_engine_option_ack_timeout.setter
    def firewall_setting_engine_option_ack_timeout(self, firewall_setting_engine_option_ack_timeout):
        """Sets the firewall_setting_engine_option_ack_timeout of this ComputerSettings.

        ACK Storm Timeout  # noqa: E501

        :param firewall_setting_engine_option_ack_timeout: The firewall_setting_engine_option_ack_timeout of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_engine_option_ack_timeout = firewall_setting_engine_option_ack_timeout

    @property
    def firewall_setting_event_log_file_cached_entries_stale_time(self):
        """Gets the firewall_setting_event_log_file_cached_entries_stale_time of this ComputerSettings.  # noqa: E501

        Cache Stale time  # noqa: E501

        :return: The firewall_setting_event_log_file_cached_entries_stale_time of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_event_log_file_cached_entries_stale_time

    @firewall_setting_event_log_file_cached_entries_stale_time.setter
    def firewall_setting_event_log_file_cached_entries_stale_time(self, firewall_setting_event_log_file_cached_entries_stale_time):
        """Sets the firewall_setting_event_log_file_cached_entries_stale_time of this ComputerSettings.

        Cache Stale time  # noqa: E501

        :param firewall_setting_event_log_file_cached_entries_stale_time: The firewall_setting_event_log_file_cached_entries_stale_time of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_event_log_file_cached_entries_stale_time = firewall_setting_event_log_file_cached_entries_stale_time

    @property
    def firewall_setting_combined_mode_protection_source(self):
        """Gets the firewall_setting_combined_mode_protection_source of this ComputerSettings.  # noqa: E501

        Firewall  # noqa: E501

        :return: The firewall_setting_combined_mode_protection_source of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_combined_mode_protection_source

    @firewall_setting_combined_mode_protection_source.setter
    def firewall_setting_combined_mode_protection_source(self, firewall_setting_combined_mode_protection_source):
        """Sets the firewall_setting_combined_mode_protection_source of this ComputerSettings.

        Firewall  # noqa: E501

        :param firewall_setting_combined_mode_protection_source: The firewall_setting_combined_mode_protection_source of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_combined_mode_protection_source = firewall_setting_combined_mode_protection_source

    @property
    def platform_setting_agent_events_send_interval(self):
        """Gets the platform_setting_agent_events_send_interval of this ComputerSettings.  # noqa: E501

        Period between sending of events  # noqa: E501

        :return: The platform_setting_agent_events_send_interval of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._platform_setting_agent_events_send_interval

    @platform_setting_agent_events_send_interval.setter
    def platform_setting_agent_events_send_interval(self, platform_setting_agent_events_send_interval):
        """Sets the platform_setting_agent_events_send_interval of this ComputerSettings.

        Period between sending of events  # noqa: E501

        :param platform_setting_agent_events_send_interval: The platform_setting_agent_events_send_interval of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._platform_setting_agent_events_send_interval = platform_setting_agent_events_send_interval

    @property
    def platform_setting_inactive_agent_cleanup_override_enabled(self):
        """Gets the platform_setting_inactive_agent_cleanup_override_enabled of this ComputerSettings.  # noqa: E501

        Prevent this computer from being deleted if Inactive Agent Cleanup is enabled:  # noqa: E501

        :return: The platform_setting_inactive_agent_cleanup_override_enabled of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._platform_setting_inactive_agent_cleanup_override_enabled

    @platform_setting_inactive_agent_cleanup_override_enabled.setter
    def platform_setting_inactive_agent_cleanup_override_enabled(self, platform_setting_inactive_agent_cleanup_override_enabled):
        """Sets the platform_setting_inactive_agent_cleanup_override_enabled of this ComputerSettings.

        Prevent this computer from being deleted if Inactive Agent Cleanup is enabled:  # noqa: E501

        :param platform_setting_inactive_agent_cleanup_override_enabled: The platform_setting_inactive_agent_cleanup_override_enabled of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._platform_setting_inactive_agent_cleanup_override_enabled = platform_setting_inactive_agent_cleanup_override_enabled

    @property
    def firewall_setting_failure_response_engine_system(self):
        """Gets the firewall_setting_failure_response_engine_system of this ComputerSettings.  # noqa: E501

        Network Engine System Failure  # noqa: E501

        :return: The firewall_setting_failure_response_engine_system of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_failure_response_engine_system

    @firewall_setting_failure_response_engine_system.setter
    def firewall_setting_failure_response_engine_system(self, firewall_setting_failure_response_engine_system):
        """Sets the firewall_setting_failure_response_engine_system of this ComputerSettings.

        Network Engine System Failure  # noqa: E501

        :param firewall_setting_failure_response_engine_system: The firewall_setting_failure_response_engine_system of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_failure_response_engine_system = firewall_setting_failure_response_engine_system

    @property
    def platform_setting_relay_state(self):
        """Gets the platform_setting_relay_state of this ComputerSettings.  # noqa: E501

        Relay State  # noqa: E501

        :return: The platform_setting_relay_state of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._platform_setting_relay_state

    @platform_setting_relay_state.setter
    def platform_setting_relay_state(self, platform_setting_relay_state):
        """Sets the platform_setting_relay_state of this ComputerSettings.

        Relay State  # noqa: E501

        :param platform_setting_relay_state: The platform_setting_relay_state of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._platform_setting_relay_state = platform_setting_relay_state

    @property
    def firewall_setting_engine_option_drop_evasive_retransmit_enabled(self):
        """Gets the firewall_setting_engine_option_drop_evasive_retransmit_enabled of this ComputerSettings.  # noqa: E501

        Drop Evasive Retransmit  # noqa: E501

        :return: The firewall_setting_engine_option_drop_evasive_retransmit_enabled of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_engine_option_drop_evasive_retransmit_enabled

    @firewall_setting_engine_option_drop_evasive_retransmit_enabled.setter
    def firewall_setting_engine_option_drop_evasive_retransmit_enabled(self, firewall_setting_engine_option_drop_evasive_retransmit_enabled):
        """Sets the firewall_setting_engine_option_drop_evasive_retransmit_enabled of this ComputerSettings.

        Drop Evasive Retransmit  # noqa: E501

        :param firewall_setting_engine_option_drop_evasive_retransmit_enabled: The firewall_setting_engine_option_drop_evasive_retransmit_enabled of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_engine_option_drop_evasive_retransmit_enabled = firewall_setting_engine_option_drop_evasive_retransmit_enabled

    @property
    def activity_monitoring_setting_indicator_enabled(self):
        """Gets the activity_monitoring_setting_indicator_enabled of this ComputerSettings.  # noqa: E501

        Sensor Indicator Enabled  # noqa: E501

        :return: The activity_monitoring_setting_indicator_enabled of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._activity_monitoring_setting_indicator_enabled

    @activity_monitoring_setting_indicator_enabled.setter
    def activity_monitoring_setting_indicator_enabled(self, activity_monitoring_setting_indicator_enabled):
        """Sets the activity_monitoring_setting_indicator_enabled of this ComputerSettings.

        Sensor Indicator Enabled  # noqa: E501

        :param activity_monitoring_setting_indicator_enabled: The activity_monitoring_setting_indicator_enabled of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._activity_monitoring_setting_indicator_enabled = activity_monitoring_setting_indicator_enabled

    @property
    def intrusion_prevention_setting_engine_option_fragmented_ip_timeout(self):
        """Gets the intrusion_prevention_setting_engine_option_fragmented_ip_timeout of this ComputerSettings.  # noqa: E501

        Fragment Timeout  # noqa: E501

        :return: The intrusion_prevention_setting_engine_option_fragmented_ip_timeout of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._intrusion_prevention_setting_engine_option_fragmented_ip_timeout

    @intrusion_prevention_setting_engine_option_fragmented_ip_timeout.setter
    def intrusion_prevention_setting_engine_option_fragmented_ip_timeout(self, intrusion_prevention_setting_engine_option_fragmented_ip_timeout):
        """Sets the intrusion_prevention_setting_engine_option_fragmented_ip_timeout of this ComputerSettings.

        Fragment Timeout  # noqa: E501

        :param intrusion_prevention_setting_engine_option_fragmented_ip_timeout: The intrusion_prevention_setting_engine_option_fragmented_ip_timeout of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._intrusion_prevention_setting_engine_option_fragmented_ip_timeout = intrusion_prevention_setting_engine_option_fragmented_ip_timeout

    @property
    def firewall_setting_anti_evasion_check_tcp_zero_flags(self):
        """Gets the firewall_setting_anti_evasion_check_tcp_zero_flags of this ComputerSettings.  # noqa: E501

        TCP Zero Flags  # noqa: E501

        :return: The firewall_setting_anti_evasion_check_tcp_zero_flags of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_anti_evasion_check_tcp_zero_flags

    @firewall_setting_anti_evasion_check_tcp_zero_flags.setter
    def firewall_setting_anti_evasion_check_tcp_zero_flags(self, firewall_setting_anti_evasion_check_tcp_zero_flags):
        """Sets the firewall_setting_anti_evasion_check_tcp_zero_flags of this ComputerSettings.

        TCP Zero Flags  # noqa: E501

        :param firewall_setting_anti_evasion_check_tcp_zero_flags: The firewall_setting_anti_evasion_check_tcp_zero_flags of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_anti_evasion_check_tcp_zero_flags = firewall_setting_anti_evasion_check_tcp_zero_flags

    @property
    def web_reputation_setting_smart_protection_global_server_use_proxy_enabled(self):
        """Gets the web_reputation_setting_smart_protection_global_server_use_proxy_enabled of this ComputerSettings.  # noqa: E501

        Use Proxy when accessing Smart Protection Service for Web Reputation  # noqa: E501

        :return: The web_reputation_setting_smart_protection_global_server_use_proxy_enabled of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._web_reputation_setting_smart_protection_global_server_use_proxy_enabled

    @web_reputation_setting_smart_protection_global_server_use_proxy_enabled.setter
    def web_reputation_setting_smart_protection_global_server_use_proxy_enabled(self, web_reputation_setting_smart_protection_global_server_use_proxy_enabled):
        """Sets the web_reputation_setting_smart_protection_global_server_use_proxy_enabled of this ComputerSettings.

        Use Proxy when accessing Smart Protection Service for Web Reputation  # noqa: E501

        :param web_reputation_setting_smart_protection_global_server_use_proxy_enabled: The web_reputation_setting_smart_protection_global_server_use_proxy_enabled of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._web_reputation_setting_smart_protection_global_server_use_proxy_enabled = web_reputation_setting_smart_protection_global_server_use_proxy_enabled

    @property
    def intrusion_prevention_setting_nsx_security_tagging_prevent_mode_level(self):
        """Gets the intrusion_prevention_setting_nsx_security_tagging_prevent_mode_level of this ComputerSettings.  # noqa: E501

        Prevent Mode  # noqa: E501

        :return: The intrusion_prevention_setting_nsx_security_tagging_prevent_mode_level of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._intrusion_prevention_setting_nsx_security_tagging_prevent_mode_level

    @intrusion_prevention_setting_nsx_security_tagging_prevent_mode_level.setter
    def intrusion_prevention_setting_nsx_security_tagging_prevent_mode_level(self, intrusion_prevention_setting_nsx_security_tagging_prevent_mode_level):
        """Sets the intrusion_prevention_setting_nsx_security_tagging_prevent_mode_level of this ComputerSettings.

        Prevent Mode  # noqa: E501

        :param intrusion_prevention_setting_nsx_security_tagging_prevent_mode_level: The intrusion_prevention_setting_nsx_security_tagging_prevent_mode_level of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._intrusion_prevention_setting_nsx_security_tagging_prevent_mode_level = intrusion_prevention_setting_nsx_security_tagging_prevent_mode_level

    @property
    def firewall_setting_reconnaissance_notify_tcp_xmas_attack_enabled(self):
        """Gets the firewall_setting_reconnaissance_notify_tcp_xmas_attack_enabled of this ComputerSettings.  # noqa: E501

        TCP Xmas Scan - Notify DSM Immediately  # noqa: E501

        :return: The firewall_setting_reconnaissance_notify_tcp_xmas_attack_enabled of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_reconnaissance_notify_tcp_xmas_attack_enabled

    @firewall_setting_reconnaissance_notify_tcp_xmas_attack_enabled.setter
    def firewall_setting_reconnaissance_notify_tcp_xmas_attack_enabled(self, firewall_setting_reconnaissance_notify_tcp_xmas_attack_enabled):
        """Sets the firewall_setting_reconnaissance_notify_tcp_xmas_attack_enabled of this ComputerSettings.

        TCP Xmas Scan - Notify DSM Immediately  # noqa: E501

        :param firewall_setting_reconnaissance_notify_tcp_xmas_attack_enabled: The firewall_setting_reconnaissance_notify_tcp_xmas_attack_enabled of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_reconnaissance_notify_tcp_xmas_attack_enabled = firewall_setting_reconnaissance_notify_tcp_xmas_attack_enabled

    @property
    def firewall_setting_engine_option_udp_timeout(self):
        """Gets the firewall_setting_engine_option_udp_timeout of this ComputerSettings.  # noqa: E501

        UDP Timeout  # noqa: E501

        :return: The firewall_setting_engine_option_udp_timeout of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_engine_option_udp_timeout

    @firewall_setting_engine_option_udp_timeout.setter
    def firewall_setting_engine_option_udp_timeout(self, firewall_setting_engine_option_udp_timeout):
        """Sets the firewall_setting_engine_option_udp_timeout of this ComputerSettings.

        UDP Timeout  # noqa: E501

        :param firewall_setting_engine_option_udp_timeout: The firewall_setting_engine_option_udp_timeout of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_engine_option_udp_timeout = firewall_setting_engine_option_udp_timeout

    @property
    def web_reputation_setting_smart_protection_local_server_enabled(self):
        """Gets the web_reputation_setting_smart_protection_local_server_enabled of this ComputerSettings.  # noqa: E501

        Use Local Smart Protection Server for Web Reputation Service  # noqa: E501

        :return: The web_reputation_setting_smart_protection_local_server_enabled of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._web_reputation_setting_smart_protection_local_server_enabled

    @web_reputation_setting_smart_protection_local_server_enabled.setter
    def web_reputation_setting_smart_protection_local_server_enabled(self, web_reputation_setting_smart_protection_local_server_enabled):
        """Sets the web_reputation_setting_smart_protection_local_server_enabled of this ComputerSettings.

        Use Local Smart Protection Server for Web Reputation Service  # noqa: E501

        :param web_reputation_setting_smart_protection_local_server_enabled: The web_reputation_setting_smart_protection_local_server_enabled of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._web_reputation_setting_smart_protection_local_server_enabled = web_reputation_setting_smart_protection_local_server_enabled

    @property
    def firewall_setting_engine_option_tcp_mss_limit(self):
        """Gets the firewall_setting_engine_option_tcp_mss_limit of this ComputerSettings.  # noqa: E501

        TCP MSS Limit  # noqa: E501

        :return: The firewall_setting_engine_option_tcp_mss_limit of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_engine_option_tcp_mss_limit

    @firewall_setting_engine_option_tcp_mss_limit.setter
    def firewall_setting_engine_option_tcp_mss_limit(self, firewall_setting_engine_option_tcp_mss_limit):
        """Sets the firewall_setting_engine_option_tcp_mss_limit of this ComputerSettings.

        TCP MSS Limit  # noqa: E501

        :param firewall_setting_engine_option_tcp_mss_limit: The firewall_setting_engine_option_tcp_mss_limit of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_engine_option_tcp_mss_limit = firewall_setting_engine_option_tcp_mss_limit

    @property
    def firewall_setting_engine_option_cold_start_timeout(self):
        """Gets the firewall_setting_engine_option_cold_start_timeout of this ComputerSettings.  # noqa: E501

        Cold Start Timeout  # noqa: E501

        :return: The firewall_setting_engine_option_cold_start_timeout of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_engine_option_cold_start_timeout

    @firewall_setting_engine_option_cold_start_timeout.setter
    def firewall_setting_engine_option_cold_start_timeout(self, firewall_setting_engine_option_cold_start_timeout):
        """Sets the firewall_setting_engine_option_cold_start_timeout of this ComputerSettings.

        Cold Start Timeout  # noqa: E501

        :param firewall_setting_engine_option_cold_start_timeout: The firewall_setting_engine_option_cold_start_timeout of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_engine_option_cold_start_timeout = firewall_setting_engine_option_cold_start_timeout

    @property
    def firewall_setting_engine_option_established_timeout(self):
        """Gets the firewall_setting_engine_option_established_timeout of this ComputerSettings.  # noqa: E501

        ESTABLISHED Timeout  # noqa: E501

        :return: The firewall_setting_engine_option_established_timeout of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_engine_option_established_timeout

    @firewall_setting_engine_option_established_timeout.setter
    def firewall_setting_engine_option_established_timeout(self, firewall_setting_engine_option_established_timeout):
        """Sets the firewall_setting_engine_option_established_timeout of this ComputerSettings.

        ESTABLISHED Timeout  # noqa: E501

        :param firewall_setting_engine_option_established_timeout: The firewall_setting_engine_option_established_timeout of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_engine_option_established_timeout = firewall_setting_engine_option_established_timeout

    @property
    def anti_malware_setting_identified_files_space_max_mbytes(self):
        """Gets the anti_malware_setting_identified_files_space_max_mbytes of this ComputerSettings.  # noqa: E501

        Maximum disk space used to store identified files  # noqa: E501

        :return: The anti_malware_setting_identified_files_space_max_mbytes of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._anti_malware_setting_identified_files_space_max_mbytes

    @anti_malware_setting_identified_files_space_max_mbytes.setter
    def anti_malware_setting_identified_files_space_max_mbytes(self, anti_malware_setting_identified_files_space_max_mbytes):
        """Sets the anti_malware_setting_identified_files_space_max_mbytes of this ComputerSettings.

        Maximum disk space used to store identified files  # noqa: E501

        :param anti_malware_setting_identified_files_space_max_mbytes: The anti_malware_setting_identified_files_space_max_mbytes of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._anti_malware_setting_identified_files_space_max_mbytes = anti_malware_setting_identified_files_space_max_mbytes

    @property
    def firewall_setting_engine_option_allow_null_ip_enabled(self):
        """Gets the firewall_setting_engine_option_allow_null_ip_enabled of this ComputerSettings.  # noqa: E501

        Allow Null IP  # noqa: E501

        :return: The firewall_setting_engine_option_allow_null_ip_enabled of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_engine_option_allow_null_ip_enabled

    @firewall_setting_engine_option_allow_null_ip_enabled.setter
    def firewall_setting_engine_option_allow_null_ip_enabled(self, firewall_setting_engine_option_allow_null_ip_enabled):
        """Sets the firewall_setting_engine_option_allow_null_ip_enabled of this ComputerSettings.

        Allow Null IP  # noqa: E501

        :param firewall_setting_engine_option_allow_null_ip_enabled: The firewall_setting_engine_option_allow_null_ip_enabled of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_engine_option_allow_null_ip_enabled = firewall_setting_engine_option_allow_null_ip_enabled

    @property
    def platform_setting_notifications_suppress_popups_enabled(self):
        """Gets the platform_setting_notifications_suppress_popups_enabled of this ComputerSettings.  # noqa: E501

        Suppress all pop-up notifications on host  # noqa: E501

        :return: The platform_setting_notifications_suppress_popups_enabled of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._platform_setting_notifications_suppress_popups_enabled

    @platform_setting_notifications_suppress_popups_enabled.setter
    def platform_setting_notifications_suppress_popups_enabled(self, platform_setting_notifications_suppress_popups_enabled):
        """Sets the platform_setting_notifications_suppress_popups_enabled of this ComputerSettings.

        Suppress all pop-up notifications on host  # noqa: E501

        :param platform_setting_notifications_suppress_popups_enabled: The platform_setting_notifications_suppress_popups_enabled of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._platform_setting_notifications_suppress_popups_enabled = platform_setting_notifications_suppress_popups_enabled

    @property
    def firewall_setting_anti_evasion_check_tcp_rst_fin_flags(self):
        """Gets the firewall_setting_anti_evasion_check_tcp_rst_fin_flags of this ComputerSettings.  # noqa: E501

        TCP Rst Fin Flags  # noqa: E501

        :return: The firewall_setting_anti_evasion_check_tcp_rst_fin_flags of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_anti_evasion_check_tcp_rst_fin_flags

    @firewall_setting_anti_evasion_check_tcp_rst_fin_flags.setter
    def firewall_setting_anti_evasion_check_tcp_rst_fin_flags(self, firewall_setting_anti_evasion_check_tcp_rst_fin_flags):
        """Sets the firewall_setting_anti_evasion_check_tcp_rst_fin_flags of this ComputerSettings.

        TCP Rst Fin Flags  # noqa: E501

        :param firewall_setting_anti_evasion_check_tcp_rst_fin_flags: The firewall_setting_anti_evasion_check_tcp_rst_fin_flags of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_anti_evasion_check_tcp_rst_fin_flags = firewall_setting_anti_evasion_check_tcp_rst_fin_flags

    @property
    def firewall_setting_engine_option_disconnect_timeout(self):
        """Gets the firewall_setting_engine_option_disconnect_timeout of this ComputerSettings.  # noqa: E501

        DISCONNECT Timeout  # noqa: E501

        :return: The firewall_setting_engine_option_disconnect_timeout of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_engine_option_disconnect_timeout

    @firewall_setting_engine_option_disconnect_timeout.setter
    def firewall_setting_engine_option_disconnect_timeout(self, firewall_setting_engine_option_disconnect_timeout):
        """Sets the firewall_setting_engine_option_disconnect_timeout of this ComputerSettings.

        DISCONNECT Timeout  # noqa: E501

        :param firewall_setting_engine_option_disconnect_timeout: The firewall_setting_engine_option_disconnect_timeout of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_engine_option_disconnect_timeout = firewall_setting_engine_option_disconnect_timeout

    @property
    def firewall_setting_engine_option_close_timeout(self):
        """Gets the firewall_setting_engine_option_close_timeout of this ComputerSettings.  # noqa: E501

        CLOSED Timeout  # noqa: E501

        :return: The firewall_setting_engine_option_close_timeout of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_engine_option_close_timeout

    @firewall_setting_engine_option_close_timeout.setter
    def firewall_setting_engine_option_close_timeout(self, firewall_setting_engine_option_close_timeout):
        """Sets the firewall_setting_engine_option_close_timeout of this ComputerSettings.

        CLOSED Timeout  # noqa: E501

        :param firewall_setting_engine_option_close_timeout: The firewall_setting_engine_option_close_timeout of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_engine_option_close_timeout = firewall_setting_engine_option_close_timeout

    @property
    def firewall_setting_engine_option_tunnel_depth_max_exceeded_action(self):
        """Gets the firewall_setting_engine_option_tunnel_depth_max_exceeded_action of this ComputerSettings.  # noqa: E501

        Action if Maximum Tunnel Depth Exceeded  # noqa: E501

        :return: The firewall_setting_engine_option_tunnel_depth_max_exceeded_action of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_engine_option_tunnel_depth_max_exceeded_action

    @firewall_setting_engine_option_tunnel_depth_max_exceeded_action.setter
    def firewall_setting_engine_option_tunnel_depth_max_exceeded_action(self, firewall_setting_engine_option_tunnel_depth_max_exceeded_action):
        """Sets the firewall_setting_engine_option_tunnel_depth_max_exceeded_action of this ComputerSettings.

        Action if Maximum Tunnel Depth Exceeded  # noqa: E501

        :param firewall_setting_engine_option_tunnel_depth_max_exceeded_action: The firewall_setting_engine_option_tunnel_depth_max_exceeded_action of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_engine_option_tunnel_depth_max_exceeded_action = firewall_setting_engine_option_tunnel_depth_max_exceeded_action

    @property
    def firewall_setting_reconnaissance_detect_tcp_null_scan_enabled(self):
        """Gets the firewall_setting_reconnaissance_detect_tcp_null_scan_enabled of this ComputerSettings.  # noqa: E501

        TCP Null Scan - Enabled  # noqa: E501

        :return: The firewall_setting_reconnaissance_detect_tcp_null_scan_enabled of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_reconnaissance_detect_tcp_null_scan_enabled

    @firewall_setting_reconnaissance_detect_tcp_null_scan_enabled.setter
    def firewall_setting_reconnaissance_detect_tcp_null_scan_enabled(self, firewall_setting_reconnaissance_detect_tcp_null_scan_enabled):
        """Sets the firewall_setting_reconnaissance_detect_tcp_null_scan_enabled of this ComputerSettings.

        TCP Null Scan - Enabled  # noqa: E501

        :param firewall_setting_reconnaissance_detect_tcp_null_scan_enabled: The firewall_setting_reconnaissance_detect_tcp_null_scan_enabled of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_reconnaissance_detect_tcp_null_scan_enabled = firewall_setting_reconnaissance_detect_tcp_null_scan_enabled

    @property
    def platform_setting_smart_protection_anti_malware_global_server_proxy_id(self):
        """Gets the platform_setting_smart_protection_anti_malware_global_server_proxy_id of this ComputerSettings.  # noqa: E501

        Use Proxy when accessing Smart Protection Service for Smart Scan  # noqa: E501

        :return: The platform_setting_smart_protection_anti_malware_global_server_proxy_id of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._platform_setting_smart_protection_anti_malware_global_server_proxy_id

    @platform_setting_smart_protection_anti_malware_global_server_proxy_id.setter
    def platform_setting_smart_protection_anti_malware_global_server_proxy_id(self, platform_setting_smart_protection_anti_malware_global_server_proxy_id):
        """Sets the platform_setting_smart_protection_anti_malware_global_server_proxy_id of this ComputerSettings.

        Use Proxy when accessing Smart Protection Service for Smart Scan  # noqa: E501

        :param platform_setting_smart_protection_anti_malware_global_server_proxy_id: The platform_setting_smart_protection_anti_malware_global_server_proxy_id of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._platform_setting_smart_protection_anti_malware_global_server_proxy_id = platform_setting_smart_protection_anti_malware_global_server_proxy_id

    @property
    def firewall_setting_engine_option_filter_ipv4_tunnels(self):
        """Gets the firewall_setting_engine_option_filter_ipv4_tunnels of this ComputerSettings.  # noqa: E501

        Filter IPv4 Tunnels  # noqa: E501

        :return: The firewall_setting_engine_option_filter_ipv4_tunnels of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_engine_option_filter_ipv4_tunnels

    @firewall_setting_engine_option_filter_ipv4_tunnels.setter
    def firewall_setting_engine_option_filter_ipv4_tunnels(self, firewall_setting_engine_option_filter_ipv4_tunnels):
        """Sets the firewall_setting_engine_option_filter_ipv4_tunnels of this ComputerSettings.

        Filter IPv4 Tunnels  # noqa: E501

        :param firewall_setting_engine_option_filter_ipv4_tunnels: The firewall_setting_engine_option_filter_ipv4_tunnels of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_engine_option_filter_ipv4_tunnels = firewall_setting_engine_option_filter_ipv4_tunnels

    @property
    def web_reputation_setting_smart_protection_local_server_urls(self):
        """Gets the web_reputation_setting_smart_protection_local_server_urls of this ComputerSettings.  # noqa: E501

        Local Smart Protection Servers for Web Reputation  # noqa: E501

        :return: The web_reputation_setting_smart_protection_local_server_urls of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._web_reputation_setting_smart_protection_local_server_urls

    @web_reputation_setting_smart_protection_local_server_urls.setter
    def web_reputation_setting_smart_protection_local_server_urls(self, web_reputation_setting_smart_protection_local_server_urls):
        """Sets the web_reputation_setting_smart_protection_local_server_urls of this ComputerSettings.

        Local Smart Protection Servers for Web Reputation  # noqa: E501

        :param web_reputation_setting_smart_protection_local_server_urls: The web_reputation_setting_smart_protection_local_server_urls of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._web_reputation_setting_smart_protection_local_server_urls = web_reputation_setting_smart_protection_local_server_urls

    @property
    def firewall_setting_engine_option_log_one_packet_period(self):
        """Gets the firewall_setting_engine_option_log_one_packet_period of this ComputerSettings.  # noqa: E501

        Period for Log only one packet within period  # noqa: E501

        :return: The firewall_setting_engine_option_log_one_packet_period of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_engine_option_log_one_packet_period

    @firewall_setting_engine_option_log_one_packet_period.setter
    def firewall_setting_engine_option_log_one_packet_period(self, firewall_setting_engine_option_log_one_packet_period):
        """Sets the firewall_setting_engine_option_log_one_packet_period of this ComputerSettings.

        Period for Log only one packet within period  # noqa: E501

        :param firewall_setting_engine_option_log_one_packet_period: The firewall_setting_engine_option_log_one_packet_period of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_engine_option_log_one_packet_period = firewall_setting_engine_option_log_one_packet_period

    @property
    def firewall_setting_engine_option_filter_ipv6_tunnels(self):
        """Gets the firewall_setting_engine_option_filter_ipv6_tunnels of this ComputerSettings.  # noqa: E501

        Filter IPv6 Tunnels  # noqa: E501

        :return: The firewall_setting_engine_option_filter_ipv6_tunnels of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_engine_option_filter_ipv6_tunnels

    @firewall_setting_engine_option_filter_ipv6_tunnels.setter
    def firewall_setting_engine_option_filter_ipv6_tunnels(self, firewall_setting_engine_option_filter_ipv6_tunnels):
        """Sets the firewall_setting_engine_option_filter_ipv6_tunnels of this ComputerSettings.

        Filter IPv6 Tunnels  # noqa: E501

        :param firewall_setting_engine_option_filter_ipv6_tunnels: The firewall_setting_engine_option_filter_ipv6_tunnels of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_engine_option_filter_ipv6_tunnels = firewall_setting_engine_option_filter_ipv6_tunnels

    @property
    def firewall_setting_anti_evasion_check_tcp_congestion_flags(self):
        """Gets the firewall_setting_anti_evasion_check_tcp_congestion_flags of this ComputerSettings.  # noqa: E501

        TCP Congestion Flags  # noqa: E501

        :return: The firewall_setting_anti_evasion_check_tcp_congestion_flags of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_anti_evasion_check_tcp_congestion_flags

    @firewall_setting_anti_evasion_check_tcp_congestion_flags.setter
    def firewall_setting_anti_evasion_check_tcp_congestion_flags(self, firewall_setting_anti_evasion_check_tcp_congestion_flags):
        """Sets the firewall_setting_anti_evasion_check_tcp_congestion_flags of this ComputerSettings.

        TCP Congestion Flags  # noqa: E501

        :param firewall_setting_anti_evasion_check_tcp_congestion_flags: The firewall_setting_anti_evasion_check_tcp_congestion_flags of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_anti_evasion_check_tcp_congestion_flags = firewall_setting_anti_evasion_check_tcp_congestion_flags

    @property
    def platform_setting_heartbeat_missed_alert_threshold(self):
        """Gets the platform_setting_heartbeat_missed_alert_threshold of this ComputerSettings.  # noqa: E501

        Number of Heartbeats that can be missed before an alert is raised  # noqa: E501

        :return: The platform_setting_heartbeat_missed_alert_threshold of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._platform_setting_heartbeat_missed_alert_threshold

    @platform_setting_heartbeat_missed_alert_threshold.setter
    def platform_setting_heartbeat_missed_alert_threshold(self, platform_setting_heartbeat_missed_alert_threshold):
        """Sets the platform_setting_heartbeat_missed_alert_threshold of this ComputerSettings.

        Number of Heartbeats that can be missed before an alert is raised  # noqa: E501

        :param platform_setting_heartbeat_missed_alert_threshold: The platform_setting_heartbeat_missed_alert_threshold of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._platform_setting_heartbeat_missed_alert_threshold = platform_setting_heartbeat_missed_alert_threshold

    @property
    def intrusion_prevention_setting_engine_options_enabled(self):
        """Gets the intrusion_prevention_setting_engine_options_enabled of this ComputerSettings.  # noqa: E501

        Use custom driver settings  # noqa: E501

        :return: The intrusion_prevention_setting_engine_options_enabled of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._intrusion_prevention_setting_engine_options_enabled

    @intrusion_prevention_setting_engine_options_enabled.setter
    def intrusion_prevention_setting_engine_options_enabled(self, intrusion_prevention_setting_engine_options_enabled):
        """Sets the intrusion_prevention_setting_engine_options_enabled of this ComputerSettings.

        Use custom driver settings  # noqa: E501

        :param intrusion_prevention_setting_engine_options_enabled: The intrusion_prevention_setting_engine_options_enabled of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._intrusion_prevention_setting_engine_options_enabled = intrusion_prevention_setting_engine_options_enabled

    @property
    def firewall_setting_engine_option_connections_num_udp_max(self):
        """Gets the firewall_setting_engine_option_connections_num_udp_max of this ComputerSettings.  # noqa: E501

        Maximum UDP Connections  # noqa: E501

        :return: The firewall_setting_engine_option_connections_num_udp_max of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_engine_option_connections_num_udp_max

    @firewall_setting_engine_option_connections_num_udp_max.setter
    def firewall_setting_engine_option_connections_num_udp_max(self, firewall_setting_engine_option_connections_num_udp_max):
        """Sets the firewall_setting_engine_option_connections_num_udp_max of this ComputerSettings.

        Maximum UDP Connections  # noqa: E501

        :param firewall_setting_engine_option_connections_num_udp_max: The firewall_setting_engine_option_connections_num_udp_max of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_engine_option_connections_num_udp_max = firewall_setting_engine_option_connections_num_udp_max

    @property
    def integrity_monitoring_setting_auto_apply_recommendations_enabled(self):
        """Gets the integrity_monitoring_setting_auto_apply_recommendations_enabled of this ComputerSettings.  # noqa: E501

        Automatically assign/unassign recommended Integrity Monitoring Rules to Computer during Recommendation Scans  # noqa: E501

        :return: The integrity_monitoring_setting_auto_apply_recommendations_enabled of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._integrity_monitoring_setting_auto_apply_recommendations_enabled

    @integrity_monitoring_setting_auto_apply_recommendations_enabled.setter
    def integrity_monitoring_setting_auto_apply_recommendations_enabled(self, integrity_monitoring_setting_auto_apply_recommendations_enabled):
        """Sets the integrity_monitoring_setting_auto_apply_recommendations_enabled of this ComputerSettings.

        Automatically assign/unassign recommended Integrity Monitoring Rules to Computer during Recommendation Scans  # noqa: E501

        :param integrity_monitoring_setting_auto_apply_recommendations_enabled: The integrity_monitoring_setting_auto_apply_recommendations_enabled of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._integrity_monitoring_setting_auto_apply_recommendations_enabled = integrity_monitoring_setting_auto_apply_recommendations_enabled

    @property
    def firewall_setting_engine_option_tunnel_depth_max(self):
        """Gets the firewall_setting_engine_option_tunnel_depth_max of this ComputerSettings.  # noqa: E501

        Maximum Tunnel Depth  # noqa: E501

        :return: The firewall_setting_engine_option_tunnel_depth_max of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_engine_option_tunnel_depth_max

    @firewall_setting_engine_option_tunnel_depth_max.setter
    def firewall_setting_engine_option_tunnel_depth_max(self, firewall_setting_engine_option_tunnel_depth_max):
        """Sets the firewall_setting_engine_option_tunnel_depth_max of this ComputerSettings.

        Maximum Tunnel Depth  # noqa: E501

        :param firewall_setting_engine_option_tunnel_depth_max: The firewall_setting_engine_option_tunnel_depth_max of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_engine_option_tunnel_depth_max = firewall_setting_engine_option_tunnel_depth_max

    @property
    def firewall_setting_engine_option_drop_unknown_ssl_protocol_enabled(self):
        """Gets the firewall_setting_engine_option_drop_unknown_ssl_protocol_enabled of this ComputerSettings.  # noqa: E501

        Drop Unknown SSL Protocol  # noqa: E501

        :return: The firewall_setting_engine_option_drop_unknown_ssl_protocol_enabled of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_engine_option_drop_unknown_ssl_protocol_enabled

    @firewall_setting_engine_option_drop_unknown_ssl_protocol_enabled.setter
    def firewall_setting_engine_option_drop_unknown_ssl_protocol_enabled(self, firewall_setting_engine_option_drop_unknown_ssl_protocol_enabled):
        """Sets the firewall_setting_engine_option_drop_unknown_ssl_protocol_enabled of this ComputerSettings.

        Drop Unknown SSL Protocol  # noqa: E501

        :param firewall_setting_engine_option_drop_unknown_ssl_protocol_enabled: The firewall_setting_engine_option_drop_unknown_ssl_protocol_enabled of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_engine_option_drop_unknown_ssl_protocol_enabled = firewall_setting_engine_option_drop_unknown_ssl_protocol_enabled

    @property
    def anti_malware_setting_nsx_security_tagging_value(self):
        """Gets the anti_malware_setting_nsx_security_tagging_value of this ComputerSettings.  # noqa: E501

        Anti-Malware NSX Security Tag  # noqa: E501

        :return: The anti_malware_setting_nsx_security_tagging_value of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._anti_malware_setting_nsx_security_tagging_value

    @anti_malware_setting_nsx_security_tagging_value.setter
    def anti_malware_setting_nsx_security_tagging_value(self, anti_malware_setting_nsx_security_tagging_value):
        """Sets the anti_malware_setting_nsx_security_tagging_value of this ComputerSettings.

        Anti-Malware NSX Security Tag  # noqa: E501

        :param anti_malware_setting_nsx_security_tagging_value: The anti_malware_setting_nsx_security_tagging_value of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._anti_malware_setting_nsx_security_tagging_value = anti_malware_setting_nsx_security_tagging_value

    @property
    def intrusion_prevention_setting_log_data_rule_first_match_enabled(self):
        """Gets the intrusion_prevention_setting_log_data_rule_first_match_enabled of this ComputerSettings.  # noqa: E501

        Allow Intrusion Prevention Rules to capture data for first hit of each rule (in period)  # noqa: E501

        :return: The intrusion_prevention_setting_log_data_rule_first_match_enabled of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._intrusion_prevention_setting_log_data_rule_first_match_enabled

    @intrusion_prevention_setting_log_data_rule_first_match_enabled.setter
    def intrusion_prevention_setting_log_data_rule_first_match_enabled(self, intrusion_prevention_setting_log_data_rule_first_match_enabled):
        """Sets the intrusion_prevention_setting_log_data_rule_first_match_enabled of this ComputerSettings.

        Allow Intrusion Prevention Rules to capture data for first hit of each rule (in period)  # noqa: E501

        :param intrusion_prevention_setting_log_data_rule_first_match_enabled: The intrusion_prevention_setting_log_data_rule_first_match_enabled of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._intrusion_prevention_setting_log_data_rule_first_match_enabled = intrusion_prevention_setting_log_data_rule_first_match_enabled

    @property
    def firewall_setting_engine_option_logging_policy(self):
        """Gets the firewall_setting_engine_option_logging_policy of this ComputerSettings.  # noqa: E501

        Advanced Logging Policy  # noqa: E501

        :return: The firewall_setting_engine_option_logging_policy of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_engine_option_logging_policy

    @firewall_setting_engine_option_logging_policy.setter
    def firewall_setting_engine_option_logging_policy(self, firewall_setting_engine_option_logging_policy):
        """Sets the firewall_setting_engine_option_logging_policy of this ComputerSettings.

        Advanced Logging Policy  # noqa: E501

        :param firewall_setting_engine_option_logging_policy: The firewall_setting_engine_option_logging_policy of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_engine_option_logging_policy = firewall_setting_engine_option_logging_policy

    @property
    def platform_setting_troubleshooting_logging_level(self):
        """Gets the platform_setting_troubleshooting_logging_level of this ComputerSettings.  # noqa: E501

        Logging Level  # noqa: E501

        :return: The platform_setting_troubleshooting_logging_level of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._platform_setting_troubleshooting_logging_level

    @platform_setting_troubleshooting_logging_level.setter
    def platform_setting_troubleshooting_logging_level(self, platform_setting_troubleshooting_logging_level):
        """Sets the platform_setting_troubleshooting_logging_level of this ComputerSettings.

        Logging Level  # noqa: E501

        :param platform_setting_troubleshooting_logging_level: The platform_setting_troubleshooting_logging_level of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._platform_setting_troubleshooting_logging_level = platform_setting_troubleshooting_logging_level

    @property
    def anti_malware_setting_virtual_appliance_on_demand_scan_cache_entries_max(self):
        """Gets the anti_malware_setting_virtual_appliance_on_demand_scan_cache_entries_max of this ComputerSettings.  # noqa: E501

        Max On-Demand Malware Scan Cache Entries  # noqa: E501

        :return: The anti_malware_setting_virtual_appliance_on_demand_scan_cache_entries_max of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._anti_malware_setting_virtual_appliance_on_demand_scan_cache_entries_max

    @anti_malware_setting_virtual_appliance_on_demand_scan_cache_entries_max.setter
    def anti_malware_setting_virtual_appliance_on_demand_scan_cache_entries_max(self, anti_malware_setting_virtual_appliance_on_demand_scan_cache_entries_max):
        """Sets the anti_malware_setting_virtual_appliance_on_demand_scan_cache_entries_max of this ComputerSettings.

        Max On-Demand Malware Scan Cache Entries  # noqa: E501

        :param anti_malware_setting_virtual_appliance_on_demand_scan_cache_entries_max: The anti_malware_setting_virtual_appliance_on_demand_scan_cache_entries_max of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._anti_malware_setting_virtual_appliance_on_demand_scan_cache_entries_max = anti_malware_setting_virtual_appliance_on_demand_scan_cache_entries_max

    @property
    def web_reputation_setting_combined_mode_protection_source(self):
        """Gets the web_reputation_setting_combined_mode_protection_source of this ComputerSettings.  # noqa: E501

        Web Reputation  # noqa: E501

        :return: The web_reputation_setting_combined_mode_protection_source of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._web_reputation_setting_combined_mode_protection_source

    @web_reputation_setting_combined_mode_protection_source.setter
    def web_reputation_setting_combined_mode_protection_source(self, web_reputation_setting_combined_mode_protection_source):
        """Sets the web_reputation_setting_combined_mode_protection_source of this ComputerSettings.

        Web Reputation  # noqa: E501

        :param web_reputation_setting_combined_mode_protection_source: The web_reputation_setting_combined_mode_protection_source of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._web_reputation_setting_combined_mode_protection_source = web_reputation_setting_combined_mode_protection_source

    @property
    def firewall_setting_engine_option_closing_timeout(self):
        """Gets the firewall_setting_engine_option_closing_timeout of this ComputerSettings.  # noqa: E501

        CLOSING Timeout  # noqa: E501

        :return: The firewall_setting_engine_option_closing_timeout of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_engine_option_closing_timeout

    @firewall_setting_engine_option_closing_timeout.setter
    def firewall_setting_engine_option_closing_timeout(self, firewall_setting_engine_option_closing_timeout):
        """Sets the firewall_setting_engine_option_closing_timeout of this ComputerSettings.

        CLOSING Timeout  # noqa: E501

        :param firewall_setting_engine_option_closing_timeout: The firewall_setting_engine_option_closing_timeout of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_engine_option_closing_timeout = firewall_setting_engine_option_closing_timeout

    @property
    def firewall_setting_anti_evasion_check_paws(self):
        """Gets the firewall_setting_anti_evasion_check_paws of this ComputerSettings.  # noqa: E501

        Invalid TCP Timestamps  # noqa: E501

        :return: The firewall_setting_anti_evasion_check_paws of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_anti_evasion_check_paws

    @firewall_setting_anti_evasion_check_paws.setter
    def firewall_setting_anti_evasion_check_paws(self, firewall_setting_anti_evasion_check_paws):
        """Sets the firewall_setting_anti_evasion_check_paws of this ComputerSettings.

        Invalid TCP Timestamps  # noqa: E501

        :param firewall_setting_anti_evasion_check_paws: The firewall_setting_anti_evasion_check_paws of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_anti_evasion_check_paws = firewall_setting_anti_evasion_check_paws

    @property
    def intrusion_prevention_setting_auto_apply_recommendations_enabled(self):
        """Gets the intrusion_prevention_setting_auto_apply_recommendations_enabled of this ComputerSettings.  # noqa: E501

        Automatically implement Recommendations  # noqa: E501

        :return: The intrusion_prevention_setting_auto_apply_recommendations_enabled of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._intrusion_prevention_setting_auto_apply_recommendations_enabled

    @intrusion_prevention_setting_auto_apply_recommendations_enabled.setter
    def intrusion_prevention_setting_auto_apply_recommendations_enabled(self, intrusion_prevention_setting_auto_apply_recommendations_enabled):
        """Sets the intrusion_prevention_setting_auto_apply_recommendations_enabled of this ComputerSettings.

        Automatically implement Recommendations  # noqa: E501

        :param intrusion_prevention_setting_auto_apply_recommendations_enabled: The intrusion_prevention_setting_auto_apply_recommendations_enabled of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._intrusion_prevention_setting_auto_apply_recommendations_enabled = intrusion_prevention_setting_auto_apply_recommendations_enabled

    @property
    def firewall_setting_reconnaissance_detect_fingerprint_probe_enabled(self):
        """Gets the firewall_setting_reconnaissance_detect_fingerprint_probe_enabled of this ComputerSettings.  # noqa: E501

        Computer OS Fingerprint Probe - Enabled  # noqa: E501

        :return: The firewall_setting_reconnaissance_detect_fingerprint_probe_enabled of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_reconnaissance_detect_fingerprint_probe_enabled

    @firewall_setting_reconnaissance_detect_fingerprint_probe_enabled.setter
    def firewall_setting_reconnaissance_detect_fingerprint_probe_enabled(self, firewall_setting_reconnaissance_detect_fingerprint_probe_enabled):
        """Sets the firewall_setting_reconnaissance_detect_fingerprint_probe_enabled of this ComputerSettings.

        Computer OS Fingerprint Probe - Enabled  # noqa: E501

        :param firewall_setting_reconnaissance_detect_fingerprint_probe_enabled: The firewall_setting_reconnaissance_detect_fingerprint_probe_enabled of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_reconnaissance_detect_fingerprint_probe_enabled = firewall_setting_reconnaissance_detect_fingerprint_probe_enabled

    @property
    def anti_malware_setting_nsx_security_tagging_remove_on_clean_scan_enabled(self):
        """Gets the anti_malware_setting_nsx_security_tagging_remove_on_clean_scan_enabled of this ComputerSettings.  # noqa: E501

        Anti-Malware NSX Remove Tag  # noqa: E501

        :return: The anti_malware_setting_nsx_security_tagging_remove_on_clean_scan_enabled of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._anti_malware_setting_nsx_security_tagging_remove_on_clean_scan_enabled

    @anti_malware_setting_nsx_security_tagging_remove_on_clean_scan_enabled.setter
    def anti_malware_setting_nsx_security_tagging_remove_on_clean_scan_enabled(self, anti_malware_setting_nsx_security_tagging_remove_on_clean_scan_enabled):
        """Sets the anti_malware_setting_nsx_security_tagging_remove_on_clean_scan_enabled of this ComputerSettings.

        Anti-Malware NSX Remove Tag  # noqa: E501

        :param anti_malware_setting_nsx_security_tagging_remove_on_clean_scan_enabled: The anti_malware_setting_nsx_security_tagging_remove_on_clean_scan_enabled of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._anti_malware_setting_nsx_security_tagging_remove_on_clean_scan_enabled = anti_malware_setting_nsx_security_tagging_remove_on_clean_scan_enabled

    @property
    def firewall_setting_engine_option_log_packet_length_max(self):
        """Gets the firewall_setting_engine_option_log_packet_length_max of this ComputerSettings.  # noqa: E501

        Maximum data size to store when packet data is captured  # noqa: E501

        :return: The firewall_setting_engine_option_log_packet_length_max of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_engine_option_log_packet_length_max

    @firewall_setting_engine_option_log_packet_length_max.setter
    def firewall_setting_engine_option_log_packet_length_max(self, firewall_setting_engine_option_log_packet_length_max):
        """Sets the firewall_setting_engine_option_log_packet_length_max of this ComputerSettings.

        Maximum data size to store when packet data is captured  # noqa: E501

        :param firewall_setting_engine_option_log_packet_length_max: The firewall_setting_engine_option_log_packet_length_max of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_engine_option_log_packet_length_max = firewall_setting_engine_option_log_packet_length_max

    @property
    def firewall_setting_engine_option_drop_teredo_anomalies_enabled(self):
        """Gets the firewall_setting_engine_option_drop_teredo_anomalies_enabled of this ComputerSettings.  # noqa: E501

        Drop Teredo Anomalies  # noqa: E501

        :return: The firewall_setting_engine_option_drop_teredo_anomalies_enabled of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_engine_option_drop_teredo_anomalies_enabled

    @firewall_setting_engine_option_drop_teredo_anomalies_enabled.setter
    def firewall_setting_engine_option_drop_teredo_anomalies_enabled(self, firewall_setting_engine_option_drop_teredo_anomalies_enabled):
        """Sets the firewall_setting_engine_option_drop_teredo_anomalies_enabled of this ComputerSettings.

        Drop Teredo Anomalies  # noqa: E501

        :param firewall_setting_engine_option_drop_teredo_anomalies_enabled: The firewall_setting_engine_option_drop_teredo_anomalies_enabled of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_engine_option_drop_teredo_anomalies_enabled = firewall_setting_engine_option_drop_teredo_anomalies_enabled

    @property
    def web_reputation_setting_security_level(self):
        """Gets the web_reputation_setting_security_level of this ComputerSettings.  # noqa: E501

        Security Level  # noqa: E501

        :return: The web_reputation_setting_security_level of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._web_reputation_setting_security_level

    @web_reputation_setting_security_level.setter
    def web_reputation_setting_security_level(self, web_reputation_setting_security_level):
        """Sets the web_reputation_setting_security_level of this ComputerSettings.

        Security Level  # noqa: E501

        :param web_reputation_setting_security_level: The web_reputation_setting_security_level of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._web_reputation_setting_security_level = web_reputation_setting_security_level

    @property
    def firewall_setting_engine_option_drop_ipv6_site_local_addresses_enabled(self):
        """Gets the firewall_setting_engine_option_drop_ipv6_site_local_addresses_enabled of this ComputerSettings.  # noqa: E501

        Drop IPv6 Site Local Addresses  # noqa: E501

        :return: The firewall_setting_engine_option_drop_ipv6_site_local_addresses_enabled of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_engine_option_drop_ipv6_site_local_addresses_enabled

    @firewall_setting_engine_option_drop_ipv6_site_local_addresses_enabled.setter
    def firewall_setting_engine_option_drop_ipv6_site_local_addresses_enabled(self, firewall_setting_engine_option_drop_ipv6_site_local_addresses_enabled):
        """Sets the firewall_setting_engine_option_drop_ipv6_site_local_addresses_enabled of this ComputerSettings.

        Drop IPv6 Site Local Addresses  # noqa: E501

        :param firewall_setting_engine_option_drop_ipv6_site_local_addresses_enabled: The firewall_setting_engine_option_drop_ipv6_site_local_addresses_enabled of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_engine_option_drop_ipv6_site_local_addresses_enabled = firewall_setting_engine_option_drop_ipv6_site_local_addresses_enabled

    @property
    def activity_monitoring_setting_activity_enabled(self):
        """Gets the activity_monitoring_setting_activity_enabled of this ComputerSettings.  # noqa: E501

        Sensor Activity Enabled  # noqa: E501

        :return: The activity_monitoring_setting_activity_enabled of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._activity_monitoring_setting_activity_enabled

    @activity_monitoring_setting_activity_enabled.setter
    def activity_monitoring_setting_activity_enabled(self, activity_monitoring_setting_activity_enabled):
        """Sets the activity_monitoring_setting_activity_enabled of this ComputerSettings.

        Sensor Activity Enabled  # noqa: E501

        :param activity_monitoring_setting_activity_enabled: The activity_monitoring_setting_activity_enabled of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._activity_monitoring_setting_activity_enabled = activity_monitoring_setting_activity_enabled

    @property
    def firewall_setting_engine_option_strict_terodo_port_check_enabled(self):
        """Gets the firewall_setting_engine_option_strict_terodo_port_check_enabled of this ComputerSettings.  # noqa: E501

        Strict Teredo Port Check  # noqa: E501

        :return: The firewall_setting_engine_option_strict_terodo_port_check_enabled of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_engine_option_strict_terodo_port_check_enabled

    @firewall_setting_engine_option_strict_terodo_port_check_enabled.setter
    def firewall_setting_engine_option_strict_terodo_port_check_enabled(self, firewall_setting_engine_option_strict_terodo_port_check_enabled):
        """Sets the firewall_setting_engine_option_strict_terodo_port_check_enabled of this ComputerSettings.

        Strict Teredo Port Check  # noqa: E501

        :param firewall_setting_engine_option_strict_terodo_port_check_enabled: The firewall_setting_engine_option_strict_terodo_port_check_enabled of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_engine_option_strict_terodo_port_check_enabled = firewall_setting_engine_option_strict_terodo_port_check_enabled

    @property
    def web_reputation_setting_blocked_url_keywords(self):
        """Gets the web_reputation_setting_blocked_url_keywords of this ComputerSettings.  # noqa: E501

        Blocked Keywords  # noqa: E501

        :return: The web_reputation_setting_blocked_url_keywords of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._web_reputation_setting_blocked_url_keywords

    @web_reputation_setting_blocked_url_keywords.setter
    def web_reputation_setting_blocked_url_keywords(self, web_reputation_setting_blocked_url_keywords):
        """Sets the web_reputation_setting_blocked_url_keywords of this ComputerSettings.

        Blocked Keywords  # noqa: E501

        :param web_reputation_setting_blocked_url_keywords: The web_reputation_setting_blocked_url_keywords of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._web_reputation_setting_blocked_url_keywords = web_reputation_setting_blocked_url_keywords

    @property
    def web_reputation_setting_syslog_config_id(self):
        """Gets the web_reputation_setting_syslog_config_id of this ComputerSettings.  # noqa: E501

        Web Reputation Syslog Configuration  # noqa: E501

        :return: The web_reputation_setting_syslog_config_id of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._web_reputation_setting_syslog_config_id

    @web_reputation_setting_syslog_config_id.setter
    def web_reputation_setting_syslog_config_id(self, web_reputation_setting_syslog_config_id):
        """Sets the web_reputation_setting_syslog_config_id of this ComputerSettings.

        Web Reputation Syslog Configuration  # noqa: E501

        :param web_reputation_setting_syslog_config_id: The web_reputation_setting_syslog_config_id of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._web_reputation_setting_syslog_config_id = web_reputation_setting_syslog_config_id

    @property
    def firewall_setting_failure_response_packet_sanity_check(self):
        """Gets the firewall_setting_failure_response_packet_sanity_check of this ComputerSettings.  # noqa: E501

        Network Packet Sanity Check Failure  # noqa: E501

        :return: The firewall_setting_failure_response_packet_sanity_check of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_failure_response_packet_sanity_check

    @firewall_setting_failure_response_packet_sanity_check.setter
    def firewall_setting_failure_response_packet_sanity_check(self, firewall_setting_failure_response_packet_sanity_check):
        """Sets the firewall_setting_failure_response_packet_sanity_check of this ComputerSettings.

        Network Packet Sanity Check Failure  # noqa: E501

        :param firewall_setting_failure_response_packet_sanity_check: The firewall_setting_failure_response_packet_sanity_check of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_failure_response_packet_sanity_check = firewall_setting_failure_response_packet_sanity_check

    @property
    def firewall_setting_network_engine_mode(self):
        """Gets the firewall_setting_network_engine_mode of this ComputerSettings.  # noqa: E501

        Network Engine Mode  # noqa: E501

        :return: The firewall_setting_network_engine_mode of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_network_engine_mode

    @firewall_setting_network_engine_mode.setter
    def firewall_setting_network_engine_mode(self, firewall_setting_network_engine_mode):
        """Sets the firewall_setting_network_engine_mode of this ComputerSettings.

        Network Engine Mode  # noqa: E501

        :param firewall_setting_network_engine_mode: The firewall_setting_network_engine_mode of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_network_engine_mode = firewall_setting_network_engine_mode

    @property
    def firewall_setting_event_log_file_size_max(self):
        """Gets the firewall_setting_event_log_file_size_max of this ComputerSettings.  # noqa: E501

        Maximum size of the event log files (on Agent/Appliance)  # noqa: E501

        :return: The firewall_setting_event_log_file_size_max of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_event_log_file_size_max

    @firewall_setting_event_log_file_size_max.setter
    def firewall_setting_event_log_file_size_max(self, firewall_setting_event_log_file_size_max):
        """Sets the firewall_setting_event_log_file_size_max of this ComputerSettings.

        Maximum size of the event log files (on Agent/Appliance)  # noqa: E501

        :param firewall_setting_event_log_file_size_max: The firewall_setting_event_log_file_size_max of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_event_log_file_size_max = firewall_setting_event_log_file_size_max

    @property
    def anti_malware_setting_malware_scan_multithreaded_processing_enabled(self):
        """Gets the anti_malware_setting_malware_scan_multithreaded_processing_enabled of this ComputerSettings.  # noqa: E501

        Use multithreaded processing for Malware scans (if available)  # noqa: E501

        :return: The anti_malware_setting_malware_scan_multithreaded_processing_enabled of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._anti_malware_setting_malware_scan_multithreaded_processing_enabled

    @anti_malware_setting_malware_scan_multithreaded_processing_enabled.setter
    def anti_malware_setting_malware_scan_multithreaded_processing_enabled(self, anti_malware_setting_malware_scan_multithreaded_processing_enabled):
        """Sets the anti_malware_setting_malware_scan_multithreaded_processing_enabled of this ComputerSettings.

        Use multithreaded processing for Malware scans (if available)  # noqa: E501

        :param anti_malware_setting_malware_scan_multithreaded_processing_enabled: The anti_malware_setting_malware_scan_multithreaded_processing_enabled of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._anti_malware_setting_malware_scan_multithreaded_processing_enabled = anti_malware_setting_malware_scan_multithreaded_processing_enabled

    @property
    def firewall_setting_reconnaissance_detect_tcp_syn_fin_scan_enabled(self):
        """Gets the firewall_setting_reconnaissance_detect_tcp_syn_fin_scan_enabled of this ComputerSettings.  # noqa: E501

        TCP SYNFIN Scan - Enabled  # noqa: E501

        :return: The firewall_setting_reconnaissance_detect_tcp_syn_fin_scan_enabled of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_reconnaissance_detect_tcp_syn_fin_scan_enabled

    @firewall_setting_reconnaissance_detect_tcp_syn_fin_scan_enabled.setter
    def firewall_setting_reconnaissance_detect_tcp_syn_fin_scan_enabled(self, firewall_setting_reconnaissance_detect_tcp_syn_fin_scan_enabled):
        """Sets the firewall_setting_reconnaissance_detect_tcp_syn_fin_scan_enabled of this ComputerSettings.

        TCP SYNFIN Scan - Enabled  # noqa: E501

        :param firewall_setting_reconnaissance_detect_tcp_syn_fin_scan_enabled: The firewall_setting_reconnaissance_detect_tcp_syn_fin_scan_enabled of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_reconnaissance_detect_tcp_syn_fin_scan_enabled = firewall_setting_reconnaissance_detect_tcp_syn_fin_scan_enabled

    @property
    def firewall_setting_engine_option_drop_ip_zero_payload_enabled(self):
        """Gets the firewall_setting_engine_option_drop_ip_zero_payload_enabled of this ComputerSettings.  # noqa: E501

        Drop IP Packet with Zero Payload  # noqa: E501

        :return: The firewall_setting_engine_option_drop_ip_zero_payload_enabled of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_engine_option_drop_ip_zero_payload_enabled

    @firewall_setting_engine_option_drop_ip_zero_payload_enabled.setter
    def firewall_setting_engine_option_drop_ip_zero_payload_enabled(self, firewall_setting_engine_option_drop_ip_zero_payload_enabled):
        """Sets the firewall_setting_engine_option_drop_ip_zero_payload_enabled of this ComputerSettings.

        Drop IP Packet with Zero Payload  # noqa: E501

        :param firewall_setting_engine_option_drop_ip_zero_payload_enabled: The firewall_setting_engine_option_drop_ip_zero_payload_enabled of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_engine_option_drop_ip_zero_payload_enabled = firewall_setting_engine_option_drop_ip_zero_payload_enabled

    @property
    def firewall_setting_engine_option_block_ipv6_agent8_and_earlier_enabled(self):
        """Gets the firewall_setting_engine_option_block_ipv6_agent8_and_earlier_enabled of this ComputerSettings.  # noqa: E501

        Advanced - Block IPv6 on Agents and Appliances versions 8 and earlier  # noqa: E501

        :return: The firewall_setting_engine_option_block_ipv6_agent8_and_earlier_enabled of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_engine_option_block_ipv6_agent8_and_earlier_enabled

    @firewall_setting_engine_option_block_ipv6_agent8_and_earlier_enabled.setter
    def firewall_setting_engine_option_block_ipv6_agent8_and_earlier_enabled(self, firewall_setting_engine_option_block_ipv6_agent8_and_earlier_enabled):
        """Sets the firewall_setting_engine_option_block_ipv6_agent8_and_earlier_enabled of this ComputerSettings.

        Advanced - Block IPv6 on Agents and Appliances versions 8 and earlier  # noqa: E501

        :param firewall_setting_engine_option_block_ipv6_agent8_and_earlier_enabled: The firewall_setting_engine_option_block_ipv6_agent8_and_earlier_enabled of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_engine_option_block_ipv6_agent8_and_earlier_enabled = firewall_setting_engine_option_block_ipv6_agent8_and_earlier_enabled

    @property
    def intrusion_prevention_setting_engine_option_fragmented_ip_packet_send_icmp_enabled(self):
        """Gets the intrusion_prevention_setting_engine_option_fragmented_ip_packet_send_icmp_enabled of this ComputerSettings.  # noqa: E501

        Send ICMP to indicate fragmented packet timeout exceeded  # noqa: E501

        :return: The intrusion_prevention_setting_engine_option_fragmented_ip_packet_send_icmp_enabled of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._intrusion_prevention_setting_engine_option_fragmented_ip_packet_send_icmp_enabled

    @intrusion_prevention_setting_engine_option_fragmented_ip_packet_send_icmp_enabled.setter
    def intrusion_prevention_setting_engine_option_fragmented_ip_packet_send_icmp_enabled(self, intrusion_prevention_setting_engine_option_fragmented_ip_packet_send_icmp_enabled):
        """Sets the intrusion_prevention_setting_engine_option_fragmented_ip_packet_send_icmp_enabled of this ComputerSettings.

        Send ICMP to indicate fragmented packet timeout exceeded  # noqa: E501

        :param intrusion_prevention_setting_engine_option_fragmented_ip_packet_send_icmp_enabled: The intrusion_prevention_setting_engine_option_fragmented_ip_packet_send_icmp_enabled of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._intrusion_prevention_setting_engine_option_fragmented_ip_packet_send_icmp_enabled = intrusion_prevention_setting_engine_option_fragmented_ip_packet_send_icmp_enabled

    @property
    def anti_malware_setting_predictive_machine_learning_exceptions(self):
        """Gets the anti_malware_setting_predictive_machine_learning_exceptions of this ComputerSettings.  # noqa: E501

        Predictive Machine Learning Exclusion List  # noqa: E501

        :return: The anti_malware_setting_predictive_machine_learning_exceptions of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._anti_malware_setting_predictive_machine_learning_exceptions

    @anti_malware_setting_predictive_machine_learning_exceptions.setter
    def anti_malware_setting_predictive_machine_learning_exceptions(self, anti_malware_setting_predictive_machine_learning_exceptions):
        """Sets the anti_malware_setting_predictive_machine_learning_exceptions of this ComputerSettings.

        Predictive Machine Learning Exclusion List  # noqa: E501

        :param anti_malware_setting_predictive_machine_learning_exceptions: The anti_malware_setting_predictive_machine_learning_exceptions of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._anti_malware_setting_predictive_machine_learning_exceptions = anti_malware_setting_predictive_machine_learning_exceptions

    @property
    def firewall_setting_engine_option_log_events_per_second_max(self):
        """Gets the firewall_setting_engine_option_log_events_per_second_max of this ComputerSettings.  # noqa: E501

        Maximum Events Per Second  # noqa: E501

        :return: The firewall_setting_engine_option_log_events_per_second_max of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_engine_option_log_events_per_second_max

    @firewall_setting_engine_option_log_events_per_second_max.setter
    def firewall_setting_engine_option_log_events_per_second_max(self, firewall_setting_engine_option_log_events_per_second_max):
        """Sets the firewall_setting_engine_option_log_events_per_second_max of this ComputerSettings.

        Maximum Events Per Second  # noqa: E501

        :param firewall_setting_engine_option_log_events_per_second_max: The firewall_setting_engine_option_log_events_per_second_max of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_engine_option_log_events_per_second_max = firewall_setting_engine_option_log_events_per_second_max

    @property
    def firewall_setting_engine_option_ssl_session_time(self):
        """Gets the firewall_setting_engine_option_ssl_session_time of this ComputerSettings.  # noqa: E501

        SSL Session Time  # noqa: E501

        :return: The firewall_setting_engine_option_ssl_session_time of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_engine_option_ssl_session_time

    @firewall_setting_engine_option_ssl_session_time.setter
    def firewall_setting_engine_option_ssl_session_time(self, firewall_setting_engine_option_ssl_session_time):
        """Sets the firewall_setting_engine_option_ssl_session_time of this ComputerSettings.

        SSL Session Time  # noqa: E501

        :param firewall_setting_engine_option_ssl_session_time: The firewall_setting_engine_option_ssl_session_time of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_engine_option_ssl_session_time = firewall_setting_engine_option_ssl_session_time

    @property
    def anti_malware_setting_behavior_monitoring_scan_exclusion_list(self):
        """Gets the anti_malware_setting_behavior_monitoring_scan_exclusion_list of this ComputerSettings.  # noqa: E501

        Scan Exclusions for Suspicious Activity/Unauthorized Change  # noqa: E501

        :return: The anti_malware_setting_behavior_monitoring_scan_exclusion_list of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._anti_malware_setting_behavior_monitoring_scan_exclusion_list

    @anti_malware_setting_behavior_monitoring_scan_exclusion_list.setter
    def anti_malware_setting_behavior_monitoring_scan_exclusion_list(self, anti_malware_setting_behavior_monitoring_scan_exclusion_list):
        """Sets the anti_malware_setting_behavior_monitoring_scan_exclusion_list of this ComputerSettings.

        Scan Exclusions for Suspicious Activity/Unauthorized Change  # noqa: E501

        :param anti_malware_setting_behavior_monitoring_scan_exclusion_list: The anti_malware_setting_behavior_monitoring_scan_exclusion_list of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._anti_malware_setting_behavior_monitoring_scan_exclusion_list = anti_malware_setting_behavior_monitoring_scan_exclusion_list

    @property
    def anti_malware_setting_smart_protection_global_server_enabled(self):
        """Gets the anti_malware_setting_smart_protection_global_server_enabled of this ComputerSettings.  # noqa: E501

        Use Global Smart Protection Service for Smart Scan  # noqa: E501

        :return: The anti_malware_setting_smart_protection_global_server_enabled of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._anti_malware_setting_smart_protection_global_server_enabled

    @anti_malware_setting_smart_protection_global_server_enabled.setter
    def anti_malware_setting_smart_protection_global_server_enabled(self, anti_malware_setting_smart_protection_global_server_enabled):
        """Sets the anti_malware_setting_smart_protection_global_server_enabled of this ComputerSettings.

        Use Global Smart Protection Service for Smart Scan  # noqa: E501

        :param anti_malware_setting_smart_protection_global_server_enabled: The anti_malware_setting_smart_protection_global_server_enabled of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._anti_malware_setting_smart_protection_global_server_enabled = anti_malware_setting_smart_protection_global_server_enabled

    @property
    def firewall_setting_engine_option_log_one_packet_within_period_enabled(self):
        """Gets the firewall_setting_engine_option_log_one_packet_within_period_enabled of this ComputerSettings.  # noqa: E501

        Log only one packet within period  # noqa: E501

        :return: The firewall_setting_engine_option_log_one_packet_within_period_enabled of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_engine_option_log_one_packet_within_period_enabled

    @firewall_setting_engine_option_log_one_packet_within_period_enabled.setter
    def firewall_setting_engine_option_log_one_packet_within_period_enabled(self, firewall_setting_engine_option_log_one_packet_within_period_enabled):
        """Sets the firewall_setting_engine_option_log_one_packet_within_period_enabled of this ComputerSettings.

        Log only one packet within period  # noqa: E501

        :param firewall_setting_engine_option_log_one_packet_within_period_enabled: The firewall_setting_engine_option_log_one_packet_within_period_enabled of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_engine_option_log_one_packet_within_period_enabled = firewall_setting_engine_option_log_one_packet_within_period_enabled

    @property
    def firewall_setting_engine_option_generate_connection_events_icmp_enabled(self):
        """Gets the firewall_setting_engine_option_generate_connection_events_icmp_enabled of this ComputerSettings.  # noqa: E501

        Generate Connection Events for ICMP  # noqa: E501

        :return: The firewall_setting_engine_option_generate_connection_events_icmp_enabled of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_engine_option_generate_connection_events_icmp_enabled

    @firewall_setting_engine_option_generate_connection_events_icmp_enabled.setter
    def firewall_setting_engine_option_generate_connection_events_icmp_enabled(self, firewall_setting_engine_option_generate_connection_events_icmp_enabled):
        """Sets the firewall_setting_engine_option_generate_connection_events_icmp_enabled of this ComputerSettings.

        Generate Connection Events for ICMP  # noqa: E501

        :param firewall_setting_engine_option_generate_connection_events_icmp_enabled: The firewall_setting_engine_option_generate_connection_events_icmp_enabled of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_engine_option_generate_connection_events_icmp_enabled = firewall_setting_engine_option_generate_connection_events_icmp_enabled

    @property
    def platform_setting_heartbeat_inactive_vm_offline_alert_enabled(self):
        """Gets the platform_setting_heartbeat_inactive_vm_offline_alert_enabled of this ComputerSettings.  # noqa: E501

        Raise Offline Errors For Inactive Virtual Machines  # noqa: E501

        :return: The platform_setting_heartbeat_inactive_vm_offline_alert_enabled of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._platform_setting_heartbeat_inactive_vm_offline_alert_enabled

    @platform_setting_heartbeat_inactive_vm_offline_alert_enabled.setter
    def platform_setting_heartbeat_inactive_vm_offline_alert_enabled(self, platform_setting_heartbeat_inactive_vm_offline_alert_enabled):
        """Sets the platform_setting_heartbeat_inactive_vm_offline_alert_enabled of this ComputerSettings.

        Raise Offline Errors For Inactive Virtual Machines  # noqa: E501

        :param platform_setting_heartbeat_inactive_vm_offline_alert_enabled: The platform_setting_heartbeat_inactive_vm_offline_alert_enabled of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._platform_setting_heartbeat_inactive_vm_offline_alert_enabled = platform_setting_heartbeat_inactive_vm_offline_alert_enabled

    @property
    def web_reputation_setting_smart_protection_web_reputation_global_server_proxy_id(self):
        """Gets the web_reputation_setting_smart_protection_web_reputation_global_server_proxy_id of this ComputerSettings.  # noqa: E501

        Use Proxy when accessing Smart Protection Service for Web Reputation  # noqa: E501

        :return: The web_reputation_setting_smart_protection_web_reputation_global_server_proxy_id of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._web_reputation_setting_smart_protection_web_reputation_global_server_proxy_id

    @web_reputation_setting_smart_protection_web_reputation_global_server_proxy_id.setter
    def web_reputation_setting_smart_protection_web_reputation_global_server_proxy_id(self, web_reputation_setting_smart_protection_web_reputation_global_server_proxy_id):
        """Sets the web_reputation_setting_smart_protection_web_reputation_global_server_proxy_id of this ComputerSettings.

        Use Proxy when accessing Smart Protection Service for Web Reputation  # noqa: E501

        :param web_reputation_setting_smart_protection_web_reputation_global_server_proxy_id: The web_reputation_setting_smart_protection_web_reputation_global_server_proxy_id of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._web_reputation_setting_smart_protection_web_reputation_global_server_proxy_id = web_reputation_setting_smart_protection_web_reputation_global_server_proxy_id

    @property
    def anti_malware_setting_nsx_security_tagging_enabled(self):
        """Gets the anti_malware_setting_nsx_security_tagging_enabled of this ComputerSettings.  # noqa: E501

        Anti-Malware NSX Security Tagging State  # noqa: E501

        :return: The anti_malware_setting_nsx_security_tagging_enabled of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._anti_malware_setting_nsx_security_tagging_enabled

    @anti_malware_setting_nsx_security_tagging_enabled.setter
    def anti_malware_setting_nsx_security_tagging_enabled(self, anti_malware_setting_nsx_security_tagging_enabled):
        """Sets the anti_malware_setting_nsx_security_tagging_enabled of this ComputerSettings.

        Anti-Malware NSX Security Tagging State  # noqa: E501

        :param anti_malware_setting_nsx_security_tagging_enabled: The anti_malware_setting_nsx_security_tagging_enabled of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._anti_malware_setting_nsx_security_tagging_enabled = anti_malware_setting_nsx_security_tagging_enabled

    @property
    def firewall_setting_anti_evasion_check_fragmented_packets(self):
        """Gets the firewall_setting_anti_evasion_check_fragmented_packets of this ComputerSettings.  # noqa: E501

        Fragmented Packets  # noqa: E501

        :return: The firewall_setting_anti_evasion_check_fragmented_packets of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_anti_evasion_check_fragmented_packets

    @firewall_setting_anti_evasion_check_fragmented_packets.setter
    def firewall_setting_anti_evasion_check_fragmented_packets(self, firewall_setting_anti_evasion_check_fragmented_packets):
        """Sets the firewall_setting_anti_evasion_check_fragmented_packets of this ComputerSettings.

        Fragmented Packets  # noqa: E501

        :param firewall_setting_anti_evasion_check_fragmented_packets: The firewall_setting_anti_evasion_check_fragmented_packets of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_anti_evasion_check_fragmented_packets = firewall_setting_anti_evasion_check_fragmented_packets

    @property
    def firewall_setting_engine_option_connections_num_icmp_max(self):
        """Gets the firewall_setting_engine_option_connections_num_icmp_max of this ComputerSettings.  # noqa: E501

        Maximum ICMP Connections  # noqa: E501

        :return: The firewall_setting_engine_option_connections_num_icmp_max of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_engine_option_connections_num_icmp_max

    @firewall_setting_engine_option_connections_num_icmp_max.setter
    def firewall_setting_engine_option_connections_num_icmp_max(self, firewall_setting_engine_option_connections_num_icmp_max):
        """Sets the firewall_setting_engine_option_connections_num_icmp_max of this ComputerSettings.

        Maximum ICMP Connections  # noqa: E501

        :param firewall_setting_engine_option_connections_num_icmp_max: The firewall_setting_engine_option_connections_num_icmp_max of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_engine_option_connections_num_icmp_max = firewall_setting_engine_option_connections_num_icmp_max

    @property
    def firewall_setting_anti_evasion_check_tcp_split_handshake(self):
        """Gets the firewall_setting_anti_evasion_check_tcp_split_handshake of this ComputerSettings.  # noqa: E501

        TCP Split Handshake  # noqa: E501

        :return: The firewall_setting_anti_evasion_check_tcp_split_handshake of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_anti_evasion_check_tcp_split_handshake

    @firewall_setting_anti_evasion_check_tcp_split_handshake.setter
    def firewall_setting_anti_evasion_check_tcp_split_handshake(self, firewall_setting_anti_evasion_check_tcp_split_handshake):
        """Sets the firewall_setting_anti_evasion_check_tcp_split_handshake of this ComputerSettings.

        TCP Split Handshake  # noqa: E501

        :param firewall_setting_anti_evasion_check_tcp_split_handshake: The firewall_setting_anti_evasion_check_tcp_split_handshake of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_anti_evasion_check_tcp_split_handshake = firewall_setting_anti_evasion_check_tcp_split_handshake

    @property
    def anti_malware_setting_combined_mode_protection_source(self):
        """Gets the anti_malware_setting_combined_mode_protection_source of this ComputerSettings.  # noqa: E501

        Anti-Malware  # noqa: E501

        :return: The anti_malware_setting_combined_mode_protection_source of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._anti_malware_setting_combined_mode_protection_source

    @anti_malware_setting_combined_mode_protection_source.setter
    def anti_malware_setting_combined_mode_protection_source(self, anti_malware_setting_combined_mode_protection_source):
        """Sets the anti_malware_setting_combined_mode_protection_source of this ComputerSettings.

        Anti-Malware  # noqa: E501

        :param anti_malware_setting_combined_mode_protection_source: The anti_malware_setting_combined_mode_protection_source of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._anti_malware_setting_combined_mode_protection_source = anti_malware_setting_combined_mode_protection_source

    @property
    def firewall_setting_engine_option_event_nodes_max(self):
        """Gets the firewall_setting_engine_option_event_nodes_max of this ComputerSettings.  # noqa: E501

        Number of Event Nodes  # noqa: E501

        :return: The firewall_setting_engine_option_event_nodes_max of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_engine_option_event_nodes_max

    @firewall_setting_engine_option_event_nodes_max.setter
    def firewall_setting_engine_option_event_nodes_max(self, firewall_setting_engine_option_event_nodes_max):
        """Sets the firewall_setting_engine_option_event_nodes_max of this ComputerSettings.

        Number of Event Nodes  # noqa: E501

        :param firewall_setting_engine_option_event_nodes_max: The firewall_setting_engine_option_event_nodes_max of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_engine_option_event_nodes_max = firewall_setting_engine_option_event_nodes_max

    @property
    def web_reputation_setting_monitor_port_list_id(self):
        """Gets the web_reputation_setting_monitor_port_list_id of this ComputerSettings.  # noqa: E501

        Ports to monitor  # noqa: E501

        :return: The web_reputation_setting_monitor_port_list_id of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._web_reputation_setting_monitor_port_list_id

    @web_reputation_setting_monitor_port_list_id.setter
    def web_reputation_setting_monitor_port_list_id(self, web_reputation_setting_monitor_port_list_id):
        """Sets the web_reputation_setting_monitor_port_list_id of this ComputerSettings.

        Ports to monitor  # noqa: E501

        :param web_reputation_setting_monitor_port_list_id: The web_reputation_setting_monitor_port_list_id of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._web_reputation_setting_monitor_port_list_id = web_reputation_setting_monitor_port_list_id

    @property
    def application_control_setting_syslog_config_id(self):
        """Gets the application_control_setting_syslog_config_id of this ComputerSettings.  # noqa: E501

        Application Control Syslog Configuration  # noqa: E501

        :return: The application_control_setting_syslog_config_id of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._application_control_setting_syslog_config_id

    @application_control_setting_syslog_config_id.setter
    def application_control_setting_syslog_config_id(self, application_control_setting_syslog_config_id):
        """Sets the application_control_setting_syslog_config_id of this ComputerSettings.

        Application Control Syslog Configuration  # noqa: E501

        :param application_control_setting_syslog_config_id: The application_control_setting_syslog_config_id of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._application_control_setting_syslog_config_id = application_control_setting_syslog_config_id

    @property
    def firewall_setting_anti_evasion_check_out_no_connection(self):
        """Gets the firewall_setting_anti_evasion_check_out_no_connection of this ComputerSettings.  # noqa: E501

        Outgoing packet out of connection  # noqa: E501

        :return: The firewall_setting_anti_evasion_check_out_no_connection of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_anti_evasion_check_out_no_connection

    @firewall_setting_anti_evasion_check_out_no_connection.setter
    def firewall_setting_anti_evasion_check_out_no_connection(self, firewall_setting_anti_evasion_check_out_no_connection):
        """Sets the firewall_setting_anti_evasion_check_out_no_connection of this ComputerSettings.

        Outgoing packet out of connection  # noqa: E501

        :param firewall_setting_anti_evasion_check_out_no_connection: The firewall_setting_anti_evasion_check_out_no_connection of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_anti_evasion_check_out_no_connection = firewall_setting_anti_evasion_check_out_no_connection

    @property
    def firewall_setting_engine_option_block_ipv6_agent9_and_later_enabled(self):
        """Gets the firewall_setting_engine_option_block_ipv6_agent9_and_later_enabled of this ComputerSettings.  # noqa: E501

        Advanced - Block IPv6 on Agents and Appliances verions 9 and later  # noqa: E501

        :return: The firewall_setting_engine_option_block_ipv6_agent9_and_later_enabled of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_engine_option_block_ipv6_agent9_and_later_enabled

    @firewall_setting_engine_option_block_ipv6_agent9_and_later_enabled.setter
    def firewall_setting_engine_option_block_ipv6_agent9_and_later_enabled(self, firewall_setting_engine_option_block_ipv6_agent9_and_later_enabled):
        """Sets the firewall_setting_engine_option_block_ipv6_agent9_and_later_enabled of this ComputerSettings.

        Advanced - Block IPv6 on Agents and Appliances verions 9 and later  # noqa: E501

        :param firewall_setting_engine_option_block_ipv6_agent9_and_later_enabled: The firewall_setting_engine_option_block_ipv6_agent9_and_later_enabled of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_engine_option_block_ipv6_agent9_and_later_enabled = firewall_setting_engine_option_block_ipv6_agent9_and_later_enabled

    @property
    def integrity_monitoring_setting_virtual_appliance_optimization_scan_cache_entries_max(self):
        """Gets the integrity_monitoring_setting_virtual_appliance_optimization_scan_cache_entries_max of this ComputerSettings.  # noqa: E501

        Max Integrity Monitoring Scan Cache Entries  # noqa: E501

        :return: The integrity_monitoring_setting_virtual_appliance_optimization_scan_cache_entries_max of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._integrity_monitoring_setting_virtual_appliance_optimization_scan_cache_entries_max

    @integrity_monitoring_setting_virtual_appliance_optimization_scan_cache_entries_max.setter
    def integrity_monitoring_setting_virtual_appliance_optimization_scan_cache_entries_max(self, integrity_monitoring_setting_virtual_appliance_optimization_scan_cache_entries_max):
        """Sets the integrity_monitoring_setting_virtual_appliance_optimization_scan_cache_entries_max of this ComputerSettings.

        Max Integrity Monitoring Scan Cache Entries  # noqa: E501

        :param integrity_monitoring_setting_virtual_appliance_optimization_scan_cache_entries_max: The integrity_monitoring_setting_virtual_appliance_optimization_scan_cache_entries_max of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._integrity_monitoring_setting_virtual_appliance_optimization_scan_cache_entries_max = integrity_monitoring_setting_virtual_appliance_optimization_scan_cache_entries_max

    @property
    def firewall_setting_reconnaissance_notify_tcp_null_scan_enabled(self):
        """Gets the firewall_setting_reconnaissance_notify_tcp_null_scan_enabled of this ComputerSettings.  # noqa: E501

        TCP Null Scan - Notify DSM Immediately  # noqa: E501

        :return: The firewall_setting_reconnaissance_notify_tcp_null_scan_enabled of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_reconnaissance_notify_tcp_null_scan_enabled

    @firewall_setting_reconnaissance_notify_tcp_null_scan_enabled.setter
    def firewall_setting_reconnaissance_notify_tcp_null_scan_enabled(self, firewall_setting_reconnaissance_notify_tcp_null_scan_enabled):
        """Sets the firewall_setting_reconnaissance_notify_tcp_null_scan_enabled of this ComputerSettings.

        TCP Null Scan - Notify DSM Immediately  # noqa: E501

        :param firewall_setting_reconnaissance_notify_tcp_null_scan_enabled: The firewall_setting_reconnaissance_notify_tcp_null_scan_enabled of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_reconnaissance_notify_tcp_null_scan_enabled = firewall_setting_reconnaissance_notify_tcp_null_scan_enabled

    @property
    def firewall_setting_engine_option_ignore_status_code1(self):
        """Gets the firewall_setting_engine_option_ignore_status_code1 of this ComputerSettings.  # noqa: E501

        Ignore Status Code  # noqa: E501

        :return: The firewall_setting_engine_option_ignore_status_code1 of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_engine_option_ignore_status_code1

    @firewall_setting_engine_option_ignore_status_code1.setter
    def firewall_setting_engine_option_ignore_status_code1(self, firewall_setting_engine_option_ignore_status_code1):
        """Sets the firewall_setting_engine_option_ignore_status_code1 of this ComputerSettings.

        Ignore Status Code  # noqa: E501

        :param firewall_setting_engine_option_ignore_status_code1: The firewall_setting_engine_option_ignore_status_code1 of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_engine_option_ignore_status_code1 = firewall_setting_engine_option_ignore_status_code1

    @property
    def firewall_setting_engine_option_ignore_status_code0(self):
        """Gets the firewall_setting_engine_option_ignore_status_code0 of this ComputerSettings.  # noqa: E501

        Ignore Status Code  # noqa: E501

        :return: The firewall_setting_engine_option_ignore_status_code0 of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_engine_option_ignore_status_code0

    @firewall_setting_engine_option_ignore_status_code0.setter
    def firewall_setting_engine_option_ignore_status_code0(self, firewall_setting_engine_option_ignore_status_code0):
        """Sets the firewall_setting_engine_option_ignore_status_code0 of this ComputerSettings.

        Ignore Status Code  # noqa: E501

        :param firewall_setting_engine_option_ignore_status_code0: The firewall_setting_engine_option_ignore_status_code0 of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_engine_option_ignore_status_code0 = firewall_setting_engine_option_ignore_status_code0

    @property
    def firewall_setting_engine_option_ignore_status_code2(self):
        """Gets the firewall_setting_engine_option_ignore_status_code2 of this ComputerSettings.  # noqa: E501

        Ignore Status Code  # noqa: E501

        :return: The firewall_setting_engine_option_ignore_status_code2 of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_engine_option_ignore_status_code2

    @firewall_setting_engine_option_ignore_status_code2.setter
    def firewall_setting_engine_option_ignore_status_code2(self, firewall_setting_engine_option_ignore_status_code2):
        """Sets the firewall_setting_engine_option_ignore_status_code2 of this ComputerSettings.

        Ignore Status Code  # noqa: E501

        :param firewall_setting_engine_option_ignore_status_code2: The firewall_setting_engine_option_ignore_status_code2 of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_engine_option_ignore_status_code2 = firewall_setting_engine_option_ignore_status_code2

    @property
    def firewall_setting_engine_option_ssl_session_size(self):
        """Gets the firewall_setting_engine_option_ssl_session_size of this ComputerSettings.  # noqa: E501

        SSL Session Size  # noqa: E501

        :return: The firewall_setting_engine_option_ssl_session_size of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_engine_option_ssl_session_size

    @firewall_setting_engine_option_ssl_session_size.setter
    def firewall_setting_engine_option_ssl_session_size(self, firewall_setting_engine_option_ssl_session_size):
        """Sets the firewall_setting_engine_option_ssl_session_size of this ComputerSettings.

        SSL Session Size  # noqa: E501

        :param firewall_setting_engine_option_ssl_session_size: The firewall_setting_engine_option_ssl_session_size of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_engine_option_ssl_session_size = firewall_setting_engine_option_ssl_session_size

    @property
    def anti_malware_setting_scan_cache_real_time_config_id(self):
        """Gets the anti_malware_setting_scan_cache_real_time_config_id of this ComputerSettings.  # noqa: E501

        Anti-Malware Real-Time Scan Cache Configuration  # noqa: E501

        :return: The anti_malware_setting_scan_cache_real_time_config_id of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._anti_malware_setting_scan_cache_real_time_config_id

    @anti_malware_setting_scan_cache_real_time_config_id.setter
    def anti_malware_setting_scan_cache_real_time_config_id(self, anti_malware_setting_scan_cache_real_time_config_id):
        """Sets the anti_malware_setting_scan_cache_real_time_config_id of this ComputerSettings.

        Anti-Malware Real-Time Scan Cache Configuration  # noqa: E501

        :param anti_malware_setting_scan_cache_real_time_config_id: The anti_malware_setting_scan_cache_real_time_config_id of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._anti_malware_setting_scan_cache_real_time_config_id = anti_malware_setting_scan_cache_real_time_config_id

    @property
    def platform_setting_recommendation_ongoing_scans_interval(self):
        """Gets the platform_setting_recommendation_ongoing_scans_interval of this ComputerSettings.  # noqa: E501

        Ongoing Scan Interval  # noqa: E501

        :return: The platform_setting_recommendation_ongoing_scans_interval of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._platform_setting_recommendation_ongoing_scans_interval

    @platform_setting_recommendation_ongoing_scans_interval.setter
    def platform_setting_recommendation_ongoing_scans_interval(self, platform_setting_recommendation_ongoing_scans_interval):
        """Sets the platform_setting_recommendation_ongoing_scans_interval of this ComputerSettings.

        Ongoing Scan Interval  # noqa: E501

        :param platform_setting_recommendation_ongoing_scans_interval: The platform_setting_recommendation_ongoing_scans_interval of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._platform_setting_recommendation_ongoing_scans_interval = platform_setting_recommendation_ongoing_scans_interval

    @property
    def platform_setting_smart_protection_global_server_use_proxy_enabled(self):
        """Gets the platform_setting_smart_protection_global_server_use_proxy_enabled of this ComputerSettings.  # noqa: E501

        Use Proxy when accessing Global Service for Census  # noqa: E501

        :return: The platform_setting_smart_protection_global_server_use_proxy_enabled of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._platform_setting_smart_protection_global_server_use_proxy_enabled

    @platform_setting_smart_protection_global_server_use_proxy_enabled.setter
    def platform_setting_smart_protection_global_server_use_proxy_enabled(self, platform_setting_smart_protection_global_server_use_proxy_enabled):
        """Sets the platform_setting_smart_protection_global_server_use_proxy_enabled of this ComputerSettings.

        Use Proxy when accessing Global Service for Census  # noqa: E501

        :param platform_setting_smart_protection_global_server_use_proxy_enabled: The platform_setting_smart_protection_global_server_use_proxy_enabled of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._platform_setting_smart_protection_global_server_use_proxy_enabled = platform_setting_smart_protection_global_server_use_proxy_enabled

    @property
    def firewall_setting_interface_limit_one_active_enabled(self):
        """Gets the firewall_setting_interface_limit_one_active_enabled of this ComputerSettings.  # noqa: E501

        Limit to one active interface  # noqa: E501

        :return: The firewall_setting_interface_limit_one_active_enabled of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_interface_limit_one_active_enabled

    @firewall_setting_interface_limit_one_active_enabled.setter
    def firewall_setting_interface_limit_one_active_enabled(self, firewall_setting_interface_limit_one_active_enabled):
        """Sets the firewall_setting_interface_limit_one_active_enabled of this ComputerSettings.

        Limit to one active interface  # noqa: E501

        :param firewall_setting_interface_limit_one_active_enabled: The firewall_setting_interface_limit_one_active_enabled of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_interface_limit_one_active_enabled = firewall_setting_interface_limit_one_active_enabled

    @property
    def firewall_setting_anti_evasion_check_tcp_checksum(self):
        """Gets the firewall_setting_anti_evasion_check_tcp_checksum of this ComputerSettings.  # noqa: E501

        TCP Checksum  # noqa: E501

        :return: The firewall_setting_anti_evasion_check_tcp_checksum of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_anti_evasion_check_tcp_checksum

    @firewall_setting_anti_evasion_check_tcp_checksum.setter
    def firewall_setting_anti_evasion_check_tcp_checksum(self, firewall_setting_anti_evasion_check_tcp_checksum):
        """Sets the firewall_setting_anti_evasion_check_tcp_checksum of this ComputerSettings.

        TCP Checksum  # noqa: E501

        :param firewall_setting_anti_evasion_check_tcp_checksum: The firewall_setting_anti_evasion_check_tcp_checksum of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_anti_evasion_check_tcp_checksum = firewall_setting_anti_evasion_check_tcp_checksum

    @property
    def firewall_setting_engine_option_drop_ipv6_ext_type0_enabled(self):
        """Gets the firewall_setting_engine_option_drop_ipv6_ext_type0_enabled of this ComputerSettings.  # noqa: E501

        Drop IPv6 Extension Type 0  # noqa: E501

        :return: The firewall_setting_engine_option_drop_ipv6_ext_type0_enabled of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_engine_option_drop_ipv6_ext_type0_enabled

    @firewall_setting_engine_option_drop_ipv6_ext_type0_enabled.setter
    def firewall_setting_engine_option_drop_ipv6_ext_type0_enabled(self, firewall_setting_engine_option_drop_ipv6_ext_type0_enabled):
        """Sets the firewall_setting_engine_option_drop_ipv6_ext_type0_enabled of this ComputerSettings.

        Drop IPv6 Extension Type 0  # noqa: E501

        :param firewall_setting_engine_option_drop_ipv6_ext_type0_enabled: The firewall_setting_engine_option_drop_ipv6_ext_type0_enabled of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_engine_option_drop_ipv6_ext_type0_enabled = firewall_setting_engine_option_drop_ipv6_ext_type0_enabled

    @property
    def anti_malware_setting_scan_file_size_max_mbytes(self):
        """Gets the anti_malware_setting_scan_file_size_max_mbytes of this ComputerSettings.  # noqa: E501

        Maximum file size to scan  # noqa: E501

        :return: The anti_malware_setting_scan_file_size_max_mbytes of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._anti_malware_setting_scan_file_size_max_mbytes

    @anti_malware_setting_scan_file_size_max_mbytes.setter
    def anti_malware_setting_scan_file_size_max_mbytes(self, anti_malware_setting_scan_file_size_max_mbytes):
        """Sets the anti_malware_setting_scan_file_size_max_mbytes of this ComputerSettings.

        Maximum file size to scan  # noqa: E501

        :param anti_malware_setting_scan_file_size_max_mbytes: The anti_malware_setting_scan_file_size_max_mbytes of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._anti_malware_setting_scan_file_size_max_mbytes = anti_malware_setting_scan_file_size_max_mbytes

    @property
    def firewall_setting_engine_option_generate_connection_events_tcp_enabled(self):
        """Gets the firewall_setting_engine_option_generate_connection_events_tcp_enabled of this ComputerSettings.  # noqa: E501

        Generate Connection Events for TCP  # noqa: E501

        :return: The firewall_setting_engine_option_generate_connection_events_tcp_enabled of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_engine_option_generate_connection_events_tcp_enabled

    @firewall_setting_engine_option_generate_connection_events_tcp_enabled.setter
    def firewall_setting_engine_option_generate_connection_events_tcp_enabled(self, firewall_setting_engine_option_generate_connection_events_tcp_enabled):
        """Sets the firewall_setting_engine_option_generate_connection_events_tcp_enabled of this ComputerSettings.

        Generate Connection Events for TCP  # noqa: E501

        :param firewall_setting_engine_option_generate_connection_events_tcp_enabled: The firewall_setting_engine_option_generate_connection_events_tcp_enabled of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_engine_option_generate_connection_events_tcp_enabled = firewall_setting_engine_option_generate_connection_events_tcp_enabled

    @property
    def anti_malware_setting_file_hash_size_max_mbytes(self):
        """Gets the anti_malware_setting_file_hash_size_max_mbytes of this ComputerSettings.  # noqa: E501

        Skip hash values calculation if file size is large than (64MB~512MB)  # noqa: E501

        :return: The anti_malware_setting_file_hash_size_max_mbytes of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._anti_malware_setting_file_hash_size_max_mbytes

    @anti_malware_setting_file_hash_size_max_mbytes.setter
    def anti_malware_setting_file_hash_size_max_mbytes(self, anti_malware_setting_file_hash_size_max_mbytes):
        """Sets the anti_malware_setting_file_hash_size_max_mbytes of this ComputerSettings.

        Skip hash values calculation if file size is large than (64MB~512MB)  # noqa: E501

        :param anti_malware_setting_file_hash_size_max_mbytes: The anti_malware_setting_file_hash_size_max_mbytes of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._anti_malware_setting_file_hash_size_max_mbytes = anti_malware_setting_file_hash_size_max_mbytes

    @property
    def firewall_setting_event_log_file_cached_entries_life_time(self):
        """Gets the firewall_setting_event_log_file_cached_entries_life_time of this ComputerSettings.  # noqa: E501

        Cache Lifetime  # noqa: E501

        :return: The firewall_setting_event_log_file_cached_entries_life_time of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_event_log_file_cached_entries_life_time

    @firewall_setting_event_log_file_cached_entries_life_time.setter
    def firewall_setting_event_log_file_cached_entries_life_time(self, firewall_setting_event_log_file_cached_entries_life_time):
        """Sets the firewall_setting_event_log_file_cached_entries_life_time of this ComputerSettings.

        Cache Lifetime  # noqa: E501

        :param firewall_setting_event_log_file_cached_entries_life_time: The firewall_setting_event_log_file_cached_entries_life_time of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_event_log_file_cached_entries_life_time = firewall_setting_event_log_file_cached_entries_life_time

    @property
    def platform_setting_smart_protection_global_server_proxy_id(self):
        """Gets the platform_setting_smart_protection_global_server_proxy_id of this ComputerSettings.  # noqa: E501

        Use Proxy when accessing Global Service for Census  # noqa: E501

        :return: The platform_setting_smart_protection_global_server_proxy_id of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._platform_setting_smart_protection_global_server_proxy_id

    @platform_setting_smart_protection_global_server_proxy_id.setter
    def platform_setting_smart_protection_global_server_proxy_id(self, platform_setting_smart_protection_global_server_proxy_id):
        """Sets the platform_setting_smart_protection_global_server_proxy_id of this ComputerSettings.

        Use Proxy when accessing Global Service for Census  # noqa: E501

        :param platform_setting_smart_protection_global_server_proxy_id: The platform_setting_smart_protection_global_server_proxy_id of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._platform_setting_smart_protection_global_server_proxy_id = platform_setting_smart_protection_global_server_proxy_id

    @property
    def log_inspection_setting_auto_apply_recommendations_enabled(self):
        """Gets the log_inspection_setting_auto_apply_recommendations_enabled of this ComputerSettings.  # noqa: E501

        Automatically assign/unassign recommended Log Inspection Rules to Computer during Recommendation Scans  # noqa: E501

        :return: The log_inspection_setting_auto_apply_recommendations_enabled of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._log_inspection_setting_auto_apply_recommendations_enabled

    @log_inspection_setting_auto_apply_recommendations_enabled.setter
    def log_inspection_setting_auto_apply_recommendations_enabled(self, log_inspection_setting_auto_apply_recommendations_enabled):
        """Sets the log_inspection_setting_auto_apply_recommendations_enabled of this ComputerSettings.

        Automatically assign/unassign recommended Log Inspection Rules to Computer during Recommendation Scans  # noqa: E501

        :param log_inspection_setting_auto_apply_recommendations_enabled: The log_inspection_setting_auto_apply_recommendations_enabled of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._log_inspection_setting_auto_apply_recommendations_enabled = log_inspection_setting_auto_apply_recommendations_enabled

    @property
    def anti_malware_setting_connected_threat_defense_suspicious_file_ddan_submission_enabled(self):
        """Gets the anti_malware_setting_connected_threat_defense_suspicious_file_ddan_submission_enabled of this ComputerSettings.  # noqa: E501

        Submit files identified as suspicious by Document Exploit Protection scanning to Deep Discovery Analyzer  # noqa: E501

        :return: The anti_malware_setting_connected_threat_defense_suspicious_file_ddan_submission_enabled of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._anti_malware_setting_connected_threat_defense_suspicious_file_ddan_submission_enabled

    @anti_malware_setting_connected_threat_defense_suspicious_file_ddan_submission_enabled.setter
    def anti_malware_setting_connected_threat_defense_suspicious_file_ddan_submission_enabled(self, anti_malware_setting_connected_threat_defense_suspicious_file_ddan_submission_enabled):
        """Sets the anti_malware_setting_connected_threat_defense_suspicious_file_ddan_submission_enabled of this ComputerSettings.

        Submit files identified as suspicious by Document Exploit Protection scanning to Deep Discovery Analyzer  # noqa: E501

        :param anti_malware_setting_connected_threat_defense_suspicious_file_ddan_submission_enabled: The anti_malware_setting_connected_threat_defense_suspicious_file_ddan_submission_enabled of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._anti_malware_setting_connected_threat_defense_suspicious_file_ddan_submission_enabled = anti_malware_setting_connected_threat_defense_suspicious_file_ddan_submission_enabled

    @property
    def web_reputation_setting_blocking_page_link(self):
        """Gets the web_reputation_setting_blocking_page_link of this ComputerSettings.  # noqa: E501

        Blocked Page Link  # noqa: E501

        :return: The web_reputation_setting_blocking_page_link of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._web_reputation_setting_blocking_page_link

    @web_reputation_setting_blocking_page_link.setter
    def web_reputation_setting_blocking_page_link(self, web_reputation_setting_blocking_page_link):
        """Sets the web_reputation_setting_blocking_page_link of this ComputerSettings.

        Blocked Page Link  # noqa: E501

        :param web_reputation_setting_blocking_page_link: The web_reputation_setting_blocking_page_link of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._web_reputation_setting_blocking_page_link = web_reputation_setting_blocking_page_link

    @property
    def firewall_setting_syslog_config_id(self):
        """Gets the firewall_setting_syslog_config_id of this ComputerSettings.  # noqa: E501

        Firewall and Intrusion Prevention Syslog Configuration  # noqa: E501

        :return: The firewall_setting_syslog_config_id of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_syslog_config_id

    @firewall_setting_syslog_config_id.setter
    def firewall_setting_syslog_config_id(self, firewall_setting_syslog_config_id):
        """Sets the firewall_setting_syslog_config_id of this ComputerSettings.

        Firewall and Intrusion Prevention Syslog Configuration  # noqa: E501

        :param firewall_setting_syslog_config_id: The firewall_setting_syslog_config_id of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_syslog_config_id = firewall_setting_syslog_config_id

    @property
    def platform_setting_agent_communications_direction(self):
        """Gets the platform_setting_agent_communications_direction of this ComputerSettings.  # noqa: E501

        Direction of Deep Security Manager to Agent/Appliance communication  # noqa: E501

        :return: The platform_setting_agent_communications_direction of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._platform_setting_agent_communications_direction

    @platform_setting_agent_communications_direction.setter
    def platform_setting_agent_communications_direction(self, platform_setting_agent_communications_direction):
        """Sets the platform_setting_agent_communications_direction of this ComputerSettings.

        Direction of Deep Security Manager to Agent/Appliance communication  # noqa: E501

        :param platform_setting_agent_communications_direction: The platform_setting_agent_communications_direction of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._platform_setting_agent_communications_direction = platform_setting_agent_communications_direction

    @property
    def integrity_monitoring_setting_scan_cache_config_id(self):
        """Gets the integrity_monitoring_setting_scan_cache_config_id of this ComputerSettings.  # noqa: E501

        Integrity Scan Cache Configuration:  # noqa: E501

        :return: The integrity_monitoring_setting_scan_cache_config_id of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._integrity_monitoring_setting_scan_cache_config_id

    @integrity_monitoring_setting_scan_cache_config_id.setter
    def integrity_monitoring_setting_scan_cache_config_id(self, integrity_monitoring_setting_scan_cache_config_id):
        """Sets the integrity_monitoring_setting_scan_cache_config_id of this ComputerSettings.

        Integrity Scan Cache Configuration:  # noqa: E501

        :param integrity_monitoring_setting_scan_cache_config_id: The integrity_monitoring_setting_scan_cache_config_id of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._integrity_monitoring_setting_scan_cache_config_id = integrity_monitoring_setting_scan_cache_config_id

    @property
    def anti_malware_setting_document_exploit_protection_rule_exceptions(self):
        """Gets the anti_malware_setting_document_exploit_protection_rule_exceptions of this ComputerSettings.  # noqa: E501

        Allowed Advanced Threat Detection Rules  # noqa: E501

        :return: The anti_malware_setting_document_exploit_protection_rule_exceptions of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._anti_malware_setting_document_exploit_protection_rule_exceptions

    @anti_malware_setting_document_exploit_protection_rule_exceptions.setter
    def anti_malware_setting_document_exploit_protection_rule_exceptions(self, anti_malware_setting_document_exploit_protection_rule_exceptions):
        """Sets the anti_malware_setting_document_exploit_protection_rule_exceptions of this ComputerSettings.

        Allowed Advanced Threat Detection Rules  # noqa: E501

        :param anti_malware_setting_document_exploit_protection_rule_exceptions: The anti_malware_setting_document_exploit_protection_rule_exceptions of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._anti_malware_setting_document_exploit_protection_rule_exceptions = anti_malware_setting_document_exploit_protection_rule_exceptions

    @property
    def firewall_setting_anti_evasion_check_tcp_syn_with_data(self):
        """Gets the firewall_setting_anti_evasion_check_tcp_syn_with_data of this ComputerSettings.  # noqa: E501

        TCP Syn with Data  # noqa: E501

        :return: The firewall_setting_anti_evasion_check_tcp_syn_with_data of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_anti_evasion_check_tcp_syn_with_data

    @firewall_setting_anti_evasion_check_tcp_syn_with_data.setter
    def firewall_setting_anti_evasion_check_tcp_syn_with_data(self, firewall_setting_anti_evasion_check_tcp_syn_with_data):
        """Sets the firewall_setting_anti_evasion_check_tcp_syn_with_data of this ComputerSettings.

        TCP Syn with Data  # noqa: E501

        :param firewall_setting_anti_evasion_check_tcp_syn_with_data: The firewall_setting_anti_evasion_check_tcp_syn_with_data of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_anti_evasion_check_tcp_syn_with_data = firewall_setting_anti_evasion_check_tcp_syn_with_data

    @property
    def anti_malware_setting_file_hash_enabled(self):
        """Gets the anti_malware_setting_file_hash_enabled of this ComputerSettings.  # noqa: E501

        Calculate Hash values of all anti-malware events (at least SHA1 by default)  # noqa: E501

        :return: The anti_malware_setting_file_hash_enabled of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._anti_malware_setting_file_hash_enabled

    @anti_malware_setting_file_hash_enabled.setter
    def anti_malware_setting_file_hash_enabled(self, anti_malware_setting_file_hash_enabled):
        """Sets the anti_malware_setting_file_hash_enabled of this ComputerSettings.

        Calculate Hash values of all anti-malware events (at least SHA1 by default)  # noqa: E501

        :param anti_malware_setting_file_hash_enabled: The anti_malware_setting_file_hash_enabled of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._anti_malware_setting_file_hash_enabled = anti_malware_setting_file_hash_enabled

    @property
    def firewall_setting_reconnaissance_block_fingerprint_probe_duration(self):
        """Gets the firewall_setting_reconnaissance_block_fingerprint_probe_duration of this ComputerSettings.  # noqa: E501

        Computer OS Fingerprint Probe - Block Traffic  # noqa: E501

        :return: The firewall_setting_reconnaissance_block_fingerprint_probe_duration of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_reconnaissance_block_fingerprint_probe_duration

    @firewall_setting_reconnaissance_block_fingerprint_probe_duration.setter
    def firewall_setting_reconnaissance_block_fingerprint_probe_duration(self, firewall_setting_reconnaissance_block_fingerprint_probe_duration):
        """Sets the firewall_setting_reconnaissance_block_fingerprint_probe_duration of this ComputerSettings.

        Computer OS Fingerprint Probe - Block Traffic  # noqa: E501

        :param firewall_setting_reconnaissance_block_fingerprint_probe_duration: The firewall_setting_reconnaissance_block_fingerprint_probe_duration of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_reconnaissance_block_fingerprint_probe_duration = firewall_setting_reconnaissance_block_fingerprint_probe_duration

    @property
    def firewall_setting_engine_option_drop_ipv6_bogons_addresses_enabled(self):
        """Gets the firewall_setting_engine_option_drop_ipv6_bogons_addresses_enabled of this ComputerSettings.  # noqa: E501

        Drop IPv6 Bogon Addresses  # noqa: E501

        :return: The firewall_setting_engine_option_drop_ipv6_bogons_addresses_enabled of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_engine_option_drop_ipv6_bogons_addresses_enabled

    @firewall_setting_engine_option_drop_ipv6_bogons_addresses_enabled.setter
    def firewall_setting_engine_option_drop_ipv6_bogons_addresses_enabled(self, firewall_setting_engine_option_drop_ipv6_bogons_addresses_enabled):
        """Sets the firewall_setting_engine_option_drop_ipv6_bogons_addresses_enabled of this ComputerSettings.

        Drop IPv6 Bogon Addresses  # noqa: E501

        :param firewall_setting_engine_option_drop_ipv6_bogons_addresses_enabled: The firewall_setting_engine_option_drop_ipv6_bogons_addresses_enabled of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_engine_option_drop_ipv6_bogons_addresses_enabled = firewall_setting_engine_option_drop_ipv6_bogons_addresses_enabled

    @property
    def firewall_setting_engine_option_boot_start_timeout(self):
        """Gets the firewall_setting_engine_option_boot_start_timeout of this ComputerSettings.  # noqa: E501

        Boot Start Timeout  # noqa: E501

        :return: The firewall_setting_engine_option_boot_start_timeout of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_engine_option_boot_start_timeout

    @firewall_setting_engine_option_boot_start_timeout.setter
    def firewall_setting_engine_option_boot_start_timeout(self, firewall_setting_engine_option_boot_start_timeout):
        """Sets the firewall_setting_engine_option_boot_start_timeout of this ComputerSettings.

        Boot Start Timeout  # noqa: E501

        :param firewall_setting_engine_option_boot_start_timeout: The firewall_setting_engine_option_boot_start_timeout of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_engine_option_boot_start_timeout = firewall_setting_engine_option_boot_start_timeout

    @property
    def firewall_setting_engine_option_connections_num_tcp_max(self):
        """Gets the firewall_setting_engine_option_connections_num_tcp_max of this ComputerSettings.  # noqa: E501

        Maximum TCP Connections  # noqa: E501

        :return: The firewall_setting_engine_option_connections_num_tcp_max of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_engine_option_connections_num_tcp_max

    @firewall_setting_engine_option_connections_num_tcp_max.setter
    def firewall_setting_engine_option_connections_num_tcp_max(self, firewall_setting_engine_option_connections_num_tcp_max):
        """Sets the firewall_setting_engine_option_connections_num_tcp_max of this ComputerSettings.

        Maximum TCP Connections  # noqa: E501

        :param firewall_setting_engine_option_connections_num_tcp_max: The firewall_setting_engine_option_connections_num_tcp_max of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_engine_option_connections_num_tcp_max = firewall_setting_engine_option_connections_num_tcp_max

    @property
    def firewall_setting_anti_evasion_security_posture(self):
        """Gets the firewall_setting_anti_evasion_security_posture of this ComputerSettings.  # noqa: E501

        Anti-Evasion Posture  # noqa: E501

        :return: The firewall_setting_anti_evasion_security_posture of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_anti_evasion_security_posture

    @firewall_setting_anti_evasion_security_posture.setter
    def firewall_setting_anti_evasion_security_posture(self, firewall_setting_anti_evasion_security_posture):
        """Sets the firewall_setting_anti_evasion_security_posture of this ComputerSettings.

        Anti-Evasion Posture  # noqa: E501

        :param firewall_setting_anti_evasion_security_posture: The firewall_setting_anti_evasion_security_posture of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_anti_evasion_security_posture = firewall_setting_anti_evasion_security_posture

    @property
    def firewall_setting_interface_patterns(self):
        """Gets the firewall_setting_interface_patterns of this ComputerSettings.  # noqa: E501

        Interface Patterns  # noqa: E501

        :return: The firewall_setting_interface_patterns of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_interface_patterns

    @firewall_setting_interface_patterns.setter
    def firewall_setting_interface_patterns(self, firewall_setting_interface_patterns):
        """Sets the firewall_setting_interface_patterns of this ComputerSettings.

        Interface Patterns  # noqa: E501

        :param firewall_setting_interface_patterns: The firewall_setting_interface_patterns of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_interface_patterns = firewall_setting_interface_patterns

    @property
    def firewall_setting_interface_isolation_enabled(self):
        """Gets the firewall_setting_interface_isolation_enabled of this ComputerSettings.  # noqa: E501

        Enable Interface Isolation  # noqa: E501

        :return: The firewall_setting_interface_isolation_enabled of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_interface_isolation_enabled

    @firewall_setting_interface_isolation_enabled.setter
    def firewall_setting_interface_isolation_enabled(self, firewall_setting_interface_isolation_enabled):
        """Sets the firewall_setting_interface_isolation_enabled of this ComputerSettings.

        Enable Interface Isolation  # noqa: E501

        :param firewall_setting_interface_isolation_enabled: The firewall_setting_interface_isolation_enabled of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_interface_isolation_enabled = firewall_setting_interface_isolation_enabled

    @property
    def anti_malware_setting_virtual_appliance_real_time_scan_cache_entries_max(self):
        """Gets the anti_malware_setting_virtual_appliance_real_time_scan_cache_entries_max of this ComputerSettings.  # noqa: E501

        Max Real-Time Malware Scan Cache Entries  # noqa: E501

        :return: The anti_malware_setting_virtual_appliance_real_time_scan_cache_entries_max of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._anti_malware_setting_virtual_appliance_real_time_scan_cache_entries_max

    @anti_malware_setting_virtual_appliance_real_time_scan_cache_entries_max.setter
    def anti_malware_setting_virtual_appliance_real_time_scan_cache_entries_max(self, anti_malware_setting_virtual_appliance_real_time_scan_cache_entries_max):
        """Sets the anti_malware_setting_virtual_appliance_real_time_scan_cache_entries_max of this ComputerSettings.

        Max Real-Time Malware Scan Cache Entries  # noqa: E501

        :param anti_malware_setting_virtual_appliance_real_time_scan_cache_entries_max: The anti_malware_setting_virtual_appliance_real_time_scan_cache_entries_max of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._anti_malware_setting_virtual_appliance_real_time_scan_cache_entries_max = anti_malware_setting_virtual_appliance_real_time_scan_cache_entries_max

    @property
    def firewall_setting_events_out_of_allowed_policy_enabled(self):
        """Gets the firewall_setting_events_out_of_allowed_policy_enabled of this ComputerSettings.  # noqa: E501

        Generate Firewall Events for packets that are 'Out Of Allowed Policy'  # noqa: E501

        :return: The firewall_setting_events_out_of_allowed_policy_enabled of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_events_out_of_allowed_policy_enabled

    @firewall_setting_events_out_of_allowed_policy_enabled.setter
    def firewall_setting_events_out_of_allowed_policy_enabled(self, firewall_setting_events_out_of_allowed_policy_enabled):
        """Sets the firewall_setting_events_out_of_allowed_policy_enabled of this ComputerSettings.

        Generate Firewall Events for packets that are 'Out Of Allowed Policy'  # noqa: E501

        :param firewall_setting_events_out_of_allowed_policy_enabled: The firewall_setting_events_out_of_allowed_policy_enabled of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_events_out_of_allowed_policy_enabled = firewall_setting_events_out_of_allowed_policy_enabled

    @property
    def firewall_setting_anti_evasion_check_evasive_retransmit(self):
        """Gets the firewall_setting_anti_evasion_check_evasive_retransmit of this ComputerSettings.  # noqa: E501

        Evasive Retransmit  # noqa: E501

        :return: The firewall_setting_anti_evasion_check_evasive_retransmit of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_anti_evasion_check_evasive_retransmit

    @firewall_setting_anti_evasion_check_evasive_retransmit.setter
    def firewall_setting_anti_evasion_check_evasive_retransmit(self, firewall_setting_anti_evasion_check_evasive_retransmit):
        """Sets the firewall_setting_anti_evasion_check_evasive_retransmit of this ComputerSettings.

        Evasive Retransmit  # noqa: E501

        :param firewall_setting_anti_evasion_check_evasive_retransmit: The firewall_setting_anti_evasion_check_evasive_retransmit of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_anti_evasion_check_evasive_retransmit = firewall_setting_anti_evasion_check_evasive_retransmit

    @property
    def firewall_setting_engine_option_icmp_timeout(self):
        """Gets the firewall_setting_engine_option_icmp_timeout of this ComputerSettings.  # noqa: E501

        ICMP Timeout  # noqa: E501

        :return: The firewall_setting_engine_option_icmp_timeout of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_engine_option_icmp_timeout

    @firewall_setting_engine_option_icmp_timeout.setter
    def firewall_setting_engine_option_icmp_timeout(self, firewall_setting_engine_option_icmp_timeout):
        """Sets the firewall_setting_engine_option_icmp_timeout of this ComputerSettings.

        ICMP Timeout  # noqa: E501

        :param firewall_setting_engine_option_icmp_timeout: The firewall_setting_engine_option_icmp_timeout of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_engine_option_icmp_timeout = firewall_setting_engine_option_icmp_timeout

    @property
    def integrity_monitoring_setting_syslog_config_id(self):
        """Gets the integrity_monitoring_setting_syslog_config_id of this ComputerSettings.  # noqa: E501

        Integrity Monitoring Syslog Configuration  # noqa: E501

        :return: The integrity_monitoring_setting_syslog_config_id of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._integrity_monitoring_setting_syslog_config_id

    @integrity_monitoring_setting_syslog_config_id.setter
    def integrity_monitoring_setting_syslog_config_id(self, integrity_monitoring_setting_syslog_config_id):
        """Sets the integrity_monitoring_setting_syslog_config_id of this ComputerSettings.

        Integrity Monitoring Syslog Configuration  # noqa: E501

        :param integrity_monitoring_setting_syslog_config_id: The integrity_monitoring_setting_syslog_config_id of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._integrity_monitoring_setting_syslog_config_id = integrity_monitoring_setting_syslog_config_id

    @property
    def firewall_setting_engine_option_connection_cleanup_timeout(self):
        """Gets the firewall_setting_engine_option_connection_cleanup_timeout of this ComputerSettings.  # noqa: E501

        Connection Cleanup Timeout  # noqa: E501

        :return: The firewall_setting_engine_option_connection_cleanup_timeout of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_engine_option_connection_cleanup_timeout

    @firewall_setting_engine_option_connection_cleanup_timeout.setter
    def firewall_setting_engine_option_connection_cleanup_timeout(self, firewall_setting_engine_option_connection_cleanup_timeout):
        """Sets the firewall_setting_engine_option_connection_cleanup_timeout of this ComputerSettings.

        Connection Cleanup Timeout  # noqa: E501

        :param firewall_setting_engine_option_connection_cleanup_timeout: The firewall_setting_engine_option_connection_cleanup_timeout of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_engine_option_connection_cleanup_timeout = firewall_setting_engine_option_connection_cleanup_timeout

    @property
    def anti_malware_setting_smart_protection_local_server_allow_off_domain_global(self):
        """Gets the anti_malware_setting_smart_protection_local_server_allow_off_domain_global of this ComputerSettings.  # noqa: E501

        When off domain, connect to global Smart Protection Service. (Windows only)  # noqa: E501

        :return: The anti_malware_setting_smart_protection_local_server_allow_off_domain_global of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._anti_malware_setting_smart_protection_local_server_allow_off_domain_global

    @anti_malware_setting_smart_protection_local_server_allow_off_domain_global.setter
    def anti_malware_setting_smart_protection_local_server_allow_off_domain_global(self, anti_malware_setting_smart_protection_local_server_allow_off_domain_global):
        """Sets the anti_malware_setting_smart_protection_local_server_allow_off_domain_global of this ComputerSettings.

        When off domain, connect to global Smart Protection Service. (Windows only)  # noqa: E501

        :param anti_malware_setting_smart_protection_local_server_allow_off_domain_global: The anti_malware_setting_smart_protection_local_server_allow_off_domain_global of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._anti_malware_setting_smart_protection_local_server_allow_off_domain_global = anti_malware_setting_smart_protection_local_server_allow_off_domain_global

    @property
    def firewall_setting_reconnaissance_notify_tcp_syn_fin_scan_enabled(self):
        """Gets the firewall_setting_reconnaissance_notify_tcp_syn_fin_scan_enabled of this ComputerSettings.  # noqa: E501

        TCP SYNFIN Scan - Notify DSM Immediately  # noqa: E501

        :return: The firewall_setting_reconnaissance_notify_tcp_syn_fin_scan_enabled of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_reconnaissance_notify_tcp_syn_fin_scan_enabled

    @firewall_setting_reconnaissance_notify_tcp_syn_fin_scan_enabled.setter
    def firewall_setting_reconnaissance_notify_tcp_syn_fin_scan_enabled(self, firewall_setting_reconnaissance_notify_tcp_syn_fin_scan_enabled):
        """Sets the firewall_setting_reconnaissance_notify_tcp_syn_fin_scan_enabled of this ComputerSettings.

        TCP SYNFIN Scan - Notify DSM Immediately  # noqa: E501

        :param firewall_setting_reconnaissance_notify_tcp_syn_fin_scan_enabled: The firewall_setting_reconnaissance_notify_tcp_syn_fin_scan_enabled of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_reconnaissance_notify_tcp_syn_fin_scan_enabled = firewall_setting_reconnaissance_notify_tcp_syn_fin_scan_enabled

    @property
    def firewall_setting_engine_option_error_timeout(self):
        """Gets the firewall_setting_engine_option_error_timeout of this ComputerSettings.  # noqa: E501

        ERROR Timeout  # noqa: E501

        :return: The firewall_setting_engine_option_error_timeout of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_engine_option_error_timeout

    @firewall_setting_engine_option_error_timeout.setter
    def firewall_setting_engine_option_error_timeout(self, firewall_setting_engine_option_error_timeout):
        """Sets the firewall_setting_engine_option_error_timeout of this ComputerSettings.

        ERROR Timeout  # noqa: E501

        :param firewall_setting_engine_option_error_timeout: The firewall_setting_engine_option_error_timeout of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_engine_option_error_timeout = firewall_setting_engine_option_error_timeout

    @property
    def web_reputation_setting_allowed_urls(self):
        """Gets the web_reputation_setting_allowed_urls of this ComputerSettings.  # noqa: E501

        Allowed Page URLs  # noqa: E501

        :return: The web_reputation_setting_allowed_urls of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._web_reputation_setting_allowed_urls

    @web_reputation_setting_allowed_urls.setter
    def web_reputation_setting_allowed_urls(self, web_reputation_setting_allowed_urls):
        """Sets the web_reputation_setting_allowed_urls of this ComputerSettings.

        Allowed Page URLs  # noqa: E501

        :param web_reputation_setting_allowed_urls: The web_reputation_setting_allowed_urls of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._web_reputation_setting_allowed_urls = web_reputation_setting_allowed_urls

    @property
    def firewall_setting_reconnaissance_notify_network_or_port_scan_enabled(self):
        """Gets the firewall_setting_reconnaissance_notify_network_or_port_scan_enabled of this ComputerSettings.  # noqa: E501

        Network or Port Scan - Notify DSM Immediately  # noqa: E501

        :return: The firewall_setting_reconnaissance_notify_network_or_port_scan_enabled of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_reconnaissance_notify_network_or_port_scan_enabled

    @firewall_setting_reconnaissance_notify_network_or_port_scan_enabled.setter
    def firewall_setting_reconnaissance_notify_network_or_port_scan_enabled(self, firewall_setting_reconnaissance_notify_network_or_port_scan_enabled):
        """Sets the firewall_setting_reconnaissance_notify_network_or_port_scan_enabled of this ComputerSettings.

        Network or Port Scan - Notify DSM Immediately  # noqa: E501

        :param firewall_setting_reconnaissance_notify_network_or_port_scan_enabled: The firewall_setting_reconnaissance_notify_network_or_port_scan_enabled of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_reconnaissance_notify_network_or_port_scan_enabled = firewall_setting_reconnaissance_notify_network_or_port_scan_enabled

    @property
    def firewall_setting_engine_option_fin_wait1_timeout(self):
        """Gets the firewall_setting_engine_option_fin_wait1_timeout of this ComputerSettings.  # noqa: E501

        FIN_WAIT1 Timeout  # noqa: E501

        :return: The firewall_setting_engine_option_fin_wait1_timeout of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_engine_option_fin_wait1_timeout

    @firewall_setting_engine_option_fin_wait1_timeout.setter
    def firewall_setting_engine_option_fin_wait1_timeout(self, firewall_setting_engine_option_fin_wait1_timeout):
        """Sets the firewall_setting_engine_option_fin_wait1_timeout of this ComputerSettings.

        FIN_WAIT1 Timeout  # noqa: E501

        :param firewall_setting_engine_option_fin_wait1_timeout: The firewall_setting_engine_option_fin_wait1_timeout of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_engine_option_fin_wait1_timeout = firewall_setting_engine_option_fin_wait1_timeout

    @property
    def firewall_setting_engine_option_generate_connection_events_udp_enabled(self):
        """Gets the firewall_setting_engine_option_generate_connection_events_udp_enabled of this ComputerSettings.  # noqa: E501

        Generate Connection Events for UDP  # noqa: E501

        :return: The firewall_setting_engine_option_generate_connection_events_udp_enabled of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_engine_option_generate_connection_events_udp_enabled

    @firewall_setting_engine_option_generate_connection_events_udp_enabled.setter
    def firewall_setting_engine_option_generate_connection_events_udp_enabled(self, firewall_setting_engine_option_generate_connection_events_udp_enabled):
        """Sets the firewall_setting_engine_option_generate_connection_events_udp_enabled of this ComputerSettings.

        Generate Connection Events for UDP  # noqa: E501

        :param firewall_setting_engine_option_generate_connection_events_udp_enabled: The firewall_setting_engine_option_generate_connection_events_udp_enabled of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_engine_option_generate_connection_events_udp_enabled = firewall_setting_engine_option_generate_connection_events_udp_enabled

    @property
    def activity_monitoring_setting_syslog_config_id(self):
        """Gets the activity_monitoring_setting_syslog_config_id of this ComputerSettings.  # noqa: E501

        Activity Monitoring Configuration  # noqa: E501

        :return: The activity_monitoring_setting_syslog_config_id of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._activity_monitoring_setting_syslog_config_id

    @activity_monitoring_setting_syslog_config_id.setter
    def activity_monitoring_setting_syslog_config_id(self, activity_monitoring_setting_syslog_config_id):
        """Sets the activity_monitoring_setting_syslog_config_id of this ComputerSettings.

        Activity Monitoring Configuration  # noqa: E501

        :param activity_monitoring_setting_syslog_config_id: The activity_monitoring_setting_syslog_config_id of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._activity_monitoring_setting_syslog_config_id = activity_monitoring_setting_syslog_config_id

    @property
    def firewall_setting_anti_evasion_check_tcp_syn_rst_flags(self):
        """Gets the firewall_setting_anti_evasion_check_tcp_syn_rst_flags of this ComputerSettings.  # noqa: E501

        TCP Syn Rst Flags  # noqa: E501

        :return: The firewall_setting_anti_evasion_check_tcp_syn_rst_flags of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_anti_evasion_check_tcp_syn_rst_flags

    @firewall_setting_anti_evasion_check_tcp_syn_rst_flags.setter
    def firewall_setting_anti_evasion_check_tcp_syn_rst_flags(self, firewall_setting_anti_evasion_check_tcp_syn_rst_flags):
        """Sets the firewall_setting_anti_evasion_check_tcp_syn_rst_flags of this ComputerSettings.

        TCP Syn Rst Flags  # noqa: E501

        :param firewall_setting_anti_evasion_check_tcp_syn_rst_flags: The firewall_setting_anti_evasion_check_tcp_syn_rst_flags of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_anti_evasion_check_tcp_syn_rst_flags = firewall_setting_anti_evasion_check_tcp_syn_rst_flags

    @property
    def anti_malware_setting_spyware_approved_list(self):
        """Gets the anti_malware_setting_spyware_approved_list of this ComputerSettings.  # noqa: E501

        Allowed Spyware/Grayware  # noqa: E501

        :return: The anti_malware_setting_spyware_approved_list of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._anti_malware_setting_spyware_approved_list

    @anti_malware_setting_spyware_approved_list.setter
    def anti_malware_setting_spyware_approved_list(self, anti_malware_setting_spyware_approved_list):
        """Sets the anti_malware_setting_spyware_approved_list of this ComputerSettings.

        Allowed Spyware/Grayware  # noqa: E501

        :param anti_malware_setting_spyware_approved_list: The anti_malware_setting_spyware_approved_list of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._anti_malware_setting_spyware_approved_list = anti_malware_setting_spyware_approved_list

    @property
    def firewall_setting_anti_evasion_check_tcp_urgent_flags(self):
        """Gets the firewall_setting_anti_evasion_check_tcp_urgent_flags of this ComputerSettings.  # noqa: E501

        TCP Urgent Flags  # noqa: E501

        :return: The firewall_setting_anti_evasion_check_tcp_urgent_flags of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_anti_evasion_check_tcp_urgent_flags

    @firewall_setting_anti_evasion_check_tcp_urgent_flags.setter
    def firewall_setting_anti_evasion_check_tcp_urgent_flags(self, firewall_setting_anti_evasion_check_tcp_urgent_flags):
        """Sets the firewall_setting_anti_evasion_check_tcp_urgent_flags of this ComputerSettings.

        TCP Urgent Flags  # noqa: E501

        :param firewall_setting_anti_evasion_check_tcp_urgent_flags: The firewall_setting_anti_evasion_check_tcp_urgent_flags of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_anti_evasion_check_tcp_urgent_flags = firewall_setting_anti_evasion_check_tcp_urgent_flags

    @property
    def intrusion_prevention_setting_nsx_security_tagging_detect_mode_level(self):
        """Gets the intrusion_prevention_setting_nsx_security_tagging_detect_mode_level of this ComputerSettings.  # noqa: E501

        Detect Mode  # noqa: E501

        :return: The intrusion_prevention_setting_nsx_security_tagging_detect_mode_level of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._intrusion_prevention_setting_nsx_security_tagging_detect_mode_level

    @intrusion_prevention_setting_nsx_security_tagging_detect_mode_level.setter
    def intrusion_prevention_setting_nsx_security_tagging_detect_mode_level(self, intrusion_prevention_setting_nsx_security_tagging_detect_mode_level):
        """Sets the intrusion_prevention_setting_nsx_security_tagging_detect_mode_level of this ComputerSettings.

        Detect Mode  # noqa: E501

        :param intrusion_prevention_setting_nsx_security_tagging_detect_mode_level: The intrusion_prevention_setting_nsx_security_tagging_detect_mode_level of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._intrusion_prevention_setting_nsx_security_tagging_detect_mode_level = intrusion_prevention_setting_nsx_security_tagging_detect_mode_level

    @property
    def intrusion_prevention_setting_engine_option_fragmented_ip_unconcerned_mac_address_bypass_enabled(self):
        """Gets the intrusion_prevention_setting_engine_option_fragmented_ip_unconcerned_mac_address_bypass_enabled of this ComputerSettings.  # noqa: E501

        Bypass MAC addresses that don't belong to host  # noqa: E501

        :return: The intrusion_prevention_setting_engine_option_fragmented_ip_unconcerned_mac_address_bypass_enabled of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._intrusion_prevention_setting_engine_option_fragmented_ip_unconcerned_mac_address_bypass_enabled

    @intrusion_prevention_setting_engine_option_fragmented_ip_unconcerned_mac_address_bypass_enabled.setter
    def intrusion_prevention_setting_engine_option_fragmented_ip_unconcerned_mac_address_bypass_enabled(self, intrusion_prevention_setting_engine_option_fragmented_ip_unconcerned_mac_address_bypass_enabled):
        """Sets the intrusion_prevention_setting_engine_option_fragmented_ip_unconcerned_mac_address_bypass_enabled of this ComputerSettings.

        Bypass MAC addresses that don't belong to host  # noqa: E501

        :param intrusion_prevention_setting_engine_option_fragmented_ip_unconcerned_mac_address_bypass_enabled: The intrusion_prevention_setting_engine_option_fragmented_ip_unconcerned_mac_address_bypass_enabled of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._intrusion_prevention_setting_engine_option_fragmented_ip_unconcerned_mac_address_bypass_enabled = intrusion_prevention_setting_engine_option_fragmented_ip_unconcerned_mac_address_bypass_enabled

    @property
    def firewall_setting_engine_option_log_all_packet_data_enabled(self):
        """Gets the firewall_setting_engine_option_log_all_packet_data_enabled of this ComputerSettings.  # noqa: E501

        Log All Packet Data  # noqa: E501

        :return: The firewall_setting_engine_option_log_all_packet_data_enabled of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_engine_option_log_all_packet_data_enabled

    @firewall_setting_engine_option_log_all_packet_data_enabled.setter
    def firewall_setting_engine_option_log_all_packet_data_enabled(self, firewall_setting_engine_option_log_all_packet_data_enabled):
        """Sets the firewall_setting_engine_option_log_all_packet_data_enabled of this ComputerSettings.

        Log All Packet Data  # noqa: E501

        :param firewall_setting_engine_option_log_all_packet_data_enabled: The firewall_setting_engine_option_log_all_packet_data_enabled of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_engine_option_log_all_packet_data_enabled = firewall_setting_engine_option_log_all_packet_data_enabled

    @property
    def firewall_setting_anti_evasion_check_tcp_syn_fin_flags(self):
        """Gets the firewall_setting_anti_evasion_check_tcp_syn_fin_flags of this ComputerSettings.  # noqa: E501

        TCP Syn Fin Flags  # noqa: E501

        :return: The firewall_setting_anti_evasion_check_tcp_syn_fin_flags of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_anti_evasion_check_tcp_syn_fin_flags

    @firewall_setting_anti_evasion_check_tcp_syn_fin_flags.setter
    def firewall_setting_anti_evasion_check_tcp_syn_fin_flags(self, firewall_setting_anti_evasion_check_tcp_syn_fin_flags):
        """Sets the firewall_setting_anti_evasion_check_tcp_syn_fin_flags of this ComputerSettings.

        TCP Syn Fin Flags  # noqa: E501

        :param firewall_setting_anti_evasion_check_tcp_syn_fin_flags: The firewall_setting_anti_evasion_check_tcp_syn_fin_flags of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_anti_evasion_check_tcp_syn_fin_flags = firewall_setting_anti_evasion_check_tcp_syn_fin_flags

    @property
    def platform_setting_heartbeat_interval(self):
        """Gets the platform_setting_heartbeat_interval of this ComputerSettings.  # noqa: E501

        Heartbeat Interval  # noqa: E501

        :return: The platform_setting_heartbeat_interval of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._platform_setting_heartbeat_interval

    @platform_setting_heartbeat_interval.setter
    def platform_setting_heartbeat_interval(self, platform_setting_heartbeat_interval):
        """Sets the platform_setting_heartbeat_interval of this ComputerSettings.

        Heartbeat Interval  # noqa: E501

        :param platform_setting_heartbeat_interval: The platform_setting_heartbeat_interval of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._platform_setting_heartbeat_interval = platform_setting_heartbeat_interval

    @property
    def firewall_setting_engine_option_fragment_size_min(self):
        """Gets the firewall_setting_engine_option_fragment_size_min of this ComputerSettings.  # noqa: E501

        Minimum Fragment Size  # noqa: E501

        :return: The firewall_setting_engine_option_fragment_size_min of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_engine_option_fragment_size_min

    @firewall_setting_engine_option_fragment_size_min.setter
    def firewall_setting_engine_option_fragment_size_min(self, firewall_setting_engine_option_fragment_size_min):
        """Sets the firewall_setting_engine_option_fragment_size_min of this ComputerSettings.

        Minimum Fragment Size  # noqa: E501

        :param firewall_setting_engine_option_fragment_size_min: The firewall_setting_engine_option_fragment_size_min of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_engine_option_fragment_size_min = firewall_setting_engine_option_fragment_size_min

    @property
    def anti_malware_setting_smart_protection_server_connection_lost_warning_enabled(self):
        """Gets the anti_malware_setting_smart_protection_server_connection_lost_warning_enabled of this ComputerSettings.  # noqa: E501

        Warn if connection to Smart Protection Server is lost  # noqa: E501

        :return: The anti_malware_setting_smart_protection_server_connection_lost_warning_enabled of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._anti_malware_setting_smart_protection_server_connection_lost_warning_enabled

    @anti_malware_setting_smart_protection_server_connection_lost_warning_enabled.setter
    def anti_malware_setting_smart_protection_server_connection_lost_warning_enabled(self, anti_malware_setting_smart_protection_server_connection_lost_warning_enabled):
        """Sets the anti_malware_setting_smart_protection_server_connection_lost_warning_enabled of this ComputerSettings.

        Warn if connection to Smart Protection Server is lost  # noqa: E501

        :param anti_malware_setting_smart_protection_server_connection_lost_warning_enabled: The anti_malware_setting_smart_protection_server_connection_lost_warning_enabled of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._anti_malware_setting_smart_protection_server_connection_lost_warning_enabled = anti_malware_setting_smart_protection_server_connection_lost_warning_enabled

    @property
    def firewall_setting_reconnaissance_block_network_or_port_scan_duration(self):
        """Gets the firewall_setting_reconnaissance_block_network_or_port_scan_duration of this ComputerSettings.  # noqa: E501

        Network or Port Scan - Block Traffic  # noqa: E501

        :return: The firewall_setting_reconnaissance_block_network_or_port_scan_duration of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_reconnaissance_block_network_or_port_scan_duration

    @firewall_setting_reconnaissance_block_network_or_port_scan_duration.setter
    def firewall_setting_reconnaissance_block_network_or_port_scan_duration(self, firewall_setting_reconnaissance_block_network_or_port_scan_duration):
        """Sets the firewall_setting_reconnaissance_block_network_or_port_scan_duration of this ComputerSettings.

        Network or Port Scan - Block Traffic  # noqa: E501

        :param firewall_setting_reconnaissance_block_network_or_port_scan_duration: The firewall_setting_reconnaissance_block_network_or_port_scan_duration of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_reconnaissance_block_network_or_port_scan_duration = firewall_setting_reconnaissance_block_network_or_port_scan_duration

    @property
    def integrity_monitoring_setting_content_hash_algorithm(self):
        """Gets the integrity_monitoring_setting_content_hash_algorithm of this ComputerSettings.  # noqa: E501

        Integrity Monitoring Hash Algorithm  # noqa: E501

        :return: The integrity_monitoring_setting_content_hash_algorithm of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._integrity_monitoring_setting_content_hash_algorithm

    @integrity_monitoring_setting_content_hash_algorithm.setter
    def integrity_monitoring_setting_content_hash_algorithm(self, integrity_monitoring_setting_content_hash_algorithm):
        """Sets the integrity_monitoring_setting_content_hash_algorithm of this ComputerSettings.

        Integrity Monitoring Hash Algorithm  # noqa: E501

        :param integrity_monitoring_setting_content_hash_algorithm: The integrity_monitoring_setting_content_hash_algorithm of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._integrity_monitoring_setting_content_hash_algorithm = integrity_monitoring_setting_content_hash_algorithm

    @property
    def anti_malware_setting_smart_scan_state(self):
        """Gets the anti_malware_setting_smart_scan_state of this ComputerSettings.  # noqa: E501

        Smart Scan State  # noqa: E501

        :return: The anti_malware_setting_smart_scan_state of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._anti_malware_setting_smart_scan_state

    @anti_malware_setting_smart_scan_state.setter
    def anti_malware_setting_smart_scan_state(self, anti_malware_setting_smart_scan_state):
        """Sets the anti_malware_setting_smart_scan_state of this ComputerSettings.

        Smart Scan State  # noqa: E501

        :param anti_malware_setting_smart_scan_state: The anti_malware_setting_smart_scan_state of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._anti_malware_setting_smart_scan_state = anti_malware_setting_smart_scan_state

    @property
    def firewall_setting_config_package_exceeds_alert_max_enabled(self):
        """Gets the firewall_setting_config_package_exceeds_alert_max_enabled of this ComputerSettings.  # noqa: E501

        Advanced - Generate an Alert when Agent configuration package exceeds maximum size  # noqa: E501

        :return: The firewall_setting_config_package_exceeds_alert_max_enabled of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_config_package_exceeds_alert_max_enabled

    @firewall_setting_config_package_exceeds_alert_max_enabled.setter
    def firewall_setting_config_package_exceeds_alert_max_enabled(self, firewall_setting_config_package_exceeds_alert_max_enabled):
        """Sets the firewall_setting_config_package_exceeds_alert_max_enabled of this ComputerSettings.

        Advanced - Generate an Alert when Agent configuration package exceeds maximum size  # noqa: E501

        :param firewall_setting_config_package_exceeds_alert_max_enabled: The firewall_setting_config_package_exceeds_alert_max_enabled of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_config_package_exceeds_alert_max_enabled = firewall_setting_config_package_exceeds_alert_max_enabled

    @property
    def platform_setting_environment_variable_overrides(self):
        """Gets the platform_setting_environment_variable_overrides of this ComputerSettings.  # noqa: E501

        Environment Variable Overrides  # noqa: E501

        :return: The platform_setting_environment_variable_overrides of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._platform_setting_environment_variable_overrides

    @platform_setting_environment_variable_overrides.setter
    def platform_setting_environment_variable_overrides(self, platform_setting_environment_variable_overrides):
        """Sets the platform_setting_environment_variable_overrides of this ComputerSettings.

        Environment Variable Overrides  # noqa: E501

        :param platform_setting_environment_variable_overrides: The platform_setting_environment_variable_overrides of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._platform_setting_environment_variable_overrides = platform_setting_environment_variable_overrides

    @property
    def firewall_setting_engine_option_fragment_offset_min(self):
        """Gets the firewall_setting_engine_option_fragment_offset_min of this ComputerSettings.  # noqa: E501

        Minimum Fragment Offset  # noqa: E501

        :return: The firewall_setting_engine_option_fragment_offset_min of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_engine_option_fragment_offset_min

    @firewall_setting_engine_option_fragment_offset_min.setter
    def firewall_setting_engine_option_fragment_offset_min(self, firewall_setting_engine_option_fragment_offset_min):
        """Sets the firewall_setting_engine_option_fragment_offset_min of this ComputerSettings.

        Minimum Fragment Offset  # noqa: E501

        :param firewall_setting_engine_option_fragment_offset_min: The firewall_setting_engine_option_fragment_offset_min of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_engine_option_fragment_offset_min = firewall_setting_engine_option_fragment_offset_min

    @property
    def anti_malware_setting_smart_protection_local_server_urls(self):
        """Gets the anti_malware_setting_smart_protection_local_server_urls of this ComputerSettings.  # noqa: E501

        Local Smart Protection Servers for Smart Scan  # noqa: E501

        :return: The anti_malware_setting_smart_protection_local_server_urls of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._anti_malware_setting_smart_protection_local_server_urls

    @anti_malware_setting_smart_protection_local_server_urls.setter
    def anti_malware_setting_smart_protection_local_server_urls(self, anti_malware_setting_smart_protection_local_server_urls):
        """Sets the anti_malware_setting_smart_protection_local_server_urls of this ComputerSettings.

        Local Smart Protection Servers for Smart Scan  # noqa: E501

        :param anti_malware_setting_smart_protection_local_server_urls: The anti_malware_setting_smart_protection_local_server_urls of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._anti_malware_setting_smart_protection_local_server_urls = anti_malware_setting_smart_protection_local_server_urls

    @property
    def firewall_setting_engine_option_syn_rcvd_timeout(self):
        """Gets the firewall_setting_engine_option_syn_rcvd_timeout of this ComputerSettings.  # noqa: E501

        SYN_RCVD Timeout  # noqa: E501

        :return: The firewall_setting_engine_option_syn_rcvd_timeout of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_engine_option_syn_rcvd_timeout

    @firewall_setting_engine_option_syn_rcvd_timeout.setter
    def firewall_setting_engine_option_syn_rcvd_timeout(self, firewall_setting_engine_option_syn_rcvd_timeout):
        """Sets the firewall_setting_engine_option_syn_rcvd_timeout of this ComputerSettings.

        SYN_RCVD Timeout  # noqa: E501

        :param firewall_setting_engine_option_syn_rcvd_timeout: The firewall_setting_engine_option_syn_rcvd_timeout of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_engine_option_syn_rcvd_timeout = firewall_setting_engine_option_syn_rcvd_timeout

    @property
    def firewall_setting_event_log_file_cached_entries_num(self):
        """Gets the firewall_setting_event_log_file_cached_entries_num of this ComputerSettings.  # noqa: E501

        Cache Size  # noqa: E501

        :return: The firewall_setting_event_log_file_cached_entries_num of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_event_log_file_cached_entries_num

    @firewall_setting_event_log_file_cached_entries_num.setter
    def firewall_setting_event_log_file_cached_entries_num(self, firewall_setting_event_log_file_cached_entries_num):
        """Sets the firewall_setting_event_log_file_cached_entries_num of this ComputerSettings.

        Cache Size  # noqa: E501

        :param firewall_setting_event_log_file_cached_entries_num: The firewall_setting_event_log_file_cached_entries_num of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_event_log_file_cached_entries_num = firewall_setting_event_log_file_cached_entries_num

    @property
    def firewall_setting_engine_option_force_allow_icmp_type3_code4(self):
        """Gets the firewall_setting_engine_option_force_allow_icmp_type3_code4 of this ComputerSettings.  # noqa: E501

        Force Allow ICMP type3 code4  # noqa: E501

        :return: The firewall_setting_engine_option_force_allow_icmp_type3_code4 of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_engine_option_force_allow_icmp_type3_code4

    @firewall_setting_engine_option_force_allow_icmp_type3_code4.setter
    def firewall_setting_engine_option_force_allow_icmp_type3_code4(self, firewall_setting_engine_option_force_allow_icmp_type3_code4):
        """Sets the firewall_setting_engine_option_force_allow_icmp_type3_code4 of this ComputerSettings.

        Force Allow ICMP type3 code4  # noqa: E501

        :param firewall_setting_engine_option_force_allow_icmp_type3_code4: The firewall_setting_engine_option_force_allow_icmp_type3_code4 of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_engine_option_force_allow_icmp_type3_code4 = firewall_setting_engine_option_force_allow_icmp_type3_code4

    @property
    def firewall_setting_reconnaissance_block_tcp_null_scan_duration(self):
        """Gets the firewall_setting_reconnaissance_block_tcp_null_scan_duration of this ComputerSettings.  # noqa: E501

        TCP Null Scan - Block Traffic  # noqa: E501

        :return: The firewall_setting_reconnaissance_block_tcp_null_scan_duration of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_reconnaissance_block_tcp_null_scan_duration

    @firewall_setting_reconnaissance_block_tcp_null_scan_duration.setter
    def firewall_setting_reconnaissance_block_tcp_null_scan_duration(self, firewall_setting_reconnaissance_block_tcp_null_scan_duration):
        """Sets the firewall_setting_reconnaissance_block_tcp_null_scan_duration of this ComputerSettings.

        TCP Null Scan - Block Traffic  # noqa: E501

        :param firewall_setting_reconnaissance_block_tcp_null_scan_duration: The firewall_setting_reconnaissance_block_tcp_null_scan_duration of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_reconnaissance_block_tcp_null_scan_duration = firewall_setting_reconnaissance_block_tcp_null_scan_duration

    @property
    def platform_setting_smart_protection_global_server_enabled(self):
        """Gets the platform_setting_smart_protection_global_server_enabled of this ComputerSettings.  # noqa: E501

        Use Global Service for Census  # noqa: E501

        :return: The platform_setting_smart_protection_global_server_enabled of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._platform_setting_smart_protection_global_server_enabled

    @platform_setting_smart_protection_global_server_enabled.setter
    def platform_setting_smart_protection_global_server_enabled(self, platform_setting_smart_protection_global_server_enabled):
        """Sets the platform_setting_smart_protection_global_server_enabled of this ComputerSettings.

        Use Global Service for Census  # noqa: E501

        :param platform_setting_smart_protection_global_server_enabled: The platform_setting_smart_protection_global_server_enabled of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._platform_setting_smart_protection_global_server_enabled = platform_setting_smart_protection_global_server_enabled

    @property
    def integrity_monitoring_setting_realtime_enabled(self):
        """Gets the integrity_monitoring_setting_realtime_enabled of this ComputerSettings.  # noqa: E501

        Real Time  # noqa: E501

        :return: The integrity_monitoring_setting_realtime_enabled of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._integrity_monitoring_setting_realtime_enabled

    @integrity_monitoring_setting_realtime_enabled.setter
    def integrity_monitoring_setting_realtime_enabled(self, integrity_monitoring_setting_realtime_enabled):
        """Sets the integrity_monitoring_setting_realtime_enabled of this ComputerSettings.

        Real Time  # noqa: E501

        :param integrity_monitoring_setting_realtime_enabled: The integrity_monitoring_setting_realtime_enabled of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._integrity_monitoring_setting_realtime_enabled = integrity_monitoring_setting_realtime_enabled

    @property
    def firewall_setting_engine_option_last_ack_timeout(self):
        """Gets the firewall_setting_engine_option_last_ack_timeout of this ComputerSettings.  # noqa: E501

        LAST_ACK Timeout  # noqa: E501

        :return: The firewall_setting_engine_option_last_ack_timeout of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_engine_option_last_ack_timeout

    @firewall_setting_engine_option_last_ack_timeout.setter
    def firewall_setting_engine_option_last_ack_timeout(self, firewall_setting_engine_option_last_ack_timeout):
        """Sets the firewall_setting_engine_option_last_ack_timeout of this ComputerSettings.

        LAST_ACK Timeout  # noqa: E501

        :param firewall_setting_engine_option_last_ack_timeout: The firewall_setting_engine_option_last_ack_timeout of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_engine_option_last_ack_timeout = firewall_setting_engine_option_last_ack_timeout

    @property
    def firewall_setting_reconnaissance_exclude_ip_list_id(self):
        """Gets the firewall_setting_reconnaissance_exclude_ip_list_id of this ComputerSettings.  # noqa: E501

        Reconnaissance Scan Detection - Do not perform detection on traffic coming from  # noqa: E501

        :return: The firewall_setting_reconnaissance_exclude_ip_list_id of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_reconnaissance_exclude_ip_list_id

    @firewall_setting_reconnaissance_exclude_ip_list_id.setter
    def firewall_setting_reconnaissance_exclude_ip_list_id(self, firewall_setting_reconnaissance_exclude_ip_list_id):
        """Sets the firewall_setting_reconnaissance_exclude_ip_list_id of this ComputerSettings.

        Reconnaissance Scan Detection - Do not perform detection on traffic coming from  # noqa: E501

        :param firewall_setting_reconnaissance_exclude_ip_list_id: The firewall_setting_reconnaissance_exclude_ip_list_id of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_reconnaissance_exclude_ip_list_id = firewall_setting_reconnaissance_exclude_ip_list_id

    @property
    def platform_setting_agent_self_protection_enabled(self):
        """Gets the platform_setting_agent_self_protection_enabled of this ComputerSettings.  # noqa: E501

        Prevent local end-users from uninstalling, stopping, or otherwise modifying the Agent  # noqa: E501

        :return: The platform_setting_agent_self_protection_enabled of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._platform_setting_agent_self_protection_enabled

    @platform_setting_agent_self_protection_enabled.setter
    def platform_setting_agent_self_protection_enabled(self, platform_setting_agent_self_protection_enabled):
        """Sets the platform_setting_agent_self_protection_enabled of this ComputerSettings.

        Prevent local end-users from uninstalling, stopping, or otherwise modifying the Agent  # noqa: E501

        :param platform_setting_agent_self_protection_enabled: The platform_setting_agent_self_protection_enabled of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._platform_setting_agent_self_protection_enabled = platform_setting_agent_self_protection_enabled

    @property
    def firewall_setting_engine_option_drop_ipv6_reserved_addresses_enabled(self):
        """Gets the firewall_setting_engine_option_drop_ipv6_reserved_addresses_enabled of this ComputerSettings.  # noqa: E501

        Drop IPv6 Reserved Addresses  # noqa: E501

        :return: The firewall_setting_engine_option_drop_ipv6_reserved_addresses_enabled of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_engine_option_drop_ipv6_reserved_addresses_enabled

    @firewall_setting_engine_option_drop_ipv6_reserved_addresses_enabled.setter
    def firewall_setting_engine_option_drop_ipv6_reserved_addresses_enabled(self, firewall_setting_engine_option_drop_ipv6_reserved_addresses_enabled):
        """Sets the firewall_setting_engine_option_drop_ipv6_reserved_addresses_enabled of this ComputerSettings.

        Drop IPv6 Reserved Addresses  # noqa: E501

        :param firewall_setting_engine_option_drop_ipv6_reserved_addresses_enabled: The firewall_setting_engine_option_drop_ipv6_reserved_addresses_enabled of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_engine_option_drop_ipv6_reserved_addresses_enabled = firewall_setting_engine_option_drop_ipv6_reserved_addresses_enabled

    @property
    def firewall_setting_anti_evasion_check_fin_no_connection(self):
        """Gets the firewall_setting_anti_evasion_check_fin_no_connection of this ComputerSettings.  # noqa: E501

        FIN packet out of connection  # noqa: E501

        :return: The firewall_setting_anti_evasion_check_fin_no_connection of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_anti_evasion_check_fin_no_connection

    @firewall_setting_anti_evasion_check_fin_no_connection.setter
    def firewall_setting_anti_evasion_check_fin_no_connection(self, firewall_setting_anti_evasion_check_fin_no_connection):
        """Sets the firewall_setting_anti_evasion_check_fin_no_connection of this ComputerSettings.

        FIN packet out of connection  # noqa: E501

        :param firewall_setting_anti_evasion_check_fin_no_connection: The firewall_setting_anti_evasion_check_fin_no_connection of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_anti_evasion_check_fin_no_connection = firewall_setting_anti_evasion_check_fin_no_connection

    @property
    def firewall_setting_engine_option_debug_packet_num_max(self):
        """Gets the firewall_setting_engine_option_debug_packet_num_max of this ComputerSettings.  # noqa: E501

        Number of Packets to retain in Debug Mode  # noqa: E501

        :return: The firewall_setting_engine_option_debug_packet_num_max of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_engine_option_debug_packet_num_max

    @firewall_setting_engine_option_debug_packet_num_max.setter
    def firewall_setting_engine_option_debug_packet_num_max(self, firewall_setting_engine_option_debug_packet_num_max):
        """Sets the firewall_setting_engine_option_debug_packet_num_max of this ComputerSettings.

        Number of Packets to retain in Debug Mode  # noqa: E501

        :param firewall_setting_engine_option_debug_packet_num_max: The firewall_setting_engine_option_debug_packet_num_max of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_engine_option_debug_packet_num_max = firewall_setting_engine_option_debug_packet_num_max

    @property
    def firewall_setting_engine_option_bypass_cisco_waas_connections_enabled(self):
        """Gets the firewall_setting_engine_option_bypass_cisco_waas_connections_enabled of this ComputerSettings.  # noqa: E501

        Bypass Cisco WAAS Connections  # noqa: E501

        :return: The firewall_setting_engine_option_bypass_cisco_waas_connections_enabled of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_engine_option_bypass_cisco_waas_connections_enabled

    @firewall_setting_engine_option_bypass_cisco_waas_connections_enabled.setter
    def firewall_setting_engine_option_bypass_cisco_waas_connections_enabled(self, firewall_setting_engine_option_bypass_cisco_waas_connections_enabled):
        """Sets the firewall_setting_engine_option_bypass_cisco_waas_connections_enabled of this ComputerSettings.

        Bypass Cisco WAAS Connections  # noqa: E501

        :param firewall_setting_engine_option_bypass_cisco_waas_connections_enabled: The firewall_setting_engine_option_bypass_cisco_waas_connections_enabled of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_engine_option_bypass_cisco_waas_connections_enabled = firewall_setting_engine_option_bypass_cisco_waas_connections_enabled

    @property
    def firewall_setting_reconnaissance_enabled(self):
        """Gets the firewall_setting_reconnaissance_enabled of this ComputerSettings.  # noqa: E501

        Reconnaissance Scan Detection - Enabled  # noqa: E501

        :return: The firewall_setting_reconnaissance_enabled of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_reconnaissance_enabled

    @firewall_setting_reconnaissance_enabled.setter
    def firewall_setting_reconnaissance_enabled(self, firewall_setting_reconnaissance_enabled):
        """Sets the firewall_setting_reconnaissance_enabled of this ComputerSettings.

        Reconnaissance Scan Detection - Enabled  # noqa: E501

        :param firewall_setting_reconnaissance_enabled: The firewall_setting_reconnaissance_enabled of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_reconnaissance_enabled = firewall_setting_reconnaissance_enabled

    @property
    def platform_setting_heartbeat_local_time_shift_alert_threshold(self):
        """Gets the platform_setting_heartbeat_local_time_shift_alert_threshold of this ComputerSettings.  # noqa: E501

        Maximum change (in minutes) of the local system time on the computer between heartbeats before an alert is raised  # noqa: E501

        :return: The platform_setting_heartbeat_local_time_shift_alert_threshold of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._platform_setting_heartbeat_local_time_shift_alert_threshold

    @platform_setting_heartbeat_local_time_shift_alert_threshold.setter
    def platform_setting_heartbeat_local_time_shift_alert_threshold(self, platform_setting_heartbeat_local_time_shift_alert_threshold):
        """Sets the platform_setting_heartbeat_local_time_shift_alert_threshold of this ComputerSettings.

        Maximum change (in minutes) of the local system time on the computer between heartbeats before an alert is raised  # noqa: E501

        :param platform_setting_heartbeat_local_time_shift_alert_threshold: The platform_setting_heartbeat_local_time_shift_alert_threshold of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._platform_setting_heartbeat_local_time_shift_alert_threshold = platform_setting_heartbeat_local_time_shift_alert_threshold

    @property
    def anti_malware_setting_file_hash_md5_enabled(self):
        """Gets the anti_malware_setting_file_hash_md5_enabled of this ComputerSettings.  # noqa: E501

        MD5  # noqa: E501

        :return: The anti_malware_setting_file_hash_md5_enabled of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._anti_malware_setting_file_hash_md5_enabled

    @anti_malware_setting_file_hash_md5_enabled.setter
    def anti_malware_setting_file_hash_md5_enabled(self, anti_malware_setting_file_hash_md5_enabled):
        """Sets the anti_malware_setting_file_hash_md5_enabled of this ComputerSettings.

        MD5  # noqa: E501

        :param anti_malware_setting_file_hash_md5_enabled: The anti_malware_setting_file_hash_md5_enabled of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._anti_malware_setting_file_hash_md5_enabled = anti_malware_setting_file_hash_md5_enabled

    @property
    def firewall_setting_reconnaissance_detect_network_or_port_scan_enabled(self):
        """Gets the firewall_setting_reconnaissance_detect_network_or_port_scan_enabled of this ComputerSettings.  # noqa: E501

        Network or Port Scan - Enabled  # noqa: E501

        :return: The firewall_setting_reconnaissance_detect_network_or_port_scan_enabled of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_reconnaissance_detect_network_or_port_scan_enabled

    @firewall_setting_reconnaissance_detect_network_or_port_scan_enabled.setter
    def firewall_setting_reconnaissance_detect_network_or_port_scan_enabled(self, firewall_setting_reconnaissance_detect_network_or_port_scan_enabled):
        """Sets the firewall_setting_reconnaissance_detect_network_or_port_scan_enabled of this ComputerSettings.

        Network or Port Scan - Enabled  # noqa: E501

        :param firewall_setting_reconnaissance_detect_network_or_port_scan_enabled: The firewall_setting_reconnaissance_detect_network_or_port_scan_enabled of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_reconnaissance_detect_network_or_port_scan_enabled = firewall_setting_reconnaissance_detect_network_or_port_scan_enabled

    @property
    def firewall_setting_engine_option_silent_tcp_connection_drop_enabled(self):
        """Gets the firewall_setting_engine_option_silent_tcp_connection_drop_enabled of this ComputerSettings.  # noqa: E501

        Silent TCP Connection Drop  # noqa: E501

        :return: The firewall_setting_engine_option_silent_tcp_connection_drop_enabled of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_engine_option_silent_tcp_connection_drop_enabled

    @firewall_setting_engine_option_silent_tcp_connection_drop_enabled.setter
    def firewall_setting_engine_option_silent_tcp_connection_drop_enabled(self, firewall_setting_engine_option_silent_tcp_connection_drop_enabled):
        """Sets the firewall_setting_engine_option_silent_tcp_connection_drop_enabled of this ComputerSettings.

        Silent TCP Connection Drop  # noqa: E501

        :param firewall_setting_engine_option_silent_tcp_connection_drop_enabled: The firewall_setting_engine_option_silent_tcp_connection_drop_enabled of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_engine_option_silent_tcp_connection_drop_enabled = firewall_setting_engine_option_silent_tcp_connection_drop_enabled

    @property
    def firewall_setting_engine_option_block_same_src_dst_ip_enabled(self):
        """Gets the firewall_setting_engine_option_block_same_src_dst_ip_enabled of this ComputerSettings.  # noqa: E501

        Block Same Src-Dest IP Address  # noqa: E501

        :return: The firewall_setting_engine_option_block_same_src_dst_ip_enabled of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_engine_option_block_same_src_dst_ip_enabled

    @firewall_setting_engine_option_block_same_src_dst_ip_enabled.setter
    def firewall_setting_engine_option_block_same_src_dst_ip_enabled(self, firewall_setting_engine_option_block_same_src_dst_ip_enabled):
        """Sets the firewall_setting_engine_option_block_same_src_dst_ip_enabled of this ComputerSettings.

        Block Same Src-Dest IP Address  # noqa: E501

        :param firewall_setting_engine_option_block_same_src_dst_ip_enabled: The firewall_setting_engine_option_block_same_src_dst_ip_enabled of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_engine_option_block_same_src_dst_ip_enabled = firewall_setting_engine_option_block_same_src_dst_ip_enabled

    @property
    def firewall_setting_engine_option_force_allow_dhcp_dns(self):
        """Gets the firewall_setting_engine_option_force_allow_dhcp_dns of this ComputerSettings.  # noqa: E501

        Force Allow DHCP DNS  # noqa: E501

        :return: The firewall_setting_engine_option_force_allow_dhcp_dns of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_engine_option_force_allow_dhcp_dns

    @firewall_setting_engine_option_force_allow_dhcp_dns.setter
    def firewall_setting_engine_option_force_allow_dhcp_dns(self, firewall_setting_engine_option_force_allow_dhcp_dns):
        """Sets the firewall_setting_engine_option_force_allow_dhcp_dns of this ComputerSettings.

        Force Allow DHCP DNS  # noqa: E501

        :param firewall_setting_engine_option_force_allow_dhcp_dns: The firewall_setting_engine_option_force_allow_dhcp_dns of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_engine_option_force_allow_dhcp_dns = firewall_setting_engine_option_force_allow_dhcp_dns

    @property
    def firewall_setting_reconnaissance_include_ip_list_id(self):
        """Gets the firewall_setting_reconnaissance_include_ip_list_id of this ComputerSettings.  # noqa: E501

        Reconnaissance Scan Detection - Computers/Networks on which to perform detection  # noqa: E501

        :return: The firewall_setting_reconnaissance_include_ip_list_id of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_reconnaissance_include_ip_list_id

    @firewall_setting_reconnaissance_include_ip_list_id.setter
    def firewall_setting_reconnaissance_include_ip_list_id(self, firewall_setting_reconnaissance_include_ip_list_id):
        """Sets the firewall_setting_reconnaissance_include_ip_list_id of this ComputerSettings.

        Reconnaissance Scan Detection - Computers/Networks on which to perform detection  # noqa: E501

        :param firewall_setting_reconnaissance_include_ip_list_id: The firewall_setting_reconnaissance_include_ip_list_id of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_reconnaissance_include_ip_list_id = firewall_setting_reconnaissance_include_ip_list_id

    @property
    def firewall_setting_engine_options_enabled(self):
        """Gets the firewall_setting_engine_options_enabled of this ComputerSettings.  # noqa: E501

        Use custom driver settings  # noqa: E501

        :return: The firewall_setting_engine_options_enabled of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_engine_options_enabled

    @firewall_setting_engine_options_enabled.setter
    def firewall_setting_engine_options_enabled(self, firewall_setting_engine_options_enabled):
        """Sets the firewall_setting_engine_options_enabled of this ComputerSettings.

        Use custom driver settings  # noqa: E501

        :param firewall_setting_engine_options_enabled: The firewall_setting_engine_options_enabled of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_engine_options_enabled = firewall_setting_engine_options_enabled

    @property
    def firewall_setting_reconnaissance_block_tcp_syn_fin_scan_duration(self):
        """Gets the firewall_setting_reconnaissance_block_tcp_syn_fin_scan_duration of this ComputerSettings.  # noqa: E501

        TCP SYNFIN Scan - Block Traffic  # noqa: E501

        :return: The firewall_setting_reconnaissance_block_tcp_syn_fin_scan_duration of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_reconnaissance_block_tcp_syn_fin_scan_duration

    @firewall_setting_reconnaissance_block_tcp_syn_fin_scan_duration.setter
    def firewall_setting_reconnaissance_block_tcp_syn_fin_scan_duration(self, firewall_setting_reconnaissance_block_tcp_syn_fin_scan_duration):
        """Sets the firewall_setting_reconnaissance_block_tcp_syn_fin_scan_duration of this ComputerSettings.

        TCP SYNFIN Scan - Block Traffic  # noqa: E501

        :param firewall_setting_reconnaissance_block_tcp_syn_fin_scan_duration: The firewall_setting_reconnaissance_block_tcp_syn_fin_scan_duration of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_reconnaissance_block_tcp_syn_fin_scan_duration = firewall_setting_reconnaissance_block_tcp_syn_fin_scan_duration

    @property
    def web_reputation_setting_security_block_untested_pages_enabled(self):
        """Gets the web_reputation_setting_security_block_untested_pages_enabled of this ComputerSettings.  # noqa: E501

        Block Untested Pages  # noqa: E501

        :return: The web_reputation_setting_security_block_untested_pages_enabled of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._web_reputation_setting_security_block_untested_pages_enabled

    @web_reputation_setting_security_block_untested_pages_enabled.setter
    def web_reputation_setting_security_block_untested_pages_enabled(self, web_reputation_setting_security_block_untested_pages_enabled):
        """Sets the web_reputation_setting_security_block_untested_pages_enabled of this ComputerSettings.

        Block Untested Pages  # noqa: E501

        :param web_reputation_setting_security_block_untested_pages_enabled: The web_reputation_setting_security_block_untested_pages_enabled of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._web_reputation_setting_security_block_untested_pages_enabled = web_reputation_setting_security_block_untested_pages_enabled

    @property
    def web_reputation_setting_allowed_url_domains(self):
        """Gets the web_reputation_setting_allowed_url_domains of this ComputerSettings.  # noqa: E501

        Allowed Domain URLs  # noqa: E501

        :return: The web_reputation_setting_allowed_url_domains of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._web_reputation_setting_allowed_url_domains

    @web_reputation_setting_allowed_url_domains.setter
    def web_reputation_setting_allowed_url_domains(self, web_reputation_setting_allowed_url_domains):
        """Sets the web_reputation_setting_allowed_url_domains of this ComputerSettings.

        Allowed Domain URLs  # noqa: E501

        :param web_reputation_setting_allowed_url_domains: The web_reputation_setting_allowed_url_domains of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._web_reputation_setting_allowed_url_domains = web_reputation_setting_allowed_url_domains

    @property
    def firewall_setting_event_log_file_ignore_source_ip_list_id(self):
        """Gets the firewall_setting_event_log_file_ignore_source_ip_list_id of this ComputerSettings.  # noqa: E501

        Do not record events with source IP of  # noqa: E501

        :return: The firewall_setting_event_log_file_ignore_source_ip_list_id of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_event_log_file_ignore_source_ip_list_id

    @firewall_setting_event_log_file_ignore_source_ip_list_id.setter
    def firewall_setting_event_log_file_ignore_source_ip_list_id(self, firewall_setting_event_log_file_ignore_source_ip_list_id):
        """Sets the firewall_setting_event_log_file_ignore_source_ip_list_id of this ComputerSettings.

        Do not record events with source IP of  # noqa: E501

        :param firewall_setting_event_log_file_ignore_source_ip_list_id: The firewall_setting_event_log_file_ignore_source_ip_list_id of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_event_log_file_ignore_source_ip_list_id = firewall_setting_event_log_file_ignore_source_ip_list_id

    @property
    def firewall_setting_engine_option_drop_ipv6_fragments_lower_than_min_mtu_enabled(self):
        """Gets the firewall_setting_engine_option_drop_ipv6_fragments_lower_than_min_mtu_enabled of this ComputerSettings.  # noqa: E501

        Drop IPv6 Fragments Lower Than minimum MTU  # noqa: E501

        :return: The firewall_setting_engine_option_drop_ipv6_fragments_lower_than_min_mtu_enabled of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_engine_option_drop_ipv6_fragments_lower_than_min_mtu_enabled

    @firewall_setting_engine_option_drop_ipv6_fragments_lower_than_min_mtu_enabled.setter
    def firewall_setting_engine_option_drop_ipv6_fragments_lower_than_min_mtu_enabled(self, firewall_setting_engine_option_drop_ipv6_fragments_lower_than_min_mtu_enabled):
        """Sets the firewall_setting_engine_option_drop_ipv6_fragments_lower_than_min_mtu_enabled of this ComputerSettings.

        Drop IPv6 Fragments Lower Than minimum MTU  # noqa: E501

        :param firewall_setting_engine_option_drop_ipv6_fragments_lower_than_min_mtu_enabled: The firewall_setting_engine_option_drop_ipv6_fragments_lower_than_min_mtu_enabled of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_engine_option_drop_ipv6_fragments_lower_than_min_mtu_enabled = firewall_setting_engine_option_drop_ipv6_fragments_lower_than_min_mtu_enabled

    @property
    def platform_setting_auto_assign_new_intrusion_prevention_rules_enabled(self):
        """Gets the platform_setting_auto_assign_new_intrusion_prevention_rules_enabled of this ComputerSettings.  # noqa: E501

        Automatically assign new Intrusion Prevention Rules as required by updated  Application Types and Intrusion Prevention Rule dependencies  # noqa: E501

        :return: The platform_setting_auto_assign_new_intrusion_prevention_rules_enabled of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._platform_setting_auto_assign_new_intrusion_prevention_rules_enabled

    @platform_setting_auto_assign_new_intrusion_prevention_rules_enabled.setter
    def platform_setting_auto_assign_new_intrusion_prevention_rules_enabled(self, platform_setting_auto_assign_new_intrusion_prevention_rules_enabled):
        """Sets the platform_setting_auto_assign_new_intrusion_prevention_rules_enabled of this ComputerSettings.

        Automatically assign new Intrusion Prevention Rules as required by updated  Application Types and Intrusion Prevention Rule dependencies  # noqa: E501

        :param platform_setting_auto_assign_new_intrusion_prevention_rules_enabled: The platform_setting_auto_assign_new_intrusion_prevention_rules_enabled of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._platform_setting_auto_assign_new_intrusion_prevention_rules_enabled = platform_setting_auto_assign_new_intrusion_prevention_rules_enabled

    @property
    def firewall_setting_anti_evasion_check_rst_no_connection(self):
        """Gets the firewall_setting_anti_evasion_check_rst_no_connection of this ComputerSettings.  # noqa: E501

        RST packet out of connection  # noqa: E501

        :return: The firewall_setting_anti_evasion_check_rst_no_connection of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._firewall_setting_anti_evasion_check_rst_no_connection

    @firewall_setting_anti_evasion_check_rst_no_connection.setter
    def firewall_setting_anti_evasion_check_rst_no_connection(self, firewall_setting_anti_evasion_check_rst_no_connection):
        """Sets the firewall_setting_anti_evasion_check_rst_no_connection of this ComputerSettings.

        RST packet out of connection  # noqa: E501

        :param firewall_setting_anti_evasion_check_rst_no_connection: The firewall_setting_anti_evasion_check_rst_no_connection of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._firewall_setting_anti_evasion_check_rst_no_connection = firewall_setting_anti_evasion_check_rst_no_connection

    @property
    def web_reputation_setting_blocked_urls(self):
        """Gets the web_reputation_setting_blocked_urls of this ComputerSettings.  # noqa: E501

        Blocked Page URLs  # noqa: E501

        :return: The web_reputation_setting_blocked_urls of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._web_reputation_setting_blocked_urls

    @web_reputation_setting_blocked_urls.setter
    def web_reputation_setting_blocked_urls(self, web_reputation_setting_blocked_urls):
        """Sets the web_reputation_setting_blocked_urls of this ComputerSettings.

        Blocked Page URLs  # noqa: E501

        :param web_reputation_setting_blocked_urls: The web_reputation_setting_blocked_urls of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._web_reputation_setting_blocked_urls = web_reputation_setting_blocked_urls

    @property
    def platform_setting_combined_mode_network_group_protection_source(self):
        """Gets the platform_setting_combined_mode_network_group_protection_source of this ComputerSettings.  # noqa: E501

        Network Combined Mode Affinity  # noqa: E501

        :return: The platform_setting_combined_mode_network_group_protection_source of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._platform_setting_combined_mode_network_group_protection_source

    @platform_setting_combined_mode_network_group_protection_source.setter
    def platform_setting_combined_mode_network_group_protection_source(self, platform_setting_combined_mode_network_group_protection_source):
        """Sets the platform_setting_combined_mode_network_group_protection_source of this ComputerSettings.

        Network Combined Mode Affinity  # noqa: E501

        :param platform_setting_combined_mode_network_group_protection_source: The platform_setting_combined_mode_network_group_protection_source of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._platform_setting_combined_mode_network_group_protection_source = platform_setting_combined_mode_network_group_protection_source

    @property
    def web_reputation_setting_alerting_enabled(self):
        """Gets the web_reputation_setting_alerting_enabled of this ComputerSettings.  # noqa: E501

        Alert  # noqa: E501

        :return: The web_reputation_setting_alerting_enabled of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._web_reputation_setting_alerting_enabled

    @web_reputation_setting_alerting_enabled.setter
    def web_reputation_setting_alerting_enabled(self, web_reputation_setting_alerting_enabled):
        """Sets the web_reputation_setting_alerting_enabled of this ComputerSettings.

        Alert  # noqa: E501

        :param web_reputation_setting_alerting_enabled: The web_reputation_setting_alerting_enabled of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._web_reputation_setting_alerting_enabled = web_reputation_setting_alerting_enabled

    @property
    def anti_malware_setting_nsx_security_tagging_on_remediation_failure_enabled(self):
        """Gets the anti_malware_setting_nsx_security_tagging_on_remediation_failure_enabled of this ComputerSettings.  # noqa: E501

        Anti-Malware NSX Only Tag on Failure to Remediate  # noqa: E501

        :return: The anti_malware_setting_nsx_security_tagging_on_remediation_failure_enabled of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._anti_malware_setting_nsx_security_tagging_on_remediation_failure_enabled

    @anti_malware_setting_nsx_security_tagging_on_remediation_failure_enabled.setter
    def anti_malware_setting_nsx_security_tagging_on_remediation_failure_enabled(self, anti_malware_setting_nsx_security_tagging_on_remediation_failure_enabled):
        """Sets the anti_malware_setting_nsx_security_tagging_on_remediation_failure_enabled of this ComputerSettings.

        Anti-Malware NSX Only Tag on Failure to Remediate  # noqa: E501

        :param anti_malware_setting_nsx_security_tagging_on_remediation_failure_enabled: The anti_malware_setting_nsx_security_tagging_on_remediation_failure_enabled of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._anti_malware_setting_nsx_security_tagging_on_remediation_failure_enabled = anti_malware_setting_nsx_security_tagging_on_remediation_failure_enabled

    @property
    def integrity_monitoring_setting_cpu_usage_level(self):
        """Gets the integrity_monitoring_setting_cpu_usage_level of this ComputerSettings.  # noqa: E501

        Integrity Monitoring CPU Usage Level:  # noqa: E501

        :return: The integrity_monitoring_setting_cpu_usage_level of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._integrity_monitoring_setting_cpu_usage_level

    @integrity_monitoring_setting_cpu_usage_level.setter
    def integrity_monitoring_setting_cpu_usage_level(self, integrity_monitoring_setting_cpu_usage_level):
        """Sets the integrity_monitoring_setting_cpu_usage_level of this ComputerSettings.

        Integrity Monitoring CPU Usage Level:  # noqa: E501

        :param integrity_monitoring_setting_cpu_usage_level: The integrity_monitoring_setting_cpu_usage_level of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._integrity_monitoring_setting_cpu_usage_level = integrity_monitoring_setting_cpu_usage_level

    @property
    def platform_setting_auto_update_anti_malware_engine_enabled(self):
        """Gets the platform_setting_auto_update_anti_malware_engine_enabled of this ComputerSettings.  # noqa: E501

        Automatically update anti-malware engine  # noqa: E501

        :return: The platform_setting_auto_update_anti_malware_engine_enabled of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._platform_setting_auto_update_anti_malware_engine_enabled

    @platform_setting_auto_update_anti_malware_engine_enabled.setter
    def platform_setting_auto_update_anti_malware_engine_enabled(self, platform_setting_auto_update_anti_malware_engine_enabled):
        """Sets the platform_setting_auto_update_anti_malware_engine_enabled of this ComputerSettings.

        Automatically update anti-malware engine  # noqa: E501

        :param platform_setting_auto_update_anti_malware_engine_enabled: The platform_setting_auto_update_anti_malware_engine_enabled of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._platform_setting_auto_update_anti_malware_engine_enabled = platform_setting_auto_update_anti_malware_engine_enabled

    @property
    def intrusion_prevention_setting_combined_mode_protection_source(self):
        """Gets the intrusion_prevention_setting_combined_mode_protection_source of this ComputerSettings.  # noqa: E501

        Intrusion Prevention  # noqa: E501

        :return: The intrusion_prevention_setting_combined_mode_protection_source of this ComputerSettings.  # noqa: E501
        :rtype: SettingValue
        """
        return self._intrusion_prevention_setting_combined_mode_protection_source

    @intrusion_prevention_setting_combined_mode_protection_source.setter
    def intrusion_prevention_setting_combined_mode_protection_source(self, intrusion_prevention_setting_combined_mode_protection_source):
        """Sets the intrusion_prevention_setting_combined_mode_protection_source of this ComputerSettings.

        Intrusion Prevention  # noqa: E501

        :param intrusion_prevention_setting_combined_mode_protection_source: The intrusion_prevention_setting_combined_mode_protection_source of this ComputerSettings.  # noqa: E501
        :type: SettingValue
        """

        self._intrusion_prevention_setting_combined_mode_protection_source = intrusion_prevention_setting_combined_mode_protection_source

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ComputerSettings, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ComputerSettings):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other

