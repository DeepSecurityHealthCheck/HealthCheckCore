# coding: utf-8

"""
    Trend Micro Deep Security API

    Copyright 2018 - 2020 Trend Micro Incorporated.<br/>Get protected, stay secured, and keep informed with Trend Micro Deep Security's new RESTful API. Access system data and manage security configurations to automate your security workflows and integrate Deep Security into your CI/CD pipeline.  # noqa: E501

    OpenAPI spec version: 20.0.3
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class AzureVMVirtualMachineSummary(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'cloud_provider': 'str',
        'subscription_id': 'str',
        'operating_system': 'str',
        'public_virtual_ip_address': 'str',
        'private_ip_address': 'str',
        'public_ip_address': 'str',
        'location': 'str',
        'instance_id': 'str',
        'image_id': 'str',
        'cloud_service': 'str',
        'deployment_id': 'str',
        'type': 'str',
        'state': 'str',
        'dns_name': 'str'
    }

    attribute_map = {
        'cloud_provider': 'cloudProvider',
        'subscription_id': 'subscriptionID',
        'operating_system': 'operatingSystem',
        'public_virtual_ip_address': 'publicVirtualIPAddress',
        'private_ip_address': 'privateIPAddress',
        'public_ip_address': 'publicIPAddress',
        'location': 'location',
        'instance_id': 'instanceID',
        'image_id': 'imageID',
        'cloud_service': 'cloudService',
        'deployment_id': 'deploymentID',
        'type': 'type',
        'state': 'state',
        'dns_name': 'DNSName'
    }

    def __init__(self, cloud_provider=None, subscription_id=None, operating_system=None, public_virtual_ip_address=None, private_ip_address=None, public_ip_address=None, location=None, instance_id=None, image_id=None, cloud_service=None, deployment_id=None, type=None, state=None, dns_name=None):  # noqa: E501
        """AzureVMVirtualMachineSummary - a model defined in Swagger"""  # noqa: E501

        self._cloud_provider = None
        self._subscription_id = None
        self._operating_system = None
        self._public_virtual_ip_address = None
        self._private_ip_address = None
        self._public_ip_address = None
        self._location = None
        self._instance_id = None
        self._image_id = None
        self._cloud_service = None
        self._deployment_id = None
        self._type = None
        self._state = None
        self._dns_name = None
        self.discriminator = None

        if cloud_provider is not None:
            self.cloud_provider = cloud_provider
        if subscription_id is not None:
            self.subscription_id = subscription_id
        if operating_system is not None:
            self.operating_system = operating_system
        if public_virtual_ip_address is not None:
            self.public_virtual_ip_address = public_virtual_ip_address
        if private_ip_address is not None:
            self.private_ip_address = private_ip_address
        if public_ip_address is not None:
            self.public_ip_address = public_ip_address
        if location is not None:
            self.location = location
        if instance_id is not None:
            self.instance_id = instance_id
        if image_id is not None:
            self.image_id = image_id
        if cloud_service is not None:
            self.cloud_service = cloud_service
        if deployment_id is not None:
            self.deployment_id = deployment_id
        if type is not None:
            self.type = type
        if state is not None:
            self.state = state
        if dns_name is not None:
            self.dns_name = dns_name

    @property
    def cloud_provider(self):
        """Gets the cloud_provider of this AzureVMVirtualMachineSummary.  # noqa: E501

        Cloud provider: \"Azure\".  # noqa: E501

        :return: The cloud_provider of this AzureVMVirtualMachineSummary.  # noqa: E501
        :rtype: str
        """
        return self._cloud_provider

    @cloud_provider.setter
    def cloud_provider(self, cloud_provider):
        """Sets the cloud_provider of this AzureVMVirtualMachineSummary.

        Cloud provider: \"Azure\".  # noqa: E501

        :param cloud_provider: The cloud_provider of this AzureVMVirtualMachineSummary.  # noqa: E501
        :type: str
        """

        self._cloud_provider = cloud_provider

    @property
    def subscription_id(self):
        """Gets the subscription_id of this AzureVMVirtualMachineSummary.  # noqa: E501

        Subscription ID. Searchable as String.  # noqa: E501

        :return: The subscription_id of this AzureVMVirtualMachineSummary.  # noqa: E501
        :rtype: str
        """
        return self._subscription_id

    @subscription_id.setter
    def subscription_id(self, subscription_id):
        """Sets the subscription_id of this AzureVMVirtualMachineSummary.

        Subscription ID. Searchable as String.  # noqa: E501

        :param subscription_id: The subscription_id of this AzureVMVirtualMachineSummary.  # noqa: E501
        :type: str
        """

        self._subscription_id = subscription_id

    @property
    def operating_system(self):
        """Gets the operating_system of this AzureVMVirtualMachineSummary.  # noqa: E501

        Operating system, for example: \"Microsoft Windows\". Searchable as String.  # noqa: E501

        :return: The operating_system of this AzureVMVirtualMachineSummary.  # noqa: E501
        :rtype: str
        """
        return self._operating_system

    @operating_system.setter
    def operating_system(self, operating_system):
        """Sets the operating_system of this AzureVMVirtualMachineSummary.

        Operating system, for example: \"Microsoft Windows\". Searchable as String.  # noqa: E501

        :param operating_system: The operating_system of this AzureVMVirtualMachineSummary.  # noqa: E501
        :type: str
        """

        self._operating_system = operating_system

    @property
    def public_virtual_ip_address(self):
        """Gets the public_virtual_ip_address of this AzureVMVirtualMachineSummary.  # noqa: E501

        Public virtual IP address. Searchable as String.  # noqa: E501

        :return: The public_virtual_ip_address of this AzureVMVirtualMachineSummary.  # noqa: E501
        :rtype: str
        """
        return self._public_virtual_ip_address

    @public_virtual_ip_address.setter
    def public_virtual_ip_address(self, public_virtual_ip_address):
        """Sets the public_virtual_ip_address of this AzureVMVirtualMachineSummary.

        Public virtual IP address. Searchable as String.  # noqa: E501

        :param public_virtual_ip_address: The public_virtual_ip_address of this AzureVMVirtualMachineSummary.  # noqa: E501
        :type: str
        """

        self._public_virtual_ip_address = public_virtual_ip_address

    @property
    def private_ip_address(self):
        """Gets the private_ip_address of this AzureVMVirtualMachineSummary.  # noqa: E501

        Private IP address. Searchable as String.  # noqa: E501

        :return: The private_ip_address of this AzureVMVirtualMachineSummary.  # noqa: E501
        :rtype: str
        """
        return self._private_ip_address

    @private_ip_address.setter
    def private_ip_address(self, private_ip_address):
        """Sets the private_ip_address of this AzureVMVirtualMachineSummary.

        Private IP address. Searchable as String.  # noqa: E501

        :param private_ip_address: The private_ip_address of this AzureVMVirtualMachineSummary.  # noqa: E501
        :type: str
        """

        self._private_ip_address = private_ip_address

    @property
    def public_ip_address(self):
        """Gets the public_ip_address of this AzureVMVirtualMachineSummary.  # noqa: E501

        Public IP address. Searchable as String.  # noqa: E501

        :return: The public_ip_address of this AzureVMVirtualMachineSummary.  # noqa: E501
        :rtype: str
        """
        return self._public_ip_address

    @public_ip_address.setter
    def public_ip_address(self, public_ip_address):
        """Sets the public_ip_address of this AzureVMVirtualMachineSummary.

        Public IP address. Searchable as String.  # noqa: E501

        :param public_ip_address: The public_ip_address of this AzureVMVirtualMachineSummary.  # noqa: E501
        :type: str
        """

        self._public_ip_address = public_ip_address

    @property
    def location(self):
        """Gets the location of this AzureVMVirtualMachineSummary.  # noqa: E501

        Physical location of the VM, for example: \"East US\". Searchable as String.  # noqa: E501

        :return: The location of this AzureVMVirtualMachineSummary.  # noqa: E501
        :rtype: str
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this AzureVMVirtualMachineSummary.

        Physical location of the VM, for example: \"East US\". Searchable as String.  # noqa: E501

        :param location: The location of this AzureVMVirtualMachineSummary.  # noqa: E501
        :type: str
        """

        self._location = location

    @property
    def instance_id(self):
        """Gets the instance_id of this AzureVMVirtualMachineSummary.  # noqa: E501

        Instance ID. Searchable as String.  # noqa: E501

        :return: The instance_id of this AzureVMVirtualMachineSummary.  # noqa: E501
        :rtype: str
        """
        return self._instance_id

    @instance_id.setter
    def instance_id(self, instance_id):
        """Sets the instance_id of this AzureVMVirtualMachineSummary.

        Instance ID. Searchable as String.  # noqa: E501

        :param instance_id: The instance_id of this AzureVMVirtualMachineSummary.  # noqa: E501
        :type: str
        """

        self._instance_id = instance_id

    @property
    def image_id(self):
        """Gets the image_id of this AzureVMVirtualMachineSummary.  # noqa: E501

        Image ID, for example: \"a699494373c04fc0bc8f2bb1389d6106__Windows-Server-2012-R2-201503.01-en.us-127GB.vhd\". Searchable as String.  # noqa: E501

        :return: The image_id of this AzureVMVirtualMachineSummary.  # noqa: E501
        :rtype: str
        """
        return self._image_id

    @image_id.setter
    def image_id(self, image_id):
        """Sets the image_id of this AzureVMVirtualMachineSummary.

        Image ID, for example: \"a699494373c04fc0bc8f2bb1389d6106__Windows-Server-2012-R2-201503.01-en.us-127GB.vhd\". Searchable as String.  # noqa: E501

        :param image_id: The image_id of this AzureVMVirtualMachineSummary.  # noqa: E501
        :type: str
        """

        self._image_id = image_id

    @property
    def cloud_service(self):
        """Gets the cloud_service of this AzureVMVirtualMachineSummary.  # noqa: E501

        Cloud service, for example: \"DH-DC\". Searchable as String.  # noqa: E501

        :return: The cloud_service of this AzureVMVirtualMachineSummary.  # noqa: E501
        :rtype: str
        """
        return self._cloud_service

    @cloud_service.setter
    def cloud_service(self, cloud_service):
        """Sets the cloud_service of this AzureVMVirtualMachineSummary.

        Cloud service, for example: \"DH-DC\". Searchable as String.  # noqa: E501

        :param cloud_service: The cloud_service of this AzureVMVirtualMachineSummary.  # noqa: E501
        :type: str
        """

        self._cloud_service = cloud_service

    @property
    def deployment_id(self):
        """Gets the deployment_id of this AzureVMVirtualMachineSummary.  # noqa: E501

        Deployment ID, for example: \"76ab36a0fb8d4c4ab6b802acdf58b3a4\". Searchable as String.  # noqa: E501

        :return: The deployment_id of this AzureVMVirtualMachineSummary.  # noqa: E501
        :rtype: str
        """
        return self._deployment_id

    @deployment_id.setter
    def deployment_id(self, deployment_id):
        """Sets the deployment_id of this AzureVMVirtualMachineSummary.

        Deployment ID, for example: \"76ab36a0fb8d4c4ab6b802acdf58b3a4\". Searchable as String.  # noqa: E501

        :param deployment_id: The deployment_id of this AzureVMVirtualMachineSummary.  # noqa: E501
        :type: str
        """

        self._deployment_id = deployment_id

    @property
    def type(self):
        """Gets the type of this AzureVMVirtualMachineSummary.  # noqa: E501

        Hardware type, for example: \"Standard_DS1_v2\". Searchable as String.  # noqa: E501

        :return: The type of this AzureVMVirtualMachineSummary.  # noqa: E501
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this AzureVMVirtualMachineSummary.

        Hardware type, for example: \"Standard_DS1_v2\". Searchable as String.  # noqa: E501

        :param type: The type of this AzureVMVirtualMachineSummary.  # noqa: E501
        :type: str
        """

        self._type = type

    @property
    def state(self):
        """Gets the state of this AzureVMVirtualMachineSummary.  # noqa: E501

        Power state, for example, \"POWER ON\".  # noqa: E501

        :return: The state of this AzureVMVirtualMachineSummary.  # noqa: E501
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this AzureVMVirtualMachineSummary.

        Power state, for example, \"POWER ON\".  # noqa: E501

        :param state: The state of this AzureVMVirtualMachineSummary.  # noqa: E501
        :type: str
        """

        self._state = state

    @property
    def dns_name(self):
        """Gets the dns_name of this AzureVMVirtualMachineSummary.  # noqa: E501


        :return: The dns_name of this AzureVMVirtualMachineSummary.  # noqa: E501
        :rtype: str
        """
        return self._dns_name

    @dns_name.setter
    def dns_name(self, dns_name):
        """Sets the dns_name of this AzureVMVirtualMachineSummary.


        :param dns_name: The dns_name of this AzureVMVirtualMachineSummary.  # noqa: E501
        :type: str
        """

        self._dns_name = dns_name

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(AzureVMVirtualMachineSummary, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, AzureVMVirtualMachineSummary):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other

